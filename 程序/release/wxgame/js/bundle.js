var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var MainSceneControl_1 = require("./script/MainSceneControl");
var Role_1 = require("./script/Role");
var OperationButton_1 = require("./script/OperationButton");
var Bullet_1 = require("./script/Bullet");
var Candy_1 = require("./script/Candy");
var Enemy_1 = require("./script/Enemy");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/MainSceneControl.ts", MainSceneControl_1.default);
        reg("script/Role.ts", Role_1.default);
        reg("script/OperationButton.ts", OperationButton_1.default);
        reg("script/Bullet.ts", Bullet_1.default);
        reg("script/Candy.ts", Candy_1.default);
        reg("script/Enemy.ts", Enemy_1.default);
    };
    GameConfig.width = 750;
    GameConfig.height = 1334;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "vertical";
    GameConfig.alignV = "top";
    GameConfig.alignH = "center";
    GameConfig.startScene = "scene/MainScene.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = true;
    GameConfig.physicsDebug = true;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./script/Bullet":3,"./script/Candy":4,"./script/Enemy":5,"./script/MainSceneControl":6,"./script/OperationButton":7,"./script/Role":8}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Bullet = /** @class */ (function (_super) {
    __extends(Bullet, _super);
    function Bullet() {
        return _super.call(this) || this;
    }
    Bullet.prototype.onEnable = function () {
        this.init();
    };
    /**初始化一些属性*/
    Bullet.prototype.init = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default);
        this.enemyParent = this.mainSceneControl.enemyParent;
        this.selfSpeed = 15;
        this.attackValue = 0.5;
        // 属性赋值
        this.role_01 = this.selfScene['MainSceneControl'].role_01;
        this.attackValue = this.role_01['Role'].role_property.attackValue;
        this.self['Bullet'] = this;
        // 索敌
        this.lockedBulletTarget();
    };
    /**锁定最近的那个敌人
     * 如果没有敌人，且屏幕上敌人存在，那么会锁定一个敌人
    */
    Bullet.prototype.lockedBulletTarget = function () {
        // 两点之间的距离数组
        var distanceArr = [];
        for (var i = 0; i < this.enemyParent._children.length; i++) {
            var enemy = this.enemyParent._children[i];
            //两点之间的距离
            var dx = enemy.x - this.self.x;
            var dy = enemy.y - this.self.y;
            var distance = Math.sqrt(dx * dx + dy * dy);
            var object = {
                distance: distance,
                name: enemy.name
            };
            distanceArr.push(object);
        }
        // 距离排序
        var compare = function (obj1, obj2) {
            var val1 = obj1.distance;
            var val2 = obj2.distance;
            if (val1 < val2) {
                return -1;
            }
            else if (val1 > val2) {
                return 1;
            }
            else {
                return 0;
            }
        };
        distanceArr.sort(compare);
        if (distanceArr.length > 0) {
            this.bulletTarget = this.enemyParent.getChildByName(distanceArr[0].name);
        }
    };
    /**子弹移动
     * 子弹只有当目标对象和目标对象在父节点内的时候才会移动
     * 目标对象永远存在，只不过他被移除了，所以bulletTarget永不为空，只能判断父节点是否存在
     * 那么就会重新选择目标
    */
    Bullet.prototype.bulletMove = function () {
        // this.lockedBulletTarget();
        if (this.bulletTarget && this.bulletTarget.parent) {
            // x,y分别相减是两点连线向量
            var point = new Laya.Point(this.bulletTarget.x - this.self.x, this.bulletTarget.y - this.self.y);
            // 归一化，向量长度为1。
            point.normalize();
            //向量相加
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
            // 射程为500，超过射程消失
            if (this.self.y <= Laya.stage.width * 1 / 3) {
                this.self.removeSelf();
                return;
            }
        }
        else {
            this.self.removeSelf();
        }
        // // 消失
        // if (this.enemyParent._children.length === 0) {
        //     this.self.removeSelf();
        // }
    };
    Bullet.prototype.onUpdate = function () {
        // 移动
        this.bulletMove();
        // 超出横向范围消失，一般不会触发
        if (this.self.x > 750 + this.self.width + 50 || this.self.x < -this.self.width) {
            this.self.removeSelf();
        }
        // 碰到任何一个怪物，子弹消失怪物掉血
        // 如果没有到自己的位置，那么算出最近的那个敌人攻击
        for (var i = 0; i < this.enemyParent._children.length; i++) {
            var enemy = this.enemyParent._children[i];
            var differenceX = Math.abs(enemy.x - this.self.x);
            var differenceY = Math.abs(enemy.y - this.self.y);
            if (differenceX < 30 && differenceY < 30) {
                this.buckleEnemyBlood(enemy);
                this.self.removeSelf();
            }
        }
    };
    /**攻击后，敌人扣血规则
     * 根据攻击力扣除血量
    */
    Bullet.prototype.buckleEnemyBlood = function (enemy) {
        var enemyHealth = enemy.getChildByName('health');
        var bloodLabel = enemyHealth.getChildByName('bloodLabel');
        bloodLabel.text = (Number(bloodLabel.text) - this.attackValue).toString();
        enemyHealth.value = Number(bloodLabel.text) / enemy['Enemy'].enemyProperty.blood;
    };
    Bullet.prototype.onDisable = function () {
        Laya.Pool.recover('bullet', this.self);
    };
    return Bullet;
}(Laya.Script));
exports.default = Bullet;
},{"./MainSceneControl":6}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Candy = /** @class */ (function (_super) {
    __extends(Candy, _super);
    function Candy() {
        return _super.call(this) || this;
    }
    Candy.prototype.onEnable = function () {
        this.initProperty();
        this.locationInit();
    };
    /**初始化*/
    Candy.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default); //场景脚本组件
        this.roleParent = this.mainSceneControl.roleParent;
        this.scoreLabel = this.mainSceneControl.scoreLabel;
        this.speed = 6;
        this.self['Candy'] = this;
        this.tab = this.mainSceneControl.candyCount;
        this.timeControl = 0;
        this.moveSwitch = false;
        this.spaceY = 5;
    };
    /**初始位置初始化*/
    Candy.prototype.locationInit = function () {
        this.posYArr = [];
        this.self.y = -this.tab * (this.self.height + this.spaceY);
        for (var i = 0; i < 10; i++) {
            var y = -(this.self.height + this.spaceY) * i;
            this.posYArr.push(y);
        }
    };
    /**当第一个糖果被吃掉后的移动函数*/
    Candy.prototype.moveRules = function () {
        Laya.Tween.to(this.self, { y: this.self.y + this.self.height + this.spaceY }, 100, Laya.Ease.circIn, Laya.Handler.create(this, function () {
        }, []), 0);
    };
    /**跳到地上变成一个敌人*/
    Candy.prototype.becomeEnemy = function () {
    };
    Candy.prototype.onUpdate = function () {
        this.timeControl += 0.1;
        if (this.timeControl > 20) {
            return;
        }
        this.self.y += 3;
    };
    Candy.prototype.onDisable = function () {
        // 清理动画
        Laya.Tween.clearAll(this);
        if (this.self.name === 'yellowCandy') {
            Laya.Pool.recover('yellowCandy', this.self);
        }
        else if (this.self.name === 'redCandy___') {
            Laya.Pool.recover('redCandy___', this.self);
        }
    };
    return Candy;
}(Laya.Script));
exports.default = Candy;
},{"./MainSceneControl":6}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Role_1 = require("./Role");
var Enemy = /** @class */ (function (_super) {
    __extends(Enemy, _super);
    function Enemy() {
        return _super.call(this) || this;
    }
    Enemy.prototype.onEnable = function () {
        this.initProperty();
    };
    /**初始化*/
    Enemy.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfScene = this.owner.scene;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default); //场景脚本组件
        this.roleParent = this.mainSceneControl.roleParent;
        this.slefTagRole = this.mainSceneControl.enemyTagRole;
        this.tagHealth = this.slefTagRole.getChildByName('health');
        this.selfHealth = this.self.getChildByName('health');
        this.selfHealth.value = 1;
        this.selfSpeed = 4;
        this.attackTnterval = 100;
        this.recordTime = Date.now();
        this.speakBox = this.mainSceneControl.speakBox;
        this.scoreLabel = this.mainSceneControl.scoreLabel;
        this.Role_01 = this.mainSceneControl.role_01.getComponent(Role_1.default);
        this.Role_02 = this.mainSceneControl.role_02.getComponent(Role_1.default);
        this.self['Enemy'] = this;
        this.bucketClink();
        this.enemyPropertySet();
    };
    /**怪物等级包括的一些属性*/
    Enemy.prototype.enemyPropertySet = function () {
        // 属性赋值
        this.enemyProperty = {
            level: '',
            blood: '',
            moveSpeed: '',
            defense: '',
        };
        this.enemyProperty.level = this.mainSceneControl.enemyProperty.level;
        this.enemyProperty.blood = this.mainSceneControl.enemyProperty.blood;
        this.enemyProperty.moveSpeed = this.mainSceneControl.enemyProperty.moveSpeed;
        this.enemyProperty.defense = this.mainSceneControl.enemyProperty.defense;
        this.bloodLabel = this.selfHealth.getChildByName('bloodLabel');
        this.bloodLabel.text = this.enemyProperty.blood;
    };
    /**属性刷新显示规则,血量显示一定是整数*/
    Enemy.prototype.enemyPropertyUpdate = function () {
        // 血量显示,把最后一个变为零
        var str = Math.round(this.enemyProperty.blood * this.selfHealth.value).toString();
        var subStr_01 = str.substring(0, str.length - 1);
        var subStr_02 = subStr_01 + 0;
        this.bloodLabel.text = subStr_02;
    };
    /**敌人点击事件*/
    Enemy.prototype.bucketClink = function () {
        this.self.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.self.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.self.on(Laya.Event.MOUSE_UP, this, this.up);
        this.self.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**点击敌人，敌人头上会出现小锤子，敲打敌人，每点击一次血量会减少;
     * 如果不把敌人打死，那么主角就会被攻击
     * 当然吃到的糖果也会有另外的增益
     * 杀敌暂时不增加分数分数增加*/
    Enemy.prototype.down = function (event) {
        // 主角全部死亡时停止移动
        if (this.roleParent._children.length === 0) {
            return;
        }
        else {
            this.self.scale(0.95, 0.95);
            this.selfHealth.value -= 0.01;
        }
    };
    /**移动*/
    Enemy.prototype.move = function (event) {
    };
    /**抬起*/
    Enemy.prototype.up = function (event) {
        this.self.scale(1, 1);
    };
    /**出屏幕*/
    Enemy.prototype.out = function (event) {
        this.self.scale(1, 1);
    };
    /** 敌人第二阶段移动到主角位置，并且进入主角射程范围的移动规则*/
    Enemy.prototype.enemyMove = function () {
        // x,y分别相减是两点连线向量
        // 向量计算并且归一化，向量长度为1。
        var point = new Laya.Point(this.slefTagRole.x - this.self.x, this.slefTagRole.y - this.self.y);
        point.normalize();
        if (this.slefTagRole.x > Laya.stage.width / 2) { //右边
            if (this.self.x - this.slefTagRole.x < 100) {
                // 发生预警
                this.Role_02.role_Warning = true;
                //向量相加移动
                this.self.x += point.x * this.selfSpeed;
                this.self.y += point.y * this.selfSpeed;
            }
            else {
                this.self.x -= this.selfSpeed;
            }
        }
        else if (this.slefTagRole.x < Laya.stage.width / 2) { //左边
            if (this.slefTagRole.x - this.self.x < 100) {
                // 发生预警
                this.Role_01.role_Warning = true;
                //向量相加移动
                this.self.x += point.x * this.selfSpeed;
                this.self.y += point.y * this.selfSpeed;
            }
            else {
                this.self.x += this.selfSpeed;
            }
        }
    };
    Enemy.prototype.onUpdate = function () {
        this.enemyPropertyUpdate();
        // 主角全部死亡则停止移动
        if (this.roleParent._children.length === 0) {
            return;
        }
        // 血量低于0死亡,并且增加分数,并且关闭主角攻击预警
        if (this.selfHealth.value <= 0) {
            this.scoreLabel.text = (Number(this.scoreLabel.text) + 200).toString();
            this.self.removeSelf();
            this.Role_01.role_Warning = true;
            this.Role_02.role_Warning = true;
        }
        // 到达对象位置后开启攻击开关进行攻击，攻击速度依照时间间隔而定
        var differenceX = Math.abs(this.self.x - this.slefTagRole.x);
        var differenceY = Math.abs(this.self.y - this.slefTagRole.y);
        if (differenceX < 100 && differenceY < 100) {
            var nowTime = Date.now();
            if (nowTime - this.recordTime > this.attackTnterval) {
                this.recordTime = nowTime;
                // 血量判断，目标死亡后，会更换目标
                if (this.tagHealth.value > 0) {
                    this.tagHealth.value -= 0.01;
                }
                else {
                    // 更换目标
                    if (this.slefTagRole.name === 'role_01') {
                        this.slefTagRole = this.mainSceneControl.role_02;
                        this.tagHealth = this.mainSceneControl.role_02.getChildByName('health');
                    }
                    else if (this.slefTagRole.name === 'role_02') {
                        this.slefTagRole = this.mainSceneControl.role_01;
                        this.tagHealth = this.mainSceneControl.role_01.getChildByName('health');
                    }
                }
            }
        }
        else {
            this.enemyMove();
        }
    };
    Enemy.prototype.onDisable = function () {
        Laya.Pool.recover('enemy', this.self);
    };
    return Enemy;
}(Laya.Script));
exports.default = Enemy;
},{"./MainSceneControl":6,"./Role":8}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl = /** @class */ (function (_super) {
    __extends(MainSceneControl, _super);
    function MainSceneControl() {
        return _super.call(this) || this;
    }
    MainSceneControl.prototype.onEnable = function () {
        this.initSecne();
    };
    /**场景初始化*/
    MainSceneControl.prototype.initSecne = function () {
        this.enemyAppear = false;
        this.enemyTagRole = null;
        this.enemyCount = 0;
        // 初始化怪物属性，依次为血量，
        this.enemyProperty = {
            level: 1,
            blood: 200,
            moveSpeed: 10,
            defense: 10,
            creatInterval: 1000
        };
        this.enemyInterval_01 = 500;
        this.enemyTime_01 = Date.now();
        this.enemySwitch_01 = true;
        this.enemyInterval_02 = 500;
        this.enemyTime_02 = Date.now();
        this.enemySwitch_02 = true;
        this.candy_interval = 1000;
        this.creatTime = Date.now();
        this.creatOnOff = true;
        this.nameArr = [];
        this.candyCount = 0;
        this.scoreLabel.text = '0';
        this.rescueNum = 0;
        this.roletInit();
        this.roleSpeakBoxs();
        Laya.MouseManager.multiTouchEnabled = true;
        this.timerControl = 0;
        this.owner['MainSceneControl'] = this; //脚本赋值
    };
    /**主角初始化，成对出现在两个固定位置，每次初始化后的位置可能会调换*/
    MainSceneControl.prototype.roletInit = function () {
        this.role_01 = this.owner.scene.role_01;
        this.role_02 = this.owner.scene.role_02;
        var pic_01 = this.role_01.getChildByName('pic');
        var pic_02 = this.role_02.getChildByName('pic');
        // 随机更换皮肤
        var imageUrl_01 = 'candy/红色桶.png';
        var imageUrl_02 = 'candy/黄色桶.png';
        var randomNum = Math.floor(Math.random() * 2);
        if (randomNum === 0) {
            pic_01.loadImage(imageUrl_01);
            pic_01.name = 'redRole';
            pic_02.loadImage(imageUrl_02);
            pic_02.name = 'yellowRole';
        }
        else {
            pic_02.loadImage(imageUrl_01);
            pic_02.name = 'redRole';
            pic_01.loadImage(imageUrl_02);
            pic_01.name = 'yellowRole';
        }
    };
    /**两个主角对话框的初始化*/
    MainSceneControl.prototype.roleSpeakBoxs = function () {
        for (var i = 0; i < 2; i++) {
            var speakBox = Laya.Pool.getItemByCreateFun('speakBox', this.speakBox.create, this.speakBox);
            this.speakBoxParent.addChild(speakBox);
            if (i === 0) {
                speakBox.pos(this.role_01.x, this.role_01.y);
                this.role_01speak = speakBox;
                this.role_01speak.alpha = 0;
                // 反向和偏移
                var pic = this.role_01speak.getChildByName('pic');
                var label = this.role_01speak.getChildByName('label');
                pic.scaleX = -1;
                label.x += 30;
            }
            else {
                speakBox.pos(this.role_02.x, this.role_02.y);
                this.role_02speak = speakBox;
                this.role_02speak.alpha = 0;
            }
        }
    };
    /**产生糖果*/
    MainSceneControl.prototype.createCandy = function () {
        // 通过对象池创建
        var candy = Laya.Pool.getItemByCreateFun('candy', this.candy.create, this.candy);
        // 随机创建一种颜色糖果
        // 糖果的名称结构是11位字符串加上索引值，方便查找，并且这样使他们的名称唯一
        var randomNum = Math.floor(Math.random() * 2);
        var url_01 = 'candy/黄色糖果.png';
        var url_02 = 'candy/红色糖果.png';
        var url_03 = 'candy/加血糖果.png';
        switch (randomNum) {
            case 0:
                candy.name = 'yellowCandy' + this.candyCount;
                candy.getChildByName('pic').loadImage(url_01);
                break;
            case 1:
                candy.name = 'redCandy___' + this.candyCount;
                candy.getChildByName('pic').loadImage(url_02);
                break;
            // case 2:
            //     candy.name = 'addBlood___' + this.candyCount;
            //     (candy.getChildByName('pic') as Laya.Sprite).loadImage(url_03);
            //     break;
            default:
                break;
        }
        // 随机点击次数
        var clicksLabel = candy.getChildByName('clicksLabel');
        clicksLabel.text = (Math.floor(Math.random() * 3) + 1).toString();
        candy.pos(Laya.stage.width / 2 - candy.width / 2, -100);
        this.candyParent.addChild(candy);
        candy.rotation = 0;
        this.candyCount++;
        return candy;
    };
    /**角色死亡复活状况*/
    MainSceneControl.prototype.roleDeathState = function () {
        // 角色死亡情况
        var len = this.roleParent._children.length;
        if (len === 0) {
            // 死亡
            return;
        }
        else if (len === 1) {
            var speak_01 = this.role_01speak.getChildByName('label');
            var speak_02 = this.role_02speak.getChildByName('label');
            // 复活
            if (this.rescueNum >= 5) {
                this.rescueNum = 0;
                if (this.roleParent._children[0].name === "role_01") {
                    this.roleParent.addChild(this.role_02);
                    this.role_02speak.x -= 150;
                    speak_02.text = '谢谢你啊！';
                }
                else {
                    this.roleParent.addChild(this.role_01);
                    speak_01.text = '谢谢你啊！';
                    this.role_01speak.x += 150;
                }
            }
            else {
                // 待复活提示
                if (this.roleParent._children[0].name === "role_01") {
                    this.role_02speak.alpha = 1;
                    this.role_02speak.x = this.role_02.x;
                    speak_02.text = '连续吃5个糖果不犯错的话我就复活了';
                }
                else {
                    this.role_01speak.alpha = 1;
                    this.role_01speak.x = this.role_01.x;
                    speak_01.text = '连续吃5个糖果不犯错的话我就复活了';
                }
            }
        }
        else if (len === 2) {
            // 保持，复活状态为空
            this.rescueNum === 0;
        }
    };
    /**出现敌人
     * 创建方式决定了敌人出生的位置
    */
    MainSceneControl.prototype.careatEnemy = function (mode) {
        this.enemyCount++;
        if (this.enemyTagRole !== null) {
            var enemy = Laya.Pool.getItemByCreateFun('enemy', this.enemy.create, this.enemy);
            this.enemyParent.addChild(enemy);
            enemy.name = 'enemy' + this.enemyCount; //名称唯一
            enemy.zOrder = -this.enemyCount; // 现出来的显示在前面
            enemy.pivotX = enemy.width / 2;
            enemy.pivotY = enemy.height / 2;
            //出生位置判定,和攻击目标选择
            if (mode === 'left') {
                enemy.pos(-50, 300);
            }
            else if (mode === 'right') {
                enemy.pos(800, 300);
            }
            else if (mode === 'target') {
                if (this.enemyTagRole.x < Laya.stage.width / 2 && this.enemyTagRole.x > 0) {
                    enemy.pos(-50, 300);
                }
                else if (this.enemyTagRole.x >= Laya.stage.width / 2 && this.enemyTagRole.x < Laya.stage.width) {
                    enemy.pos(800, 300);
                }
            }
        }
    };
    /**属性刷新显示规则,血量显示一定是整数，并且是10的倍数
    * 根据时间线的增长，怪物的属性不断增强
    */
    MainSceneControl.prototype.enemyPropertyUpdate = function () {
        // 血量增长
        this.enemyProperty.blood = this.timerControl * 10 + 200;
        // 改成10的倍数
        var str = Math.round(this.enemyProperty.blood).toString();
        var subStr_01 = str.substring(0, str.length - 1);
        var subStr_02 = subStr_01 + 0;
        this.enemyProperty.blood = subStr_02;
    };
    /**属性刷新显示规则*/
    MainSceneControl.prototype.onUpdate = function () {
        // 记录时间
        this.timerControl += 0.01;
        // 根据时间线，刷新怪物属性
        this.enemyPropertyUpdate();
        // 角色死亡复活状况
        this.roleDeathState();
        // 开局创建10个糖果
        if (this.creatOnOff && this.candyCount < 10) {
            for (var i = 0; i < 10; i++) {
                this.createCandy();
            }
        }
        else {
            this.creatOnOff = false;
        }
        // 通过时间间隔产生敌人，左右产生的敌人不一样
        // 左
        if (this.enemySwitch_01) {
            var nowTime = Date.now();
            if (nowTime - this.enemyTime_01 > this.enemyProperty.creatInterval) {
                this.enemyTime_01 = nowTime;
                this.enemyTagRole = this.role_01;
                this.careatEnemy('left');
                this.enemyTagRole = null;
            }
        }
        // 右
        if (this.enemySwitch_02) {
            var nowTime = Date.now();
            if (nowTime - this.enemyTime_02 > this.enemyProperty.creatInterval) {
                this.enemyTime_02 = nowTime;
                this.enemyTagRole = this.role_02;
                this.careatEnemy('right');
                this.enemyTagRole = null;
            }
        }
        // // 通过点击错误产生敌人创建敌人
        // if (this.enemyAppear) {
        //     this.careatEnemy();
        //     this.enemyAppear = false;
        //     this.enemyTagRole = null;
        // }
    };
    MainSceneControl.prototype.onDisable = function () {
    };
    return MainSceneControl;
}(Laya.Script));
exports.default = MainSceneControl;
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var OperationButton = /** @class */ (function (_super) {
    __extends(OperationButton, _super);
    function OperationButton() {
        return _super.call(this) || this;
    }
    OperationButton.prototype.onEnable = function () {
        this.initProperty();
        this.bucketClink();
    };
    OperationButton.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default);
        this.candyParent = this.mainSceneControl.candyParent;
    };
    /**操作按钮的点击事件*/
    OperationButton.prototype.bucketClink = function () {
        this.self.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.self.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.self.on(Laya.Event.MOUSE_UP, this, this.up);
        this.self.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**判断我按下的按钮和准备位置的糖果是否匹配;
     * 如果匹配，那么看下糖果上面写的几次点击次数，需要连续点击到这个次数才可以吃糖果
     * 如果次数没有达到，却点了另一种按钮，那么前面的次数会重置，并且出现一个怪物
     * 如果不匹配，说明点错了，糖果会跳到外面变成一个怪物,则出现一个怪物
     */
    OperationButton.prototype.down = function (event) {
        if (this.candyParent._children.length > 0) {
            var candy = this.candyParent._children[0];
            var clicksLabel = candy.getChildByName('clicksLabel');
            var candyName = candy.name.substring(0, 11);
            var group = candyName + this.self.name;
            var matching_01 = 'redCandy___' + 'redButton';
            var matching_02 = 'yellowCandy' + 'yellowButton';
            if (group === matching_01 || group === matching_02) {
                clicksLabel.text = (Number(clicksLabel.text) - 1).toString();
                // 消除重置点击次数
                if (Number(clicksLabel.text) === 0) {
                    candy.removeSelf();
                    this.createNewCandy();
                    for (var i = 0; i < this.candyParent._children.length; i++) {
                        this.candyParent._children[i]['Candy'].moveRules();
                    }
                }
            }
            else {
                console.log('产生一个敌人');
            }
        }
        this.self.scale(0.9, 0.9);
        // 如果感应区有糖果,找到第一个进入感应区的糖果的唯一名称
    };
    /**在最后面重新生成一个糖果加入队列*/
    OperationButton.prototype.createNewCandy = function () {
        var candy = this.mainSceneControl.createCandy();
        // 这里this.candyParent._children.length - 2，因为已经删除一个了
        var y = this.candyParent._children[this.candyParent._children.length - 2].y;
        candy.y = y - (candy['Candy'].spaceY + candy.height);
        candy['Candy'].newCandy = true;
        candy['Candy'].timeControl = 20;
    };
    /**主角增加属性规则*/
    OperationButton.prototype.roleAddProperty = function (candy) {
        var name = candy.name;
        this.role_01 = this.selfScene['MainSceneControl'].role_01;
        switch (name) {
            case 'yellowCandy':
                this.role_01['Role'].role_property.attackValue += 100;
                break;
            case 'redCandy___':
                this.role_01['Role'].role_property.blood += 100;
                break;
            default:
                break;
        }
    };
    /**移动*/
    OperationButton.prototype.move = function (event) {
    };
    /**抬起*/
    OperationButton.prototype.up = function () {
        this.self.scale(1, 1);
    };
    /**出屏幕*/
    OperationButton.prototype.out = function () {
        this.self.scale(1, 1);
    };
    OperationButton.prototype.onDisable = function () {
    };
    return OperationButton;
}(Laya.Script));
exports.default = OperationButton;
},{"./MainSceneControl":6}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Candy_1 = require("./Candy");
var Role = /** @class */ (function (_super) {
    __extends(Role, _super);
    function Role() {
        return _super.call(this) || this;
    }
    Role.prototype.onEnable = function () {
        this.initProperty();
        this.bucketClink();
        this.rolePropertySet();
    };
    /**初始化*/
    Role.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default); //场景脚本组件
        this.nameArr = this.mainSceneControl.nameArr;
        this.candyParent = this.mainSceneControl.candyParent;
        this.scoreLabel = this.mainSceneControl.scoreLabel;
        this.self['Role'] = this;
        this.nowTime = Date.now();
    };
    /**主角的属性
     *两个主角属性分别计算
     *四个属性依次是，生命值，子弹攻击力，子弹发射频率和弹道速度，防御能力
    */
    Role.prototype.rolePropertySet = function () {
        if (this.self.name === 'role_01') {
            this.role_property = {
                blood: 200,
                attackValue: 100,
                attackSpeed: 100,
                defense: 10,
            };
        }
        else if (this.self.name === 'role_02') {
            this.role_property = {
                blood: 200,
                attackValue: 100,
                attackSpeed: 100,
                defense: 10,
            };
        }
        this.selfHealth = this.self.getChildByName('health');
        this.selfHealth.value = 1;
        this.bloodLabel = this.selfHealth.getChildByName('bloodLabel');
        this.bloodLabel.text = this.role_property.blood;
        var str = Math.round(this.role_property.blood * this.selfHealth.value).toString();
        var subStr_01 = str.substring(0, str.length - 1);
        var subStr_02 = subStr_01 + 0;
        this.bloodLabel.text = subStr_02;
    };
    /**主角的点击事件*/
    Role.prototype.bucketClink = function () {
        this.self.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.self.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.self.on(Laya.Event.MOUSE_UP, this, this.up);
        this.self.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**按下,给予目标位置，糖果走向目标位置;
     * 并且分数增加*/
    Role.prototype.down = function (event) {
        // 目前点击主角的时候关闭对话框，以免扰乱视线,但是只关闭自己的对话框。
        if (this.self.name === 'role_01') {
            this.mainSceneControl.role_01speak.alpha = 0;
        }
        else {
            this.mainSceneControl.role_02speak.alpha = 0;
        }
        this.self.scale(0.9, 0.9);
        // 如果感应区有糖果,找到第一个进入感应区的糖果的唯一名称
        if (this.nameArr[0]) {
            var candyName = this.nameArr[this.nameArr.length - 1];
            var candy = this.candyParent.getChildByName(candyName);
            if (!candy) {
                return;
            }
            var CandyScript = candy.getComponent(Candy_1.default);
            // 给予目标地点,非空说明点击过了,让场景和这个糖果都知道
            if (CandyScript.candyTagRole === null) {
                CandyScript.candyTagRole = this.self;
            }
        }
        else {
            console.log('糖果不在感应区，或者点错了');
        }
    };
    /**移动*/
    Role.prototype.move = function (event) {
    };
    /**抬起*/
    Role.prototype.up = function () {
        this.self.scale(1, 1);
    };
    /**出屏幕*/
    Role.prototype.out = function () {
        this.self.scale(1, 1);
    };
    Role.prototype.onTriggerEnter = function (other, self, contact) {
        console.log('你好!');
    };
    /**创建主角子弹
     * 主角1位置的子弹
    */
    Role.prototype.careatBullet = function () {
        var bullet = Laya.Pool.getItemByCreateFun('bullet', this.bullet.create, this.bullet);
        this.bulletParent.addChild(bullet);
        bullet.pos(this.self.x, this.self.y);
        bullet['Bullet'].location = this.self.name;
    };
    Role.prototype.onUpdate = function () {
        if (this.selfHealth.value <= 0) {
            this.self.removeSelf();
        }
        //创建子弹
        if (this.role_Warning) {
            var nowTime = Date.now();
            if (nowTime - this.nowTime > this.role_property.attackSpeed) {
                this.careatBullet();
                this.nowTime = nowTime;
            }
        }
    };
    Role.prototype.onDisable = function () {
    };
    return Role;
}(Laya.Script));
exports.default = Role;
},{"./Candy":4,"./MainSceneControl":6}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
