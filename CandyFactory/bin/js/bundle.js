var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var MainSceneControl_1 = require("./script/MainSceneControl");
var Role_1 = require("./script/Role");
var Candy_1 = require("./script/Candy");
var Enemy_1 = require("./script/Enemy");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/MainSceneControl.ts", MainSceneControl_1.default);
        reg("script/Role.ts", Role_1.default);
        reg("script/Candy.ts", Candy_1.default);
        reg("script/Enemy.ts", Enemy_1.default);
    };
    GameConfig.width = 750;
    GameConfig.height = 1334;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "vertical";
    GameConfig.alignV = "top";
    GameConfig.alignH = "center";
    GameConfig.startScene = "scene/MainScene.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = true;
    GameConfig.physicsDebug = true;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./script/Candy":3,"./script/Enemy":4,"./script/MainSceneControl":5,"./script/Role":6}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Candy = /** @class */ (function (_super) {
    __extends(Candy, _super);
    function Candy() {
        return _super.call(this) || this;
    }
    Candy.prototype.onEnable = function () {
        this.initProperty();
    };
    /**初始化*/
    Candy.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        var mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default); //场景脚本组件
        this.roleParent = mainSceneControl.roleParent;
        this.nameArr = mainSceneControl.nameArr;
        this.scoreLabel = mainSceneControl.scoreLabel;
        this.targetRole = null;
        this.rig = this.self.getComponent(Laya.RigidBody);
        this.rig.linearVelocity = { x: 0, y: 0.1 }; //此处y值必须不等于0才能正常检测碰撞，并不知道为何
        this.speed = 6;
    };
    Candy.prototype.onTriggerEnter = function (other, self, contact) {
        var otherName = other.owner.name;
        // 糖果名称
        var name = self.owner.name;
        var candyType = name.substring(0, 11);
        // 初次碰撞把唯一的名称放进数组
        if (otherName === 'induction') {
            this.nameArr.push(name);
        }
        else if (otherName === 'yellowRole' || otherName === 'redRole') {
            this.self.removeSelf();
            // 加血道具,如果满血则加1000分
            if (candyType === 'addBlood___') {
                var tagHealth = this.targetRole.getChildByName('health');
                if (tagHealth.value >= 1) {
                    this.scoreLabel.text = (Number(this.scoreLabel.text) + 1000).toString();
                }
                else {
                    tagHealth.value += 0.2;
                    if (tagHealth.value >= 1) {
                        tagHealth.value = 1;
                    }
                }
                return;
            }
            // 普通糖果
            // 名称配对
            var pairName = candyType + otherName;
            var matching_01 = 'yellowCandy' + 'yellowRole';
            var matching_02 = 'redCandy___' + 'redRole';
            if (pairName === matching_01 || pairName === matching_02) {
                this.scoreLabel.text = (Number(this.scoreLabel.text) + 100).toString();
            }
            else {
                // 吃错了就会出现一个敌人，敌人会攻击这个目标
                var mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default); //场景脚本组件
                mainSceneControl.enemyAppear = true;
                // 这个目标位置
                if (this.targetRole.name !== null) {
                    mainSceneControl.tagRoleName = this.targetRole.name;
                }
            }
        }
    };
    Candy.prototype.onTriggerStay = function (other, self, contact) {
    };
    Candy.prototype.onTriggerExit = function (other, self, contact) {
        var otherName = other.owner.name;
        // 碰撞结束删掉
        if (otherName === 'induction') {
            for (var i = 0; i < this.nameArr.length; i++) {
                if (this.nameArr[i] === self.owner.name) {
                    this.nameArr.splice(i, 1);
                }
            }
        }
    };
    Candy.prototype.onUpdate = function () {
        // 主角全部死亡时停止移动
        if (this.roleParent._children.length === 0) {
            this.rig.linearVelocity = { x: 0, y: 0 };
            return;
        }
        // 超出范围消失
        if (this.self.y > Laya.stage.height + 100 || this.self.y < 0 - 100 || this.self.x > 750 + this.self.width + 50 || this.self.x < -this.self.width) {
            this.self.removeSelf();
        }
        // 判断去向
        if (this.targetRole === null) {
            this.self.y += this.speed;
        }
        else {
            // x,y分别相减是两点连线向量
            var point = new Laya.Point(this.targetRole.x - this.self.x, this.targetRole.y - this.self.y);
            // 归一化，向量长度为1。
            point.normalize();
            //向量相加
            this.self.x += point.x * this.speed * 15 / 8;
            this.self.y += point.y * this.speed * 15 / 8;
        }
    };
    Candy.prototype.onDisable = function () {
        if (this.self.name === 'yellowCandy') {
            Laya.Pool.recover('yellowCandy', this.self);
        }
        else if (this.self.name === 'redCandy___') {
            Laya.Pool.recover('redCandy___', this.self);
        }
    };
    return Candy;
}(Laya.Script));
exports.default = Candy;
},{"./MainSceneControl":5}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Enemy = /** @class */ (function (_super) {
    __extends(Enemy, _super);
    function Enemy() {
        return _super.call(this) || this;
    }
    Enemy.prototype.onEnable = function () {
        this.initProperty();
    };
    /**初始化*/
    Enemy.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfHealth = this.self.getChildByName('health');
        this.selfHealth.value = 1;
        this.slefSpeed = 5;
        this.selfScene = this.owner.scene;
        var mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default); //场景脚本组件
        this.roleParent = mainSceneControl.roleParent;
        this.tagRoleName = mainSceneControl.tagRoleName;
        this.tagRole = this.roleParent.getChildByName(this.tagRoleName);
        this.tagHealth = this.tagRole.getChildByName('health');
        this.attackTnterval = 1000;
        this.recordTime = Date.now();
        this.bucketClink();
    };
    /**敌人点击事件*/
    Enemy.prototype.bucketClink = function () {
        this.self.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.self.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.self.on(Laya.Event.MOUSE_UP, this, this.up);
        this.self.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**点击敌人，敌人头上会出现小锤子，敲打敌人，每点击一次血量会减少;
     * 如果不把敌人电死，那么主角就会被攻击至死
     * 当然吃到的糖果也会有另外的增益
     * 杀敌暂时不增加分数分数增加*/
    Enemy.prototype.down = function (event) {
        this.self.scale(0.95, 0.95);
        this.selfHealth.value -= 0.2;
    };
    /**移动*/
    Enemy.prototype.move = function (event) {
    };
    /**抬起*/
    Enemy.prototype.up = function () {
        this.self.scale(1, 1);
    };
    /**出屏幕*/
    Enemy.prototype.out = function () {
        this.self.scale(1, 1);
    };
    /** 敌人移动规则*/
    Enemy.prototype.enemyMove = function () {
        // x,y分别相减是两点连线向量
        // 向量计算并且归一化，向量长度为1。
        var point = new Laya.Point(this.tagRole.x - this.self.x, this.tagRole.y - this.self.y);
        point.normalize();
        if (this.tagRole.x > Laya.stage.width / 2) {
            if (this.self.x - this.tagRole.x < 100) {
                //向量相加
                this.self.x += point.x * this.slefSpeed;
                this.self.y += point.y * this.slefSpeed;
            }
            else {
                this.self.x -= this.slefSpeed;
            }
        }
        else if (this.tagRole.x < Laya.stage.width / 2) {
            if (this.tagRole.x - this.self.x < 100) {
                //向量相加
                this.self.x += point.x * this.slefSpeed;
                this.self.y += point.y * this.slefSpeed;
            }
            else {
                this.self.x += this.slefSpeed;
            }
        }
    };
    Enemy.prototype.onUpdate = function () {
        // 主角全部死亡时停止移动
        if (this.roleParent._children.length === 0) {
            this.self.off(Laya.Event.MOUSE_DOWN, this, this.down);
            this.self.off(Laya.Event.MOUSE_MOVE, this, this.move);
            this.self.off(Laya.Event.MOUSE_UP, this, this.up);
            this.self.off(Laya.Event.MOUSE_OUT, this, this.out);
            return;
        }
        // 血量低于0死亡
        if (this.selfHealth.value <= 0) {
            this.self.removeSelf();
        }
        // 超出范围消失
        if (this.self.y > Laya.stage.height + 100 || this.self.y < 0 - 100 || this.self.x > 750 + this.self.width + 50 || this.self.x < -this.self.width) {
            this.self.removeSelf();
        }
        // 到达对象位置后开启攻击开关进行攻击，攻击速度依照时间间隔而定
        var differenceX = Math.abs(this.self.x - this.tagRole.x);
        var differenceY = Math.abs(this.self.y - this.tagRole.y);
        if (differenceX < 100 && differenceY < 100) {
            var nowTime = Date.now();
            if (nowTime - this.recordTime > this.attackTnterval) {
                this.recordTime = nowTime;
                // 如果这个攻击对象死了，他会直接走向另一个主角，如果都死了那么就停止
                if (this.tagHealth.value > 0) {
                    this.tagHealth.value -= 0.1;
                }
                else {
                    // 如果这个对象死了，并且旁边的主角还在，那么把旁边的主角赋值给这个tagRole；
                    if (this.tagRole.parent === null) {
                        if (this.roleParent._children[0]) {
                            this.tagRole = this.roleParent._children[0];
                            var tagHealth = this.roleParent._children[0].getChildByName('health');
                            this.tagHealth = tagHealth;
                        }
                    }
                }
                console.log('发动一次攻击');
            }
        }
        else {
            this.enemyMove();
        }
    };
    Enemy.prototype.onDisable = function () {
        Laya.Pool.recover('enemy', this.self);
    };
    return Enemy;
}(Laya.Script));
exports.default = Enemy;
},{"./MainSceneControl":5}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl = /** @class */ (function (_super) {
    __extends(MainSceneControl, _super);
    function MainSceneControl() {
        return _super.call(this) || this;
    }
    MainSceneControl.prototype.onEnable = function () {
        this.initSecne();
    };
    /**场景初始化*/
    MainSceneControl.prototype.initSecne = function () {
        this.enemyAppear = false;
        this.tagRoleName = null;
        this.enemyCount = 0;
        this.candy_interval = 500;
        this.creatTime = Date.now();
        this.creatOnOff = true;
        Laya.MouseManager.multiTouchEnabled = true;
        this.nameArr = [];
        this.candyCount = 0;
        this.scoreLabel.text = '0';
        this.GameOver = false;
        this.protagonistInit();
    };
    /**主角初始化，成对出现在两个固定位置，每次初始化后的位置可能会调换*/
    MainSceneControl.prototype.protagonistInit = function () {
        this.role_01 = this.owner.scene.role_01;
        this.role_02 = this.owner.scene.role_02;
        var pic_01 = this.role_01.getChildByName('pic');
        var pic_02 = this.role_02.getChildByName('pic');
        // 随机更换皮肤
        var imageUrl_01 = 'candy/红色桶.png';
        var imageUrl_02 = 'candy/黄色桶.png';
        var randomNum = Math.floor(Math.random() * 2);
        if (randomNum === 0) {
            pic_01.loadImage(imageUrl_01);
            pic_01.name = 'redRole';
            pic_02.loadImage(imageUrl_02);
            pic_02.name = 'yellowRole';
        }
        else {
            pic_02.loadImage(imageUrl_01);
            pic_02.name = 'redRole';
            pic_01.loadImage(imageUrl_02);
            pic_01.name = 'yellowRole';
        }
    };
    /**产生糖果*/
    MainSceneControl.prototype.productionCandy = function () {
        var candy = Laya.Pool.getItemByCreateFun('candy', this.candy.create, this.candy);
        this.candyCount++;
        // 随机创建一种颜色糖果
        // 糖果的名称结构是11位字符串加上索引值，这样使他们的名称唯一
        var randomNum = Math.floor(Math.random() * 3);
        var url_01 = 'candy/黄色糖果.png';
        var url_02 = 'candy/红色糖果.png';
        var url_03 = 'candy/加血.png';
        switch (randomNum) {
            case 0:
                candy.name = 'yellowCandy' + this.candyCount;
                candy.getChildByName('pic').loadImage(url_01);
                break;
            case 1:
                candy.name = 'redCandy___' + this.candyCount;
                candy.getChildByName('pic').loadImage(url_02);
                break;
            case 2:
                candy.name = 'addBlood___' + this.candyCount;
                candy.getChildByName('pic').loadImage(url_03);
                break;
            default:
                break;
        }
        candy.pos(Laya.stage.width / 2 - candy.width / 2, -100);
        this.candyParent.addChild(candy);
        candy.rotation = 0;
    };
    /**出现敌人*/
    MainSceneControl.prototype.careatEnemy = function () {
        this.enemyCount++;
        if (this.tagRoleName !== null) {
            var enemy = Laya.Pool.getItemByCreateFun('enemy', this.enemy.create, this.enemy);
            this.enemyParent.addChild(enemy);
            // 现出来的显示在前面
            enemy.zOrder = -this.enemyCount;
            enemy.pivotX = enemy.width / 2;
            enemy.pivotY = enemy.height / 2;
            var tagRole = this.roleParent.getChildByName(this.tagRoleName);
            if (tagRole.x < Laya.stage.width / 2 && tagRole.x > 0) {
                enemy.pos(-50, 300);
            }
            else if (tagRole.x >= Laya.stage.width / 2 && tagRole.x < Laya.stage.width) {
                enemy.pos(800, 300);
            }
        }
    };
    MainSceneControl.prototype.onUpdate = function () {
        // 主角全部死亡时停止移动
        if (this.roleParent._children.length === 0) {
            return;
        }
        if (this.creatOnOff) {
            var nowTime = Date.now();
            if (nowTime - this.creatTime > this.candy_interval) {
                this.creatTime = nowTime;
                this.productionCandy();
            }
        }
        if (this.enemyAppear) {
            this.careatEnemy();
            this.enemyAppear = false;
            this.tagRoleName = null;
        }
    };
    MainSceneControl.prototype.onDisable = function () {
    };
    return MainSceneControl;
}(Laya.Script));
exports.default = MainSceneControl;
},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Candy_1 = require("./Candy");
var Role = /** @class */ (function (_super) {
    __extends(Role, _super);
    function Role() {
        return _super.call(this) || this;
    }
    Role.prototype.onEnable = function () {
        this.initProperty();
    };
    /**初始化*/
    Role.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        var mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default); //场景脚本组件
        this.nameArr = mainSceneControl.nameArr;
        this.candyParent = mainSceneControl.candyParent;
        this.selfHealth = this.self.getChildByName('health');
        this.selfHealth.value = 1;
        this.bucketClink();
    };
    /**主角的点击事件*/
    Role.prototype.bucketClink = function () {
        this.self.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.self.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.self.on(Laya.Event.MOUSE_UP, this, this.up);
        this.self.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**按下,给予目标位置，糖果走向目标位置;
     * 并且分数增加*/
    Role.prototype.down = function (event) {
        this.self.scale(0.9, 0.9);
        // 如果感应区有糖果,找到第一个进入感应区的糖果的唯一名称
        if (this.nameArr[0]) {
            var candyName = this.nameArr[this.nameArr.length - 1];
            var candy = this.candyParent.getChildByName(candyName);
            var CandyScript = candy.getComponent(Candy_1.default);
            // 给予目标地点,非空说明点击过了
            if (CandyScript.targetRole === null) {
                CandyScript.targetRole = this.self;
            }
        }
        else {
            console.log('糖果不在感应区，或者点错了');
        }
    };
    /**移动*/
    Role.prototype.move = function (event) {
    };
    /**抬起*/
    Role.prototype.up = function () {
        this.self.scale(1, 1);
    };
    /**出屏幕*/
    Role.prototype.out = function () {
        this.self.scale(1, 1);
    };
    Role.prototype.onUpdate = function () {
        if (this.selfHealth.value <= 0) {
            this.self.removeSelf();
        }
    };
    Role.prototype.onDisable = function () {
    };
    return Role;
}(Laya.Script));
exports.default = Role;
},{"./Candy":3,"./MainSceneControl":5}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
