var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var MainSceneControl_1 = require("./script/MainSceneControl");
var Candy_1 = require("./script/Candy");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/MainSceneControl.ts", MainSceneControl_1.default);
        reg("script/Candy.ts", Candy_1.default);
    };
    GameConfig.width = 640;
    GameConfig.height = 1136;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "scene/MainScene.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = true;
    GameConfig.physicsDebug = true;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./script/Candy":3,"./script/MainSceneControl":4}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Candy = /** @class */ (function (_super) {
    __extends(Candy, _super);
    function Candy() {
        return _super.call(this) || this;
    }
    Candy.prototype.onEnable = function () {
        this.initScene();
        // this.candyClink();
    };
    /**初始化场景*/
    Candy.prototype.initScene = function () {
        this.self = this.owner;
        this.touchX = null;
        this.touchY = null;
    };
    /**糖果点击事件，规则是滑动糖果，然后判断方向，并且直接飞向对应方向的的糖果盒子；
     * 如果糖果颜色和盒子颜色不匹配则游戏失败*/
    Candy.prototype.candyClink = function () {
        this.self.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.self.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.self.on(Laya.Event.MOUSE_UP, this, this.up);
        this.self.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**按下*/
    Candy.prototype.down = function (event) {
        this.touchX = event.stageX;
    };
    /**滑动,当滑动一定距离的时候则移动这个糖果
     * 移动之前关闭点击事件*/
    Candy.prototype.move = function (event) {
        if (this.touchX !== null) {
            // 滑动位置
            var stageX = event.stageX;
            var stageY = event.stageY;
            // 滑动距离临界值
            var numberX = 0;
            // console.log(this.touchX);
            // console.log(stageX);
            // console.log(stageX - this.touchX);
            var differenceX = stageX - this.touchX;
            // let differenceY = stageY - this.touchX;
            if (Math.abs(differenceX) > numberX) {
                this.self.off(Laya.Event.MOUSE_DOWN, this, this.down);
                this.self.off(Laya.Event.MOUSE_MOVE, this, this.move);
                this.self.off(Laya.Event.MOUSE_UP, this, this.up);
                this.self.off(Laya.Event.MOUSE_OUT, this, this.out);
                if (differenceX > numberX) {
                    Laya.Tween.to(this.self, { x: 1000, Y: 0 }, 300, null, Laya.Handler.create(this, function () {
                    }, []), 0);
                }
                else if (differenceX < numberX) {
                    Laya.Tween.to(this.self, { x: -1000, Y: 0 }, 300, null, Laya.Handler.create(this, function () {
                    }, []), 0);
                }
                this.touchX = null;
            }
        }
    };
    /**抬起*/
    Candy.prototype.up = function () {
        this.touchX = null;
        this.touchY = null;
    };
    /**出屏幕*/
    Candy.prototype.out = function () {
        this.touchX = null;
        this.touchY = null;
    };
    /***检测碰撞*/
    Candy.prototype.onTriggerEnter = function (other, self, contact) {
        var otherName = other.owner.name;
        var selfName = self.owner.name;
        var nameMerged_01 = 'redBucket' + 'redCandy';
        var nameMerged_02 = 'yellowBucket' + 'yellowCandy';
        if (otherName + selfName === nameMerged_01 || otherName + selfName === nameMerged_02) {
            this.self.removeSelf();
            Laya.Tween.clearAll(this.self);
        }
    };
    Candy.prototype.onUpdate = function () {
        // this.self.y += 2;
        // 超出范围消失
        if (this.self.y > Laya.stage.height + 100 || this.self.x > 750 + this.self.width + 50 || this.self.x < -this.self.width) {
            this.self.removeSelf();
        }
    };
    Candy.prototype.onDisable = function () {
        Laya.Pool.recover("candy", this.self);
    };
    return Candy;
}(Laya.Script));
exports.default = Candy;
},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl = /** @class */ (function (_super) {
    __extends(MainSceneControl, _super);
    function MainSceneControl() {
        return _super.call(this) || this;
    }
    MainSceneControl.prototype.onEnable = function () {
        this.bucketInit();
        this.initSecne();
    };
    /**场景初始化*/
    MainSceneControl.prototype.initSecne = function () {
        this.assembly.x = Laya.stage.width / 2;
        this.candy_interval = 500;
        this.creatTime = Date.now();
        this.creatOnOff = true;
        Laya.MouseManager.multiTouchEnabled = true;
    };
    /**糖果桶初始化,他们位置不一样，并且成对出现*/
    MainSceneControl.prototype.bucketInit = function () {
        var y_01 = Laya.stage.height / 2;
        // 第一个桶的位置
        var x_01 = Laya.stage.width * 1 / 4 - 100;
        var imageUrl_01 = 'candy/红色桶.png';
        // 第二个桶的位置
        var x_02 = Laya.stage.width * 3 / 4 + 100;
        var imageUrl_02 = 'candy/黄色桶.png';
        for (var i = 0; i < 2; i++) {
            var bucket = Laya.Pool.getItemByCreateFun('bucket', this.bucket.create, this.bucket);
            this.bucketParent.addChild(bucket);
            switch (i) {
                case 0:
                    bucket.name = 'redBucket';
                    bucket.pos(x_01 - bucket.width / 2, y_01);
                    bucket.getChildByName('pic').loadImage(imageUrl_01);
                    break;
                case 1:
                    bucket.name = 'yellowBucket';
                    bucket.pos(x_02 - bucket.width / 2, y_01);
                    bucket.getChildByName('pic').loadImage(imageUrl_02);
                    break;
            }
        }
    };
    /**产生糖果*/
    MainSceneControl.prototype.productionCandy = function () {
        var candy = Laya.Pool.getItemByCreateFun('candy', this.candy.create, this.candy);
        this.candyParent.addChild(candy);
        candy.rotation = 0;
        // 随机创建一种颜色糖果
        var randomNum = Math.floor(Math.random() * 2);
        var rig = candy.getComponent(Laya.RigidBody);
        rig.linearVelocity = { x: 0, y: 10 };
        var url_01 = 'candy/黄色糖果.png';
        var url_02 = 'candy/红色糖果.png';
        switch (randomNum) {
            case 0:
                candy.name = 'yellowCandy';
                candy.getChildByName('pic').loadImage(url_01);
                break;
            case 1:
                candy.name = 'redCandy';
                candy.getChildByName('pic').loadImage(url_02);
                break;
            default:
                break;
        }
        candy.pos(Laya.stage.width / 2 - candy.width / 2, -100);
    };
    MainSceneControl.prototype.onUpdate = function () {
        if (this.creatOnOff) {
            var nowTime = Date.now();
            if (nowTime - this.creatTime > this.candy_interval) {
                this.creatTime = nowTime;
                this.productionCandy();
            }
        }
    };
    MainSceneControl.prototype.onDisable = function () {
    };
    return MainSceneControl;
}(Laya.Script));
exports.default = MainSceneControl;
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
