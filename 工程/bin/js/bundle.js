var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var MainSceneControl_1 = require("./script/MainSceneControl");
var Role_1 = require("./script/Role");
var OperationControl_1 = require("./script/OperationControl");
var Suspend_1 = require("./script/Suspend");
var Candy_1 = require("./script/Candy");
var Enemy_1 = require("./script/Enemy");
var EnemyBullet_1 = require("./script/EnemyBullet");
var HintWord_1 = require("./script/HintWord");
var RewardWords_1 = require("./script/RewardWords");
var RoleBullet_1 = require("./script/RoleBullet");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/MainSceneControl.ts", MainSceneControl_1.default);
        reg("script/Role.ts", Role_1.default);
        reg("script/OperationControl.ts", OperationControl_1.default);
        reg("script/Suspend.ts", Suspend_1.default);
        reg("script/Candy.ts", Candy_1.default);
        reg("script/Enemy.ts", Enemy_1.default);
        reg("script/EnemyBullet.ts", EnemyBullet_1.default);
        reg("script/HintWord.ts", HintWord_1.default);
        reg("script/RewardWords.ts", RewardWords_1.default);
        reg("script/RoleBullet.ts", RoleBullet_1.default);
    };
    GameConfig.width = 750;
    GameConfig.height = 1334;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "vertical";
    GameConfig.alignV = "top";
    GameConfig.alignH = "center";
    GameConfig.startScene = "scene/MainScene.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = true;
    GameConfig.physicsDebug = true;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./script/Candy":3,"./script/Enemy":4,"./script/EnemyBullet":5,"./script/HintWord":6,"./script/MainSceneControl":7,"./script/OperationControl":8,"./script/RewardWords":9,"./script/Role":10,"./script/RoleBullet":11,"./script/Suspend":12}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Candy = /** @class */ (function (_super) {
    __extends(Candy, _super);
    function Candy() {
        return _super.call(this) || this;
    }
    Candy.prototype.onEnable = function () {
        this.initProperty();
        this.locationInit();
    };
    /**初始化*/
    Candy.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.candyTagRole = null;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default);
        this.roleParent = this.mainSceneControl.roleParent;
        this.scoreLabel = this.mainSceneControl.scoreLabel;
        this.selfSpeed = 10;
        this.tab = this.mainSceneControl.candyCount;
        this.timerControl = 0;
        this.spaceY = 5;
        this.hintWord = this.mainSceneControl.hintWord;
        this.becomeEnemy = false;
        this.moveAStep;
        this.selected = false;
        this.group = null;
        this.self['Candy'] = this;
    };
    /**初始位置初始化*/
    Candy.prototype.locationInit = function () {
        this.posYArr = [];
        this.moveAStep = false;
        this.self.y = -this.tab * (this.self.height + this.spaceY);
        for (var i = 0; i < 10; i++) {
            var y = -(this.self.height + this.spaceY) * i;
            this.posYArr.push(y);
        }
    };
    /**当第一个糖果被吃掉后的移动函数
     * 移动速度要非常快
    */
    Candy.prototype.moveRules = function () {
        Laya.Tween.to(this.self, { y: this.self.y + this.self.height + this.spaceY }, 10, null, Laya.Handler.create(this, function () {
        }, []), 0);
    };
    /**飞到主角身上增加主角属性
     * 并且播放属性增加动画
    */
    Candy.prototype.flyToRole = function () {
        if (this.candyTagRole !== null) {
            // x,y分别相减是两点连线向量
            // 向量计算并且归一化，向量长度为1。
            var point = new Laya.Point(this.candyTagRole.x - this.self.x, this.candyTagRole.y - this.self.y);
            point.normalize();
            //向量相加移动
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
            // 到达对象位置后开启攻击开关进行攻击，攻击速度依照时间间隔而定
            // 此时移动速度为零
            var differenceX = Math.abs(this.self.x - this.candyTagRole.x);
            var differenceY = Math.abs(this.self.y - this.candyTagRole.y);
            if (differenceX < 50 && differenceY < 50) {
                this.self.removeSelf();
                this.hintWordMove();
                this.roleAddProperty();
                this.candyTagRole = null;
            }
        }
    };
    /**属性增加提示动画*/
    Candy.prototype.hintWordMove = function () {
        var hintWord = Laya.Pool.getItemByCreateFun('candy', this.hintWord.create, this.hintWord);
        var role_01 = this.mainSceneControl.role_01;
        var role_02 = this.mainSceneControl.role_02;
        if (this.candyTagRole.parent === null) {
            this.self.removeSelf();
            return;
        }
        this.candyTagRole.addChild(hintWord);
        hintWord.pos(0, -150);
        var proPertyType;
        var numberValue;
        this.self.name = this.self.name.substring(0, 11);
        switch (this.self.name) {
            case 'yellowCandy':
                proPertyType = '攻击里';
                numberValue = 10;
                break;
            case 'redCandy___':
                proPertyType = '生命';
                numberValue = 5;
                break;
            case 'blueCandy__':
                proPertyType = '公鸡速度';
                numberValue = 10;
                break;
            case 'greenCandy_':
                proPertyType = '防御力';
                numberValue = 5;
                break;
            default:
        }
        hintWord['HintWord'].initProperty(proPertyType, numberValue);
    };
    /**根据糖果的种类增加主角属性规则
     * 并且播放增加属性文字提示动画
    */
    Candy.prototype.roleAddProperty = function () {
        this.self.name = this.self.name.substring(0, 11);
        var role_01 = this.mainSceneControl.role_01;
        var role_02 = this.mainSceneControl.role_02;
        switch (this.self.name) {
            case 'yellowCandy':
                if (this.candyTagRole === role_01) {
                    role_01['Role'].role_property.attackValue += 10;
                }
                else {
                    role_02['Role'].role_property.attackValue += 10;
                }
                break;
            case 'redCandy___':
                if (this.candyTagRole === role_01) {
                    role_01['Role'].role_property.blood += 5;
                }
                else {
                    role_02['Role'].role_property.blood += 5;
                }
                break;
            case 'blueCandy__':
                if (this.candyTagRole === role_01) {
                    role_01['Role'].role_property.attackSpeed += 10;
                }
                else {
                    role_02['Role'].role_property.attackSpeed += 10;
                }
                break;
            case 'greenCandy_':
                if (this.candyTagRole === role_01) {
                    role_01['Role'].role_property.defense += 5;
                }
                else {
                    role_02['Role'].role_property.defense += 5;
                }
                break;
            default:
                break;
        }
    };
    Candy.prototype.onUpdate = function () {
        // 第一波10个糖果出厂控制，此刻不可点击
        this.timerControl += 0.1;
        if (this.timerControl < 18 && this.self.parent === this.mainSceneControl.candyParent) {
            // this.self.y += 3;
        }
        // 飞到主角身上
        this.flyToRole();
        // 下移一格
        if (this.moveAStep) {
            this.moveRules();
            this.moveAStep = false;
        }
    };
    Candy.prototype.onDisable = function () {
        // 清理动画
        Laya.Tween.clearAll(this);
        if (this.self.name === 'yellowCandy') {
            Laya.Pool.recover('yellowCandy', this.self);
        }
        else if (this.self.name === 'redCandy___') {
            Laya.Pool.recover('redCandy___', this.self);
        }
        else if (this.self.name === 'blueCandy__') {
            Laya.Pool.recover('blueCandy__', this.self);
        }
        else if (this.self.name === 'greenCandy_') {
            Laya.Pool.recover('greenCandy_', this.self);
        }
    };
    return Candy;
}(Laya.Script));
exports.default = Candy;
},{"./MainSceneControl":7}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Enemy = /** @class */ (function (_super) {
    __extends(Enemy, _super);
    function Enemy() {
        return _super.call(this) || this;
    }
    Enemy.prototype.onEnable = function () {
        this.initProperty();
        this.enemyPropertySet();
    };
    /**初始化*/
    Enemy.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfScene = this.owner.scene;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default); //场景脚本组件
        this.roleParent = this.mainSceneControl.roleParent;
        this.selfHealth = this.self.getChildByName('health');
        this.selfSpeed = 4;
        this.propertyShow = this.self.getChildByName('propertyShow');
        this.attackTnterval = 100;
        this.recordTime = Date.now();
        this.speakBox = this.mainSceneControl.speakBox;
        this.scoreLabel = this.mainSceneControl.scoreLabel;
        this.repelTimer = 0;
        this.hintWord = this.mainSceneControl.hintWord;
        this.enemyBullet = this.mainSceneControl.enemyBullet;
        this.self['Enemy'] = this;
    };
    /**近战攻击的敌人攻击主角的时候，会随机在主角范围内停止然后攻击
     * 这样做的好处是敌人不会重叠,并且这个坐标在主角的上方
     * 并且这个坐标在开始的时候执行一次
     * 更换主角的时候执行一次
     * */
    Enemy.prototype.randomAttackPoint = function () {
        var difference;
        var number = Math.floor(Math.random() * 2);
        if (number === 1) {
            difference = -Math.floor(Math.random() * 50);
        }
        else {
            difference = Math.floor(Math.random() * 50);
        }
        this.attackX = this.slefTagRole.x + difference;
        this.attackY = this.slefTagRole.y - Math.floor(Math.random() * 50);
    };
    /**怪物等级包括的一些属性*/
    Enemy.prototype.enemyPropertySet = function () {
        // 属性赋值
        this.enemyProperty = {
            level: '',
            blood: '',
            moveSpeed: '',
            defense: '',
        };
        this.enemyProperty.blood = this.mainSceneControl.enemyProperty.blood;
        this.enemyProperty.attackValue = this.mainSceneControl.enemyProperty.attackValue;
        this.enemyProperty.attackSpeed = this.mainSceneControl.enemyProperty.attackSpeed;
        this.enemyProperty.defense = this.mainSceneControl.enemyProperty.defense;
        this.enemyProperty.moveSpeed = this.mainSceneControl.enemyProperty.moveSpeed;
    };
    /**属性刷新显示规则,血量显示一定是整数10*/
    Enemy.prototype.enemyPropertyUpdate = function () {
        // 血条上的血量显示
        this.bloodLabel = this.selfHealth.getChildByName('bloodLabel');
        var str = Math.round(this.enemyProperty.blood * this.selfHealth.value).toString();
        var subStr_01 = str.substring(0, str.length - 1);
        var subStr_02 = subStr_01 + 0;
        this.bloodLabel.text = subStr_02;
        // 属性显示框上面显示的属性
        // 血量
        var blood = this.propertyShow.getChildByName('blood');
        blood.text = "血量: " + this.enemyProperty.blood;
        // 攻击力
        var attackValue = this.propertyShow.getChildByName('attackValue');
        attackValue.text = "攻击力: " + this.enemyProperty.attackValue;
        // 攻击速度
        var attackSpeed = this.propertyShow.getChildByName('attackSpeed');
        attackSpeed.text = "攻击速度: " + this.enemyProperty.attackSpeed;
        // 防御力
        var defense = this.propertyShow.getChildByName('defense');
        defense.text = "防御力: " + this.enemyProperty.defense;
        //当敌人数量达到一定数量的时候，给敌人增加攻击力开关
        // 需要有提示
        var roleDefense = this.slefTagRole['Role'].role_property.defense;
        if (this.mainSceneControl.enemyParent._children.length > 20 && this.enemyProperty.attackValue < roleDefense) {
            this.enemyProperty.attackValue = roleDefense + 5;
        }
    };
    /** 近战攻击的敌人第二阶段移动到主角位置，并且进入主角射程范围的移动规则
     * 加入被子弹击退效果
    */
    Enemy.prototype.enemyMove = function () {
        // x,y分别相减是两点连线向量
        // 向量计算并且归一化，向量长度为1。
        var point = new Laya.Point(this.attackX - this.self.x, this.attackY - this.self.y);
        point.normalize();
        // 判断是否激活被击退效果
        if (this.slefTagRole.x > Laya.stage.width / 2) { //右边
            // 右边发生预警
            this.mainSceneControl.role_01['Role'].role_Warning = true;
        }
        else if (this.slefTagRole.x < Laya.stage.width / 2) { //左边
            // 左边发生预警
            this.mainSceneControl.role_02['Role'].role_Warning = true;
        }
        // 被击退反向移动
        if (this.repelTimer > 0) {
            this.repelTimer--;
            //反向移动
            this.self.x -= point.x * 2;
            this.self.y -= point.y * 2;
        }
        else {
            //向量相加移动
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
        }
    };
    /**怪物对主角造成伤害的公式
     * 攻击力-主角防御如果大于零则造成伤害，否则不造成伤害
     * 掉血显示值，伤害小于零则显示0
     * 并且在主角头上出现掉血动画提示
    */
    Enemy.prototype.enemyAttackRules = function () {
        // 通过攻击力计算掉血状况
        var damage = this.enemyProperty.attackValue - this.slefTagRole['Role'].role_property.defense;
        if (damage > 0) {
            this.slefTagRole['Role'].role_property.blood -= damage;
        }
        else {
            damage = 0;
        }
        this.createHintWord(damage);
    };
    Enemy.prototype.createHintWord = function (damage) {
        // 创建提示动画对象
        var hintWord = Laya.Pool.getItemByCreateFun('candy', this.hintWord.create, this.hintWord);
        hintWord.pos(0, -150);
        this.slefTagRole.addChild(hintWord);
        var proPertyType = '敌人掉血';
        var numberValue;
        if (!this.slefTagRole.parent) {
            return;
        }
        hintWord['HintWord'].initProperty(proPertyType, damage);
    };
    /**远程攻击创建子弹*/
    Enemy.prototype.creatBullet = function () {
        var bullet = Laya.Pool.getItemByCreateFun('enemyBullet', this.enemyBullet.create, this.enemyBullet);
        var bulletParent = this.mainSceneControl.bulletParent;
        bulletParent.addChild(bullet);
        bullet.pos(this.self.x, this.self.y);
        bullet['EnemyBullet'].belongEnemy = this.self;
        bullet['EnemyBullet'].bulletTarget = this.slefTagRole;
    };
    /**更换攻击目标
     * 如果当前攻击的主角死了，敌人会攻击另一个目标
    */
    Enemy.prototype.replaceTarget = function () {
        if (this.slefTagRole['Role'].role_property.blood <= 0) {
            // 更换目标
            if (this.slefTagRole.name === 'role_01') {
                this.slefTagRole = this.mainSceneControl.role_02;
                this.tagHealth = this.mainSceneControl.role_02.getChildByName('health');
            }
            else if (this.slefTagRole.name === 'role_02') {
                this.slefTagRole = this.mainSceneControl.role_01;
                this.tagHealth = this.mainSceneControl.role_01.getChildByName('health');
            }
        }
    };
    Enemy.prototype.onUpdate = function () {
        // 主角全部死亡则停止移动
        if (this.roleParent._children.length === 0) {
            return;
        }
        // 如果没有目标则什么都不执行
        if (this.slefTagRole === null) {
            return;
        }
        // 血量低于0则死亡,并且关闭主角发射子弹预警
        if (this.enemyProperty.blood < 0) {
            this.mainSceneControl.role_01['Role'].role_Warning = false;
            this.mainSceneControl.role_02['Role'].role_Warning = false;
            this.self.removeSelf();
        }
        // 属性实时刷新
        this.enemyPropertyUpdate();
        // 血量低于0死亡,并且增加分数,并且关闭主角攻击预警
        if (this.selfHealth.value <= 0) {
            this.scoreLabel.text = (Number(this.scoreLabel.text) + 200).toString();
            this.self.removeSelf();
            this.mainSceneControl.role_01['Role'].role_Warning = false;
            this.mainSceneControl.role_02['Role'].role_Warning = false;
        }
        //判断这个敌人是不是远程攻击，远程攻击的敌人暂时不会移动,会主动发射子弹进行攻击
        if (this.enemyType === 'range') {
            var nowTime = Date.now();
            if (nowTime - this.recordTime > this.enemyProperty.attackSpeed) {
                this.recordTime = nowTime;
                // 血量判断，目标死亡后，会更换目标
                if (this.slefTagRole['Role'].role_property.blood > 0) {
                    this.creatBullet();
                }
                else {
                    this.replaceTarget();
                }
            }
        }
        else if (this.enemyType === 'infighting') {
            // 近战移动
            this.enemyMove();
            // 到达对象位置后开启攻击开关进行攻击，攻击速度依照时间间隔而定
            // 此时移动速度为零
            var differenceX = Math.abs(this.self.x - this.attackX);
            var differenceY = Math.abs(this.self.y - this.attackY);
            if (differenceX < 100 && differenceY < 100) {
                this.selfSpeed = 0;
                var nowTime = Date.now();
                if (nowTime - this.recordTime > this.enemyProperty.attackSpeed) {
                    this.recordTime = nowTime;
                    // 血量判断，目标死亡后，会更换目标
                    if (this.slefTagRole['Role'].role_property.blood > 0) {
                        this.enemyAttackRules();
                    }
                    else {
                        this.replaceTarget();
                    }
                }
            }
            else {
                this.selfSpeed = 4;
            }
        }
    };
    Enemy.prototype.onDisable = function () {
        var pic = this.self.getChildByName('pic');
        pic.removeSelf();
        Laya.Pool.recover('enemy', this.self);
    };
    return Enemy;
}(Laya.Script));
exports.default = Enemy;
},{"./MainSceneControl":7}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var EnemyBullet = /** @class */ (function (_super) {
    __extends(EnemyBullet, _super);
    function EnemyBullet() {
        return _super.call(this) || this;
    }
    EnemyBullet.prototype.onEnable = function () {
        this.init();
    };
    /**初始化一些属性*/
    EnemyBullet.prototype.init = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default);
        this.enemyParent = this.mainSceneControl.enemyParent;
        this.selfSpeed = 15;
        this.attackValue = this.mainSceneControl.enemyProperty.attackValue;
        this.roleParent = this.selfScene['MainSceneControl'].roleParent;
        this.self['EnemyBullet'] = this;
    };
    /**始终攻击一个主角，如果这个主角死了，
     * 若果这个目标被移除了，那么发出去的子弹会沿着和怪物的方向继续移动到500
     * */
    EnemyBullet.prototype.bulletMove = function () {
        if (this.bulletTarget && this.bulletTarget.parent) {
            // x,y分别相减是两点连线向量
            var point = new Laya.Point(this.bulletTarget.x - this.self.x, this.bulletTarget.y - this.self.y);
            // 归一化，向量长度为1。
            point.normalize();
            //向量相加
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
        }
        else {
            // 沿着自己和发射自己的敌人方向移动
            var point = new Laya.Point(this.self.x - this.belongEnemy.x, this.self.y - this.belongEnemy.y);
            // 归一化，向量长度为1。
            point.normalize();
            //向量相加
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
        }
    };
    /**子弹对主角造成伤害的公式
       * 攻击力-主角防御如果大于零则造成伤害，否则不造成伤害
       * 并且有动画提示文字
      */
    EnemyBullet.prototype.bulletAttackRules = function (role) {
        // 掉血显示值，伤害小于零则显示0
        var numberValue;
        // 伤害
        var damage = this.attackValue - role['Role'].role_property.defense;
        if (damage > 0) {
            role['Role'].role_property.blood -= damage;
            numberValue = damage;
        }
        else {
            numberValue = 0;
        }
    };
    EnemyBullet.prototype.onUpdate = function () {
        // 移动
        this.bulletMove();
        // 超出横向范围消失，一般不会触发
        if (this.self.x > 750 + this.self.width + 50 || this.self.x < -this.self.width) {
            this.self.removeSelf();
        }
        // 碰到任何一个主角，子弹消失怪物掉血
        for (var i = 0; i < this.roleParent._children.length; i++) {
            var role = this.roleParent._children[i];
            var differenceX = Math.abs(role.x - this.self.x);
            var differenceY = Math.abs(role.y - this.self.y);
            if (differenceX < 10 && differenceY < 10) {
                this.bulletAttackRules(role);
                this.self.removeSelf();
            }
        }
    };
    EnemyBullet.prototype.onDisable = function () {
    };
    return EnemyBullet;
}(Laya.Script));
exports.default = EnemyBullet;
},{"./MainSceneControl":7}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HintWord = /** @class */ (function (_super) {
    __extends(HintWord, _super);
    function HintWord() {
        return _super.call(this) || this;
    }
    HintWord.prototype.onEnable = function () {
        this.self = this.owner;
        this.self['HintWord'] = this;
        this.self.alpha = 0; //出现的时候隐身，方便做动画
        this.addProperty = this.self.getChildByName('addProperty');
        this.addNumber = this.self.getChildByName('addNumber');
        this.subNumber = this.self.getChildByName('subNumber');
        this.addProperty.value = null;
        this.addNumber.value = null;
        this.subNumber.value = null;
    };
    /**通过传入的参数来，设置属性图片字的格式
     * @param propertyType 属性类型
     * @param numberValue 属性值
     * */
    HintWord.prototype.initProperty = function (propertyType, numberValue) {
        this.addProperty.value = propertyType;
        // 位置偏移，因为字符长度不一样
        switch (propertyType) {
            case '公鸡速度':
                this.addProperty.x -= 40;
                this.addNumber.value = "+" + numberValue;
                break;
            case '攻击里':
                this.addProperty.x -= 20;
                this.addNumber.x -= 20;
                this.addNumber.value = "+" + numberValue;
                break;
            case '生命':
                this.addNumber.x -= 40;
                this.addNumber.value = "+" + numberValue;
                break;
            case '防御力':
                this.addProperty.x -= 20;
                this.addNumber.x -= 20;
                this.addNumber.value = "+" + numberValue;
                break;
            case '主角掉血':
                this.subNumber.x -= 80;
                this.subNumber.value = "-" + numberValue;
            case '敌人掉血':
                this.subNumber.x -= 80;
                this.subNumber.value = "-" + numberValue;
            default:
                break;
        }
        this.hintWordMove();
    };
    /**飘字动画时间线*/
    HintWord.prototype.hintWordMove = function () {
        var timeLine = new Laya.TimeLine;
        timeLine.addLabel('appear', 0).to(this.self, { y: this.self.y - 60, alpha: 1 }, 100, null, 0)
            .addLabel('pause', 0).to(this.self, { y: this.self.y - 120 }, 800, null, 0)
            .addLabel('vanish', 0).to(this.self, { y: this.self.y - 150, alpha: 0 }, 100, null, 0);
        timeLine.play('appear', false);
        timeLine.on(Laya.Event.COMPLETE, this, function () {
            this.self.removeSelf();
        });
    };
    HintWord.prototype.onDisable = function () {
    };
    return HintWord;
}(Laya.Script));
exports.default = HintWord;
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl = /** @class */ (function (_super) {
    __extends(MainSceneControl, _super);
    function MainSceneControl() {
        return _super.call(this) || this;
    }
    MainSceneControl.prototype.onEnable = function () {
        this.initSecne();
        this.roletInit();
        this.roleSpeakBoxs();
        this.candyPosInit();
        this.createWaveCandys();
    };
    /**场景初始化*/
    MainSceneControl.prototype.initSecne = function () {
        this.enemyAppear = false;
        this.enemyTagRole = null;
        this.enemyCount = 0;
        // 初始化怪物属性，依次为血量，
        this.enemyProperty = {
            blood: 200,
            attackValue: 15,
            attackSpeed: 1000,
            defense: 1,
            moveSpeed: 10,
            creatInterval: 5000
        };
        this.enemyInterval_01 = 500;
        this.enemyTime_01 = Date.now();
        this.enemySwitch_01 = true;
        this.enemyInterval_02 = 500;
        this.enemyTime_02 = Date.now();
        this.enemySwitch_02 = true;
        this.candy_interval = 1000;
        this.creatTime = Date.now();
        this.creatOnOff = true;
        this.nameArr = [];
        this.candyCount = 0;
        this.scoreLabel.text = '0';
        this.rescueNum = 0;
        // 关闭多点触控
        Laya.MouseManager.multiTouchEnabled = false;
        this.timerControl = 0;
        this.owner['MainSceneControl'] = this; //脚本赋值
        this.suspend = false;
    };
    /**生成10个初始糖果
     * 在固定的10个位置*/
    MainSceneControl.prototype.candyPosInit = function () {
        this.posArr_left = [];
        this.posArr_right = [];
        var candyHeiht = 100;
        var spacing = 10;
        var startX_01 = Laya.stage.width / 2 - 70;
        var startX_02 = Laya.stage.width / 2 + 70;
        var startY = Laya.stage.width / 3;
        // 注意排布顺序，把第一个排到最前，所以返回来循环
        for (var i = 1; i >= 0; i--) {
            for (var j = 4; j >= 0; j--) {
                if (i === 0) {
                    var arr = [startX_01, startY + j * (candyHeiht + spacing)];
                    this.posArr_left.push(arr);
                }
                else if (i === 1) {
                    var arr = [startX_02, startY + j * (candyHeiht + spacing)];
                    this.posArr_right.push(arr);
                }
            }
        }
    };
    /**10个糖果排布动画*/
    MainSceneControl.prototype.createWaveCandys = function () {
        // 生成10个初始糖果
        for (var i = 0; i < 2; i++) {
            for (var j = 0; j < 5; j++) {
                var x = void 0;
                var y = void 0;
                var candy = this.createCandy();
                if (i === 0) {
                    x = this.posArr_left[j][0];
                    y = this.posArr_left[j][1];
                }
                else if (i === 1) {
                    x = this.posArr_right[j][0];
                    y = this.posArr_right[j][1];
                }
                candy.x = x;
                candy.y = y;
                candy['Candy'].group = j;
            }
        }
    };
    /**主角初始化，成对出现在两个固定位置，每次初始化后的位置可能会调换*/
    MainSceneControl.prototype.roletInit = function () {
        this.role_01 = this.owner.scene.role_01;
        this.role_02 = this.owner.scene.role_02;
        var pic_01 = this.role_01.getChildByName('pic');
        var pic_02 = this.role_02.getChildByName('pic');
        // 随机更换皮肤
        var imageUrl_01 = 'candy/红色桶.png';
        var imageUrl_02 = 'candy/黄色桶.png';
        var randomNum = Math.floor(Math.random() * 2);
        if (randomNum === 0) {
            pic_01.loadImage(imageUrl_01);
            pic_01.name = 'redRole';
            pic_02.loadImage(imageUrl_02);
            pic_02.name = 'yellowRole';
        }
        else {
            pic_02.loadImage(imageUrl_01);
            pic_02.name = 'redRole';
            pic_01.loadImage(imageUrl_02);
            pic_01.name = 'yellowRole';
        }
    };
    /**两个主角对话框的初始化*/
    MainSceneControl.prototype.roleSpeakBoxs = function () {
        for (var i = 0; i < 2; i++) {
            var speakBox = Laya.Pool.getItemByCreateFun('speakBox', this.speakBox.create, this.speakBox);
            this.speakBoxParent.addChild(speakBox);
            if (i === 0) {
                speakBox.pos(this.role_01.x, this.role_01.y);
                this.role_01speak = speakBox;
                this.role_01speak.alpha = 0;
                // 反向和偏移
                var pic = this.role_01speak.getChildByName('pic');
                var label = this.role_01speak.getChildByName('label');
                pic.scaleX = -1;
                label.x += 30;
            }
            else {
                speakBox.pos(this.role_02.x, this.role_02.y);
                this.role_02speak = speakBox;
                this.role_02speak.alpha = 0;
            }
        }
    };
    /**产生糖果*/
    MainSceneControl.prototype.createCandy = function () {
        // 通过对象池创建
        var candy = Laya.Pool.getItemByCreateFun('candy', this.candy.create, this.candy);
        // 随机创建一种颜色糖果
        // 糖果的名称结构是11位字符串加上索引值，方便查找，并且这样使他们的名称唯一
        var randomNum = Math.floor(Math.random() * 4);
        var url_01 = 'candy/黄色糖果.png';
        var url_02 = 'candy/红色糖果.png';
        var url_03 = 'candy/蓝色糖果.png';
        var url_04 = 'candy/绿色糖果.png';
        var pic = candy.getChildByName('pic');
        switch (randomNum) {
            case 0:
                candy.name = 'yellowCandy' + this.candyCount;
                pic.loadImage(url_01);
                break;
            case 1:
                candy.name = 'redCandy___' + this.candyCount;
                pic.loadImage(url_02);
                break;
            case 2:
                candy.name = 'blueCandy__' + this.candyCount;
                pic.loadImage(url_03);
                break;
            case 3:
                candy.name = 'greenCandy_' + this.candyCount;
                pic.loadImage(url_04);
                break;
            default:
                break;
        }
        // 随机点击次数
        var clicksLabel = candy.getChildByName('clicksLabel');
        clicksLabel.text = (Math.floor(Math.random() * 0) + 1).toString();
        candy.pos(Laya.stage.width / 2, -100);
        this.candyParent.addChild(candy);
        candy.rotation = 0;
        this.candyCount++;
        return candy;
    };
    /**角色死亡复活状况*/
    MainSceneControl.prototype.roleDeathState = function () {
        // 角色死亡情况
        var len = this.roleParent._children.length;
        if (len === 0) {
            // 死亡
            this.enemySwitch_01 = false;
            this.enemySwitch_02 = false;
            return;
        }
        else if (len === 1) {
            var speak_01 = this.role_01speak.getChildByName('label');
            var speak_02 = this.role_02speak.getChildByName('label');
            // 复活
            if (this.rescueNum >= 5) {
                this.rescueNum = 0;
                if (this.roleParent._children[0].name === "role_01") {
                    this.roleParent.addChild(this.role_02);
                    this.role_02speak.x -= 150;
                    speak_02.text = '谢谢你啊！';
                }
                else {
                    this.roleParent.addChild(this.role_01);
                    speak_01.text = '谢谢你啊！';
                    this.role_01speak.x += 150;
                }
            }
            else {
                // 待复活提示
                if (this.roleParent._children[0].name === "role_01") {
                    this.role_02speak.alpha = 1;
                    this.role_02speak.x = this.role_02.x;
                    speak_02.text = '连续吃5个糖果不犯错的话我就复活了';
                }
                else {
                    this.role_01speak.alpha = 1;
                    this.role_01speak.x = this.role_01.x;
                    speak_01.text = '连续吃5个糖果不犯错的话我就复活了';
                }
            }
        }
        else if (len === 2) {
            // 保持，复活状态为空
            this.rescueNum === 0;
        }
    };
    /**出现敌人
     * 创建方式决定了敌人出生的位置
     * @param mode 创建模式是左边还是右边
     * @param tagRole 目标是哪个主角
    */
    MainSceneControl.prototype.careatEnemy = function (mode, tagRole, type) {
        this.enemyCount++;
        if (tagRole !== null) {
            var enemy = Laya.Pool.getItemByCreateFun('enemy', this.enemy.create, this.enemy);
            this.enemyParent.addChild(enemy);
            enemy.name = 'enemy' + this.enemyCount; //名称唯一
            enemy.pivotX = enemy.width / 2;
            enemy.pivotY = enemy.height / 2;
            //出生位置判定,和攻击目标选择
            if (mode === 'left') {
                enemy.pos(-50, 300);
            }
            else if (mode === 'right') {
                enemy.pos(800, 300);
            }
            else if (mode === 'target') {
                if (tagRole.x < Laya.stage.width / 2 && tagRole.x > 0) {
                    enemy.pos(-50, 300);
                }
                else if (tagRole.x >= Laya.stage.width / 2 && tagRole.x < Laya.stage.width) {
                    enemy.pos(800, 300);
                }
            }
            enemy['Enemy'].slefTagRole = tagRole;
            enemy['Enemy'].enemyType = type;
            enemy['Enemy'].randomAttackPoint();
            // 皮肤
            var pic = new Laya.Sprite;
            pic.name = 'pic';
            var url_01 = 'candy/近战敌人.png';
            var url_02 = 'candy/远程敌人.png';
            if (type === 'infighting') {
                pic.loadImage(url_01);
            }
            else if (type === 'range') {
                pic.loadImage(url_02);
            }
            enemy.addChild(pic);
            pic.pivotX = pic.width / 2;
            pic.pivotY = pic.height / 2;
            pic.pos(enemy.width / 2, enemy.height / 2);
            // 默认属性不可见
            var propertyShow = enemy.getChildByName('propertyShow');
            if (!this.suspend) {
                propertyShow.alpha = 0;
            }
            else {
                propertyShow.alpha = 1;
            }
            return enemy;
        }
    };
    /** 敌人的层级进行排序
   * 规则是判断y轴，y坐标越低的越靠前
  */
    MainSceneControl.prototype.enemyOrder = function () {
        for (var i = 0; i < this.enemyParent._children.length; i++) {
            this.enemyParent._children[i].zOrder = Math.round(this.enemyParent._children[i].y);
        }
    };
    /**属性刷新显示规则,血量显示一定是整数，并且是10的倍数
    * 根据时间线的增长，怪物的属性不断增强
    */
    MainSceneControl.prototype.enemyPropertyUpdate = function () {
        if (this.timerControl % 500 === 0) {
            // 血量增长
            this.enemyProperty.blood += 50;
            // 攻击力增长
            this.enemyProperty.attackValue += 1;
            // 防御力增长
            this.enemyProperty.defense += 1;
            // 出怪时间增长,这里会有个最短间隔
            if (this.enemyProperty.creatInterval > 500) {
                this.enemyProperty.creatInterval -= 1;
            }
        }
    };
    /**属性刷新显示规则*/
    MainSceneControl.prototype.onUpdate = function () {
        // 时刻对敌人的层级进行排序
        this.enemyOrder();
        // 记录时间
        this.timerControl += 1;
        // 根据时间线，刷新怪物属性
        this.enemyPropertyUpdate();
        // 角色死亡复活状况
        this.roleDeathState();
        // 通过时间间隔产生敌人，左右产生的敌人不一样
        // 左
        if (this.enemySwitch_01) {
            var nowTime = Date.now();
            if (nowTime - this.enemyTime_01 > this.enemyProperty.creatInterval) {
                this.enemyTime_01 = nowTime;
                this.enemyTagRole = this.role_01;
                this.careatEnemy('left', this.role_01, 'infighting');
                this.enemyTagRole = null;
            }
        }
        // 右
        if (this.enemySwitch_02) {
            var nowTime = Date.now();
            if (nowTime - this.enemyTime_02 > this.enemyProperty.creatInterval) {
                this.enemyTime_02 = nowTime;
                this.enemyTagRole = this.role_02;
                this.careatEnemy('right', this.role_02, 'infighting');
                this.enemyTagRole = null;
            }
        }
    };
    MainSceneControl.prototype.onDisable = function () {
    };
    return MainSceneControl;
}(Laya.Script));
exports.default = MainSceneControl;
},{}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Tool_1 = require("./Tool");
var OperationButton = /** @class */ (function (_super) {
    __extends(OperationButton, _super);
    function OperationButton() {
        return _super.call(this) || this;
    }
    OperationButton.prototype.onEnable = function () {
        this.initProperty();
        this.buttonClink();
        this.clickHint();
    };
    /**初始化一些属性*/
    OperationButton.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default);
        this.candyParent = this.mainSceneControl.candyParent;
        this.candyParent_Move = this.mainSceneControl.candyParent_Move;
        this.operationSwitch = true;
        this.rightCount = 0;
        this.clicksCount = 0;
        this.clicksNameArr = [];
        this.rightName = [];
        this.errorName = [];
        this.alreadyGroup = [];
        this.scoreLabel = this.mainSceneControl.scoreLabel;
        this.candyNameArr = this.mainSceneControl.candyNameArr;
        this.timer = this.mainSceneControl.timer;
        this.timeSchedule = this.timer.getChildByName('timeSchedule');
        this.settleSwitch = false;
        this.rewardWords = this.mainSceneControl.rewardWords;
    };
    /**操作按钮的点击事件*/
    OperationButton.prototype.buttonClink = function () {
        for (var i = 0; i < this.self._children.length; i++) {
            this.self._children[i].on(Laya.Event.MOUSE_DOWN, this, this.down);
            this.self._children[i].on(Laya.Event.MOUSE_MOVE, this, this.move);
            this.self._children[i].on(Laya.Event.MOUSE_UP, this, this.up);
            this.self._children[i].on(Laya.Event.MOUSE_OUT, this, this.out);
        }
    };
    /**判断按下的按钮和准备位置的糖果是否匹配;
     * 如果匹配，那么看下糖果上面写的几次点击次数，需要连续点击到这个次数才可以吃糖果
     * 如果次数没有达到，却点了另一种按钮，那么前面的次数会重置，并且出现一个怪物
     * 如果不匹配，说明点错了，糖果会跳到外面变成一个怪物,则出现一个怪物
     */
    OperationButton.prototype.down = function (event) {
        if (this.settleSwitch) {
            return;
        }
        if (this.operationSwitch === false) {
            return;
        }
        this.clicksCount++;
        // 通过点击的按钮匹配对应的糖果类型
        switch (event.currentTarget.name) {
            case 'redButton':
                this.clicksNameArr.push('redCandy___');
                break;
            case 'yellowButton':
                this.clicksNameArr.push('yellowCandy');
                break;
            case 'greenButton':
                this.clicksNameArr.push('greenCandy_');
                break;
            case 'blueButton':
                this.clicksNameArr.push('blueCandy__');
                break;
            default: break;
        }
        // 两两对比判断之后清空这个数组，当点击次数是2的倍数时进行对比
        if (this.clicksCount % 2 === 0 && this.clicksCount >= 2) {
            this.clickTwoCompareName(); //第二次点击对比
        }
        else {
            this.clickOneCompareName(); //第一次点击对比
        }
        // 点完结算
        if (this.clicksCount === 10) {
            this.settlement();
        }
        event.currentTarget.scale(0.9, 0.9);
    };
    /**点击两次之后对比名称
     * 点击次数和组数都是固定的，分别是10次和5组
     *所以点击了2次对应的就是第0组，4次就是第1组......
    */
    OperationButton.prototype.clickTwoCompareName = function () {
        var nameArr = [];
        for (var i = 0; i < this.candyParent._children.length; i++) {
            var candy = this.candyParent._children[i];
            if (candy["Candy"].group === (this.clicksCount - 2) / 2) { //每点两次对应的糖果组
                nameArr.push(candy.name);
                var firstCandy = this.candyParent.getChildByName(nameArr[0]);
                // 文字显示
                if (nameArr.length >= 2) {
                    var compareArr = [nameArr[0].substring(0, 11), nameArr[1].substring(0, 11)];
                    // 对比两个数组看看是否相等，排序，转成字符串方可对比；
                    if (compareArr.sort().toString() === this.clicksNameArr.sort().toString()) {
                        var label_01 = firstCandy.getChildByName('clicksLabel');
                        var label_02 = candy.getChildByName('clicksLabel');
                        label_01.text = '选对了';
                        label_02.text = '选对了';
                        // 正确的糖果名称保存
                        this.rightName.push(nameArr[0], nameArr[1]);
                    }
                    else {
                        var label_01 = firstCandy.getChildByName('clicksLabel');
                        var label_02 = candy.getChildByName('clicksLabel');
                        label_01.text = '选错了';
                        label_02.text = '选错了';
                        // 错误的糖果名保存
                        this.errorName.push(nameArr[0], nameArr[1]);
                    }
                    // 已经点过的糖果的组数
                    this.alreadyGroup.push(candy["Candy"].group);
                }
            }
        }
        this.clickHint();
        this.clicksNameArr = []; //对比后清空
    };
    /**每点一次的时候判断点击是否正确，并且给予动画提示
     * 此时分为三种情况
     * 一个都不对，那么直接写上错误
     * 对一个，那么直接写上正确
     * 如果两个相同都和 this.clicksNameArr[0]匹配，那么我只需要判断一个就行
     * 因为第二次点击的时候会补上标记
    */
    OperationButton.prototype.clickOneCompareName = function () {
        var nameArr = [];
        var first_Name = null;
        for (var i = 0; i < this.candyParent._children.length; i++) {
            var candy = this.candyParent._children[i];
            if (candy["Candy"].group === (this.clicksCount - 1) / 2) { //每点一次对应的糖果组
                if (candy.name.substring(0, 11) === this.clicksNameArr[0]) { //只判断一次，然后返回
                    var label_01 = candy.getChildByName('clicksLabel');
                    label_01.text = '选对了';
                    break;
                }
                else {
                    // number用于记录第几次循环，最多两次循环
                    nameArr.push(candy.name);
                    if (nameArr.length === 2) {
                        // 当nameArr.length=2的时候说明一个都不对，那么直接结束本组
                        var firstCandy = this.candyParent.getChildByName(nameArr[0]);
                        var label_01 = firstCandy.getChildByName('clicksLabel');
                        var label_02 = candy.getChildByName('clicksLabel');
                        label_01.text = '选错了';
                        label_02.text = '选错了';
                        //重新初始化下一组
                        this.clicksNameArr = [];
                        this.clicksCount++;
                        this.errorName.push(nameArr[0], nameArr[1]);
                        this.alreadyGroup.push(candy["Candy"].group);
                        this.clickHint();
                    }
                }
            }
        }
    };
    /**提示我应该点哪一组了
     * 这一组结束之后提示下一组
     * 然后这一组的提示消失
    */
    OperationButton.prototype.clickHint = function () {
        for (var i = 0; i < this.candyParent._children.length; i++) {
            var presentGroup = this.alreadyGroup[this.alreadyGroup.length - 1];
            var candy = this.candyParent._children[i];
            var candyGroup = candy['Candy'].group;
            if (this.alreadyGroup.length === 0) {
                if (candyGroup === 0) {
                    candy.scale(1.1, 1.1);
                }
            }
            else {
                if (candyGroup === presentGroup) {
                    candy.scale(1, 1);
                }
                if (candyGroup === presentGroup + 1) {
                    candy.scale(1.1, 1.1);
                }
            }
        }
    };
    /**结算，当10个都点击完毕后，执行吃糖果活着是编程敌人的动画*/
    OperationButton.prototype.settlement = function () {
        this.settleSwitch = true;
        // 正确移动到主角处加属性
        if (this.rightName.length > 0) {
            for (var i = 0; i < this.rightName.length; i++) {
                var candy = this.candyParent.getChildByName(this.rightName[i]);
                if (candy.x < Laya.stage.width / 2) {
                    candy['Candy'].candyTagRole = this.mainSceneControl.role_01;
                }
                else {
                    candy['Candy'].candyTagRole = this.mainSceneControl.role_02;
                }
            }
        }
        // 错误的变成敌人
        if (this.errorName.length > 0) {
            for (var j = 0; j < this.errorName.length; j++) {
                var candy = this.candyParent.getChildByName(this.errorName[j]);
                this.candybecomeEnemy(candy);
            }
        }
        this.additionAward();
        // 清空
        this.rightName = [];
        this.errorName = [];
        this.clicksCount = 0;
        this.clicksNameArr = [];
        this.alreadyGroup = [];
    };
    /**根据进度条剩余的时间给予奖励加成
     * 分段给予不同的奖励
    */
    OperationButton.prototype.additionAward = function () {
        if (this.timeSchedule.value > 0.7) {
            this.creatRewardWords('神速！');
        }
        else if (this.timeSchedule.value > 0.5) {
            this.creatRewardWords('神速！');
        }
        else if (this.timeSchedule.value > 0.3) {
            this.creatRewardWords('神速！');
        }
    };
    /**提示奖励文字的创建*/
    OperationButton.prototype.creatRewardWords = function (word) {
        var rewardWords = Laya.Pool.getItemByCreateFun('rewardWords', this.rewardWords.create, this.rewardWords);
        Laya.stage.addChild(rewardWords);
        rewardWords['RewardWords'].initProperty(word);
    };
    /**点错后，糖果跳到地上变成1个敌人
     * 这个敌人是随机在一个范围内出生
     * @param candy 这个糖果的信息
    */
    OperationButton.prototype.candybecomeEnemy = function (candy) {
        // 左右两个方向
        var point; //固定圆心点
        var direction; //左右，用来判断位置和enemyTarget
        var enemyTarget; //攻击对象
        // 最终位置
        var moveX;
        var moveY;
        if (candy.x < Laya.stage.width / 2) {
            direction = 'left';
            enemyTarget = this.mainSceneControl.role_01;
            point = new Laya.Point(candy.x - 160, candy.y);
        }
        else {
            direction = 'right';
            enemyTarget = this.mainSceneControl.role_02;
            point = new Laya.Point(candy.x + 160, candy.y);
        }
        // 随机取点函数
        moveX = Tool_1.default.getRoundPos(Math.random() * 360, Math.floor(Math.random() * 40), point).x;
        moveY = Tool_1.default.getRoundPos(Math.random() * 360, Math.floor(Math.random() * 40), point).y;
        Laya.Tween.to(candy, { x: moveX, y: moveY }, 500, null, Laya.Handler.create(this, function () {
            // 触发主角预警并生成1个敌人
            this.selfScene['MainSceneControl'].role_01['Role'].role_Warning = true;
            this.selfScene['MainSceneControl'].role_02['Role'].role_Warning = true;
            var enemy = this.mainSceneControl.careatEnemy(direction, enemyTarget, 'range');
            enemy.pos(candy.x, candy.y);
            candy.removeSelf();
        }, []), 0);
    };
    /**计时器控制
     * 当时间小于零的时候所有还没有点击的糖果直接变成敌人
     * 并且结算，重置属性
    */
    OperationButton.prototype.timerControl = function () {
        if (this.timeSchedule.value > 0 && this.settleSwitch === false) {
            this.timeSchedule.value -= 0.002;
        }
        else if (this.timeSchedule.value <= 0 && this.settleSwitch === false) {
            // 没有点击过的全部变成敌人,减去点错的糖果，和
            var groupArr = [0, 1, 2, 3, 4];
            for (var i = 0; i < this.alreadyGroup.length; i++) {
                for (var j = 0; j < groupArr.length; j++) {
                    if (this.alreadyGroup[i] === groupArr[j]) {
                        groupArr.shift();
                    }
                }
            }
            // 把没有点击的变成敌人
            for (var k = 0; k < this.candyParent._children.length; k++) {
                var candy = this.candyParent._children[k];
                for (var l = 0; l < groupArr.length; l++) {
                    if (candy["Candy"].group === groupArr[l]) {
                        this.candybecomeEnemy(candy);
                    }
                }
            }
            // 点击过的结算
            this.settlement();
        }
    };
    /**新建糖果，初始换属性*/
    OperationButton.prototype.initCandy = function () {
        this.mainSceneControl.createWaveCandys();
        this.clickHint();
        this.settleSwitch = false;
        this.timeSchedule.value = 1;
    };
    /**移动*/
    OperationButton.prototype.move = function (event) {
        if (!this.operationSwitch && this.settleSwitch) {
            return;
        }
    };
    /**抬起*/
    OperationButton.prototype.up = function (event) {
        if (!this.operationSwitch && this.settleSwitch) {
            return;
        }
        event.currentTarget.scale(1, 1);
    };
    /**出屏幕*/
    OperationButton.prototype.out = function (event) {
        if (!this.operationSwitch && this.settleSwitch) {
            return;
        }
        event.currentTarget.scale(1, 1);
    };
    OperationButton.prototype.onUpdate = function () {
        // 主角全部死亡游戏结束
        if (this.mainSceneControl.roleParent._children.length === 0) {
            this.operationSwitch = false;
            return;
        }
        //计时器
        this.timerControl();
        // 如果糖果被点完了，那么重新生成10个糖果
        if (this.candyParent._children.length === 0) {
            // 新建糖果
            this.initCandy();
        }
        // 时间到了才可以进行操作
        if (this.mainSceneControl.timerControl > 200) {
            this.operationSwitch = true;
        }
    };
    OperationButton.prototype.onDisable = function () {
    };
    return OperationButton;
}(Laya.Script));
exports.default = OperationButton;
},{"./MainSceneControl":7,"./Tool":13}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var RewardWords = /** @class */ (function (_super) {
    __extends(RewardWords, _super);
    function RewardWords() {
        return _super.call(this) || this;
    }
    RewardWords.prototype.onEnable = function () {
        this.self = this.owner;
        this.self['RewardWords'] = this;
        this.self.alpha = 0; //出现的时候隐身，方便做动画
        this.self.y = Laya.stage.height / 2;
        this.self.x = 1200;
        this.word = this.self.getChildByName('word');
    };
    /**通过传入的参数来，设置属性图片字的格式
     * @param word 具体字样
     * */
    RewardWords.prototype.initProperty = function (word) {
        this.word.value = word;
        this.RewardWordsMove();
    };
    ;
    /**飘字动画时间线*/
    RewardWords.prototype.RewardWordsMove = function () {
        var timeLine = new Laya.TimeLine;
        timeLine.addLabel('appear', 0).to(this.self, { x: Laya.stage.width / 2, alpha: 1 }, 300, null, 0)
            .addLabel('pause', 0).to(this.self, { x: Laya.stage.width / 2 }, 800, null, 0)
            .addLabel('vanish_01', 0).to(this.self, { x: Laya.stage.width / 2 - 100 }, 100, null, 0)
            .addLabel('vanish_02', 0).to(this.self, { x: -1200 }, 300, null, 0);
        timeLine.play('appear', false);
        timeLine.on(Laya.Event.COMPLETE, this, function () {
            this.self.removeSelf();
        });
    };
    RewardWords.prototype.onDisable = function () {
    };
    return RewardWords;
}(Laya.Script));
exports.default = RewardWords;
},{}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Role = /** @class */ (function (_super) {
    __extends(Role, _super);
    function Role() {
        return _super.call(this) || this;
    }
    Role.prototype.onEnable = function () {
        this.initProperty();
        this.bucketClink();
        this.rolePropertySet();
    };
    /**初始化*/
    Role.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfHealth = this.self.getChildByName('health');
        this.propertyShow = this.self.getChildByName('propertyShow');
        // 默认属性不可见
        this.propertyShow.alpha = 0;
        this.bloodLabel = this.selfHealth.getChildByName('bloodLabel');
        this.self['Role'] = this;
        this.selfScene = this.self.scene;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default); //场景脚本组件
        this.candyParent = this.mainSceneControl.candyParent;
        this.scoreLabel = this.mainSceneControl.scoreLabel;
        this.nowTime = Date.now();
    };
    /**主角的属性
     *两个主角属性分别计算
     *四个属性依次是，生命值，子弹攻击力，子弹发射频率和弹道速度，防御能力
    */
    Role.prototype.rolePropertySet = function () {
        if (this.self.name === 'role_01') {
            this.role_property = {
                blood: 2000,
                attackValue: 20,
                attackSpeed: 100,
                defense: 15,
            };
        }
        else if (this.self.name === 'role_02') {
            this.role_property = {
                blood: 2000,
                attackValue: 20,
                attackSpeed: 500,
                defense: 15,
            };
        }
    };
    /**属性实时刷新刷新*/
    Role.prototype.updateProperty = function () {
        // 血条上的血量显示、
        this.bloodLabel.text = this.role_property.blood;
        // 属性显示框内的属性显示
        // 血量
        var blood = this.propertyShow.getChildByName('blood');
        blood.text = "血量: " + this.role_property.blood;
        // 攻击力
        var attackValue = this.propertyShow.getChildByName('attackValue');
        attackValue.text = "攻击力: " + this.role_property.attackValue;
        // 攻击速度
        var attackSpeed = this.propertyShow.getChildByName('attackSpeed');
        attackSpeed.text = "攻击速度: " + this.role_property.attackSpeed;
        // 防御力
        var defense = this.propertyShow.getChildByName('defense');
        defense.text = "防御力: " + this.role_property.defense;
    };
    /**主角的点击事件
     * 和长按出现属性展示页面
     * 滑动可以拖动主角到规定的位置
    */
    Role.prototype.bucketClink = function () {
        this.self.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.self.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.self.on(Laya.Event.MOUSE_UP, this, this.up);
        this.self.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**按下,给予目标位置，糖果走向目标位置;
     * 并且分数增加*/
    Role.prototype.down = function (event) {
    };
    /**移动*/
    Role.prototype.move = function (event) {
    };
    /**抬起*/
    Role.prototype.up = function () {
        this.self.scale(1, 1);
    };
    /**出屏幕*/
    Role.prototype.out = function () {
        this.self.scale(1, 1);
    };
    /**创建主角子弹
     * 主角1位置的子弹
    */
    Role.prototype.careatBullet = function () {
        var bullet = Laya.Pool.getItemByCreateFun('roleBullet', this.roleBullet.create, this.roleBullet);
        this.bulletParent.addChild(bullet);
        bullet.pos(this.self.x, this.self.y);
        this.lockedBulletTarget(bullet);
        bullet['Bullet'].belongRole = this.self;
    };
    /**锁定最近的那个敌人
    * 如果没有敌人，且屏幕上敌人存在，那么会锁定一个敌人
    * 左右判断原则是，如果是左边角色发射子弹，那么先观察左边有没有敌人，如果有那么优先攻击左边
   */
    Role.prototype.lockedBulletTarget = function (bullet) {
        // 两点之间的距离数组
        var distanceArr = [];
        var enemyParent = this.mainSceneControl.enemyParent;
        for (var i = 0; i < enemyParent._children.length; i++) {
            var enemy = enemyParent._children[i];
            //两点之间的距离
            var dx = enemy.x - this.self.x;
            var dy = enemy.y - this.self.y;
            var distance = Math.sqrt(dx * dx + dy * dy);
            var object = {
                distance: distance,
                name: enemy.name
            };
            distanceArr.push(object);
        }
        // 距离排序
        var compare = function (obj1, obj2) {
            var val1 = obj1.distance;
            var val2 = obj2.distance;
            if (val1 < val2) {
                return -1;
            }
            else if (val1 > val2) {
                return 1;
            }
            else {
                return 0;
            }
        };
        // 找出距离最近的
        distanceArr.sort(compare);
        if (distanceArr.length > 0) {
            bullet['Bullet'].bulletTarget = enemyParent.getChildByName(distanceArr[0].name);
        }
    };
    Role.prototype.onUpdate = function () {
        // 血量低于0则死亡
        if (this.role_property.blood <= 0) {
            this.self.removeSelf();
        }
        // 刷新属性
        this.updateProperty();
        //创建子弹
        if (this.role_Warning) {
            var nowTime = Date.now();
            if (nowTime - this.nowTime > this.role_property.attackSpeed) {
                this.careatBullet();
                this.nowTime = nowTime;
            }
        }
    };
    Role.prototype.onDisable = function () {
    };
    return Role;
}(Laya.Script));
exports.default = Role;
},{"./MainSceneControl":7}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Bullet = /** @class */ (function (_super) {
    __extends(Bullet, _super);
    function Bullet() {
        return _super.call(this) || this;
    }
    Bullet.prototype.onEnable = function () {
        this.init();
    };
    /**初始化一些属性*/
    Bullet.prototype.init = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default);
        this.enemyParent = this.mainSceneControl.enemyParent;
        this.hintWord = this.mainSceneControl.hintWord;
        this.selfSpeed = 15;
        // 属性赋值
        this.role_01 = this.selfScene['MainSceneControl'].role_01;
        this.attackValue = this.role_01['Role'].role_property.attackValue;
        this.self['Bullet'] = this;
    };
    /**子弹移动
     * 子弹只有当目标对象和目标对象在父节点内的时候才会移动
     * 目标对象永远存在，只不过他被移除了，所以bulletTarget永不为空，只能判断父节点是否存在
     * 若果这个目标被移除了，那么发出去的子弹会沿着和主角的方向继续移动到500；
    */
    Bullet.prototype.bulletMove = function () {
        if (this.bulletTarget && this.bulletTarget.parent) {
            // x,y分别相减是两点连线向量
            var point = new Laya.Point(this.bulletTarget.x - this.self.x, this.bulletTarget.y - this.self.y);
            // 归一化，向量长度为1。
            point.normalize();
            //向量相加
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
        }
        else {
            // 沿着自己和发射自己的主角方向移动
            var point = new Laya.Point(this.self.x - this.belongRole.x, this.self.y - this.belongRole.y);
            // 归一化，向量长度为1。
            point.normalize();
            //向量相加
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
        }
    };
    Bullet.prototype.onUpdate = function () {
        // 移动
        this.bulletMove();
        // 超出横向范围消失，一般不会触发
        if (this.self.x > 750 + this.self.width + 50 || this.self.x < -this.self.width) {
            this.self.removeSelf();
        }
        // 射程为500，超过射程消失
        if (this.self.y <= Laya.stage.width * 1 / 3) {
            this.self.removeSelf();
            return;
        }
        // 碰到任何一个怪物，子弹消失怪物掉血
        // 子弹击中怪物怪物会后退
        for (var i = 0; i < this.enemyParent._children.length; i++) {
            var enemy = this.enemyParent._children[i];
            var differenceX = Math.abs(enemy.x - this.self.x);
            var differenceY = Math.abs(enemy.y - this.self.y);
            if (differenceX < 10 && differenceY < 10) {
                this.bulletAttackRules(enemy);
                this.self.removeSelf();
            }
        }
    };
    /**子弹对敌人造成伤害的公式
     * 子弹击中敌人，敌人会被击退
      * 攻击力-敌人防御如果大于零则造成伤害，否则不造成伤害
      * 掉血显示值，伤害小于零则显示0
      * 并且有动画提示文字
     */
    Bullet.prototype.bulletAttackRules = function (enemy) {
        // 通过攻击力计算掉血状况
        var damage = this.attackValue - enemy['Enemy'].enemyProperty.defense;
        if (damage > 0) {
            enemy['Enemy'].enemyProperty.blood -= damage;
        }
        else {
            damage = 0;
        }
        // 飘字
        this.hintWordMove(enemy, damage);
        // 触发击退
        enemy['Enemy'].repelTimer = 2;
    };
    Bullet.prototype.hintWordMove = function (enemy, damage) {
        // 敌人被消灭了，则不执行这个
        if (enemy.parent === null) {
            return;
        }
        // 创建提示动画对象
        var hintWord = Laya.Pool.getItemByCreateFun('candy', this.hintWord.create, this.hintWord);
        hintWord.pos(100, -150);
        enemy.addChild(hintWord);
        var proPertyType = '主角掉血';
        var numberValue;
        hintWord['HintWord'].initProperty(proPertyType, damage);
    };
    Bullet.prototype.onDisable = function () {
        Laya.Pool.recover('bullet', this.self);
    };
    return Bullet;
}(Laya.Script));
exports.default = Bullet;
},{"./MainSceneControl":7}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Suspend = /** @class */ (function (_super) {
    __extends(Suspend, _super);
    function Suspend() {
        return _super.call(this) || this;
    }
    Suspend.prototype.onEnable = function () {
        this.init();
        this.bucketClink();
    };
    /**初始化必要属性*/
    Suspend.prototype.init = function () {
        this.suspend = false;
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.roleParent = this.selfScene['MainSceneControl'].roleParent;
        this.enemyParent = this.selfScene['MainSceneControl'].enemyParent;
    };
    /**主角的点击事件
    * 和长按出现属性展示页面
    * 滑动可以拖动主角到规定的位置
   */
    Suspend.prototype.bucketClink = function () {
        this.self.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.self.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.self.on(Laya.Event.MOUSE_UP, this, this.up);
        this.self.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**按下,给予目标位置，糖果走向目标位置;
     * 并且分数增加*/
    Suspend.prototype.down = function (event) {
        var suspend = this.selfScene['MainSceneControl'].suspend;
        // 打开和关闭敌人的属性
        for (var i = 0; i < this.enemyParent._children.length; i++) {
            var enemy = this.enemyParent._children[i];
            var propertyShow = enemy.getChildByName('propertyShow');
            if (!suspend) {
                this.selfScene['MainSceneControl'].suspend = true;
                propertyShow.alpha = 1;
                // Laya.stage.renderingEnabled = true;
            }
            else {
                this.selfScene['MainSceneControl'].suspend = false;
                propertyShow.alpha = 0;
                // Laya.stage.renderingEnabled = false;
            }
        }
        // 主角的属性
        for (var i = 0; i < this.roleParent._children.length; i++) {
            var role = this.roleParent._children[i];
            var propertyShow = role.getChildByName('propertyShow');
            if (!suspend) {
                this.selfScene['MainSceneControl'].suspend = true;
                propertyShow.alpha = 1;
            }
            else {
                this.selfScene['MainSceneControl'].suspend = false;
                propertyShow.alpha = 0;
            }
        }
    };
    /**移动*/
    Suspend.prototype.move = function (event) {
    };
    /**抬起*/
    Suspend.prototype.up = function () {
        this.self.scale(1, 1);
    };
    /**出屏幕*/
    Suspend.prototype.out = function () {
        this.self.scale(1, 1);
    };
    /**暂停状态显示所有属性框，非暂停状态不显示属性框*/
    Suspend.prototype.suspendedState = function () {
        if (this.suspend) {
        }
    };
    Suspend.prototype.onDisable = function () {
    };
    return Suspend;
}(Laya.Script));
exports.default = Suspend;
},{}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tools;
(function (tools) {
    /**
     *
     * @param n
     * @param m 第二个随机数不存在的话默认为10
     */
    function random(n, m) {
        m = m || 10;
        var c = m - n + 1;
        return Math.floor(Math.random() * c + n);
    }
    tools.random = random;
    /**
     *
     * @param arr
     * @param count
     * 从数组中随机取出count个数
     */
    function getRandomArrayElements(arr, count) {
        var shuffled = arr.slice(0), i = arr.length, min = i - count, temp, index;
        while (i-- > min) {
            index = Math.floor((i + 1) * Math.random());
            temp = shuffled[index];
            shuffled[index] = shuffled[i];
            shuffled[i] = temp;
        }
        return shuffled.slice(min);
    }
    tools.getRandomArrayElements = getRandomArrayElements;
    function getArrayDifElements(arr, count) {
        var result = [];
        var i = 0;
        for (i; i < count; i++) {
            var temp = getDiffEle(arr.slice(), result, i);
            result.push(temp);
        }
        return result;
    }
    tools.getArrayDifElements = getArrayDifElements;
    function getDiffEle(arr, result, place) {
        var indexArr = [];
        var i = 0;
        for (i; i < arr.length - place; i++) {
            indexArr.push(i);
        }
        var ranIndex = Math.floor(Math.random() * indexArr.length);
        if (result.indexOf(arr[ranIndex]) === -1) {
            var backNum = arr[ranIndex];
            arr[ranIndex] = arr[indexArr.length - 1];
            return backNum;
        }
        else {
            arr.splice(ranIndex, 1);
            return getDiffEle(arr, result, place);
        }
    }
    tools.getDiffEle = getDiffEle;
    tools.roleDragCan = false;
    function copydata(obj) {
        var ret = {};
        Object.getOwnPropertyNames(obj).forEach(function (name) {
            ret[name] = obj[name];
        });
        return ret;
    }
    tools.copydata = copydata;
    /**
     * 数组复制
     */
    function fillArray(value, len) {
        var arr = [];
        for (var i = 0; i < len; i++) {
            arr.push(value);
        }
        return arr;
    }
    tools.fillArray = fillArray;
    /**
     *
     * @param angle 角度
     * @param XY 必须包含y上的速度
     */
    function speedByAngle(angle, XY) {
        if (angle % 90 === 0 || !angle) {
            console.error("计算的角度异常,需要查看：", angle);
            // debugger
            return;
        }
        var speedXY = { x: 0, y: 0 };
        speedXY.y = XY.y;
        speedXY.x = speedXY.y / Math.tan(angle * Math.PI / 180);
        return speedXY;
    }
    tools.speedByAngle = speedByAngle;
    function speedXYByAngle(angle, speed) {
        if (angle % 90 === 0 || !angle) {
            //debugger
        }
        var speedXY = { x: 0, y: 0 };
        speedXY.x = speed * Math.cos(angle * Math.PI / 180);
        speedXY.y = speed * Math.sin(angle * Math.PI / 180);
        return speedXY;
    }
    tools.speedXYByAngle = speedXYByAngle;
    function speedLabelByAngle(angle, speed, speedBate) {
        // if (angle % 90 === 0 || !angle) {
        //     debugger
        // }
        var speedXY = { x: 0, y: 0 };
        var selfAngle = angle;
        var defaultSpeed = speed;
        var bate = speedBate || 1;
        if (selfAngle % 90 === 0) {
            if (selfAngle === 0 || selfAngle === 360) {
                speedXY.x = Math.abs(defaultSpeed) * bate;
            }
            else if (selfAngle === 90) {
                speedXY.y = Math.abs(defaultSpeed) * bate;
            }
            else if (selfAngle === 180) {
                speedXY.x = -Math.abs(defaultSpeed) * bate;
            }
            else {
                speedXY.y = -Math.abs(defaultSpeed) * bate;
            }
        }
        else {
            var tempXY = tools.speedXYByAngle(selfAngle, defaultSpeed);
            speedXY.x = tempXY.x;
            speedXY.y = tempXY.y;
            if (selfAngle > 0 && selfAngle < 180) {
                speedXY.y = Math.abs(speedXY.y) * bate;
            }
            else {
                speedXY.y = -Math.abs(speedXY.y) * bate;
            }
            if (selfAngle > 90 && selfAngle < 270) {
                speedXY.x = -Math.abs(speedXY.x) * bate;
            }
            else {
                speedXY.x = Math.abs(speedXY.x) * bate;
            }
        }
        return speedXY;
    }
    tools.speedLabelByAngle = speedLabelByAngle;
    /**
     *
     * @param degree 角度
     * 根据角度计算弧度
     */
    function getRad(degree) {
        return degree / 180 * Math.PI;
    }
    tools.getRad = getRad;
    /**
     * 求圆上的点的坐标~
     */
    function getRoundPos(angle, radius, centPos) {
        var center = centPos; //圆心坐标
        var radius = radius; //半径
        var hudu = (2 * Math.PI / 360) * angle; //90度角的弧度
        var X = center.x + Math.sin(hudu) * radius; //求出90度角的x坐标
        var Y = center.y - Math.cos(hudu) * radius; //求出90度角的y坐标
        return { x: X, y: Y };
    }
    tools.getRoundPos = getRoundPos;
    /**
     * 转化大的数字
     */
    function converteNum(num) {
        if (typeof (num) !== "number") {
            console.warn("要转化的数字并不为number");
            return num;
        }
        var backNum;
        if (num < 1000) {
            backNum = "" + num;
        }
        else if (num < 1000000) {
            backNum = "" + (num / 1000).toFixed(1) + "k";
        }
        else if (num < 10e8) {
            backNum = "" + (num / 1000000).toFixed(1) + "m";
        }
        else {
            backNum = "" + num;
        }
        return backNum;
    }
    tools.converteNum = converteNum;
})(tools = exports.tools || (exports.tools = {}));
exports.default = tools;
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkU6L+i9r+S7tuWuieijhS9MQVlBL3Jlc291cmNlcy9hcHAvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsInNyYy9HYW1lQ29uZmlnLnRzIiwic3JjL01haW4udHMiLCJzcmMvc2NyaXB0L0NhbmR5LnRzIiwic3JjL3NjcmlwdC9FbmVteS50cyIsInNyYy9zY3JpcHQvRW5lbXlCdWxsZXQudHMiLCJzcmMvc2NyaXB0L0hpbnRXb3JkLnRzIiwic3JjL3NjcmlwdC9NYWluU2NlbmVDb250cm9sLnRzIiwic3JjL3NjcmlwdC9PcGVyYXRpb25Db250cm9sLnRzIiwic3JjL3NjcmlwdC9SZXdhcmRXb3Jkcy50cyIsInNyYy9zY3JpcHQvUm9sZS50cyIsInNyYy9zY3JpcHQvUm9sZUJ1bGxldC50cyIsInNyYy9zY3JpcHQvU3VzcGVuZC50cyIsInNyYy9zY3JpcHQvVG9vbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNWQSxnR0FBZ0c7QUFDaEcsOERBQXdEO0FBQ3hELHNDQUFnQztBQUNoQyw4REFBd0Q7QUFDeEQsNENBQXNDO0FBQ3RDLHdDQUFrQztBQUNsQyx3Q0FBa0M7QUFDbEMsb0RBQThDO0FBQzlDLDhDQUF3QztBQUN4QyxvREFBOEM7QUFDOUMsa0RBQTRDO0FBQzVDOztFQUVFO0FBQ0Y7SUFhSTtJQUFjLENBQUM7SUFDUixlQUFJLEdBQVg7UUFDSSxJQUFJLEdBQUcsR0FBYSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQztRQUM3QyxHQUFHLENBQUMsNEJBQTRCLEVBQUMsMEJBQWdCLENBQUMsQ0FBQztRQUNuRCxHQUFHLENBQUMsZ0JBQWdCLEVBQUMsY0FBSSxDQUFDLENBQUM7UUFDM0IsR0FBRyxDQUFDLDRCQUE0QixFQUFDLDBCQUFnQixDQUFDLENBQUM7UUFDbkQsR0FBRyxDQUFDLG1CQUFtQixFQUFDLGlC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QUFJLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUFBLENBQUM7SUFFRixZQUFZO0lBQ1oscUNBQWUsR0FBZjtRQUNJLElBQUksUUFBUSxHQUFHLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUNqQyxRQUFRLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO2FBQzVGLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsQ0FBQyxFQUFFLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7YUFDN0UsUUFBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLEdBQUcsR0FBRyxFQUFFLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7YUFDdkYsUUFBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUE7UUFDdkUsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDL0IsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxJQUFJLEVBQUU7WUFDbkMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUMzQixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCwrQkFBUyxHQUFUO0lBQ0EsQ0FBQztJQUNMLGtCQUFDO0FBQUQsQ0F4Q0EsQUF3Q0MsQ0F4Q3dDLElBQUksQ0FBQyxNQUFNLEdBd0NuRDs7Ozs7QUN4Q0QsdURBQWtEO0FBR2xEO0lBQWtDLHdCQUFXO0lBK0J6QztlQUFnQixpQkFBTztJQUFFLENBQUM7SUFFMUIsdUJBQVEsR0FBUjtRQUNJLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUNwQixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDbkIsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFDRCxRQUFRO0lBQ1IsMkJBQVksR0FBWjtRQUNJLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQW9CLENBQUM7UUFDdEMsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxRQUFRLENBQXFCLENBQUM7UUFDekUsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxjQUFjLENBQWUsQ0FBQztRQUMzRSxVQUFVO1FBQ1YsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO1FBRTVCLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFlLENBQUM7UUFDN0UsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7UUFFekIsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQW1CLENBQUM7UUFDL0MsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLDBCQUFnQixDQUFDLENBQUMsQ0FBQSxRQUFRO1FBQzlFLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFdBQVcsQ0FBQztRQUNyRCxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLENBQUM7UUFDbkQsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDOUIsQ0FBQztJQUVEOzs7TUFHRTtJQUNGLDhCQUFlLEdBQWY7UUFDSSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLFNBQVMsRUFBRTtZQUM5QixJQUFJLENBQUMsYUFBYSxHQUFHO2dCQUNqQixLQUFLLEVBQUUsSUFBSTtnQkFDWCxXQUFXLEVBQUUsRUFBRTtnQkFDZixXQUFXLEVBQUUsR0FBRztnQkFDaEIsT0FBTyxFQUFFLEVBQUU7YUFDZCxDQUFDO1NBQ0w7YUFBTSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLFNBQVMsRUFBRTtZQUNyQyxJQUFJLENBQUMsYUFBYSxHQUFHO2dCQUNqQixLQUFLLEVBQUUsSUFBSTtnQkFDWCxXQUFXLEVBQUUsRUFBRTtnQkFDZixXQUFXLEVBQUUsR0FBRztnQkFDaEIsT0FBTyxFQUFFLEVBQUU7YUFDZCxDQUFDO1NBQ0w7SUFDTCxDQUFDO0lBRUQsYUFBYTtJQUNiLDZCQUFjLEdBQWQ7UUFDSSxZQUFZO1FBQ1osSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUM7UUFDaEQsY0FBYztRQUNkLEtBQUs7UUFDTCxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQWUsQ0FBQztRQUNwRSxLQUFLLENBQUMsSUFBSSxHQUFHLE1BQU0sR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQztRQUMvQyxNQUFNO1FBQ04sSUFBSSxXQUFXLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxjQUFjLENBQUMsYUFBYSxDQUFlLENBQUM7UUFDaEYsV0FBVyxDQUFDLElBQUksR0FBRyxPQUFPLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUM7UUFDNUQsT0FBTztRQUNQLElBQUksV0FBVyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsY0FBYyxDQUFDLGFBQWEsQ0FBZSxDQUFDO1FBQ2hGLFdBQVcsQ0FBQyxJQUFJLEdBQUcsUUFBUSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDO1FBQzdELE1BQU07UUFDTixJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQWUsQ0FBQztRQUN4RSxPQUFPLENBQUMsSUFBSSxHQUFHLE9BQU8sR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQztJQUN4RCxDQUFDO0lBRUQ7OztNQUdFO0lBQ0YsMEJBQVcsR0FBWDtRQUNJLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckQsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyRCxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ2pELElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDdkQsQ0FBQztJQUNEO2VBQ1c7SUFDWCxtQkFBSSxHQUFKLFVBQUssS0FBSztJQUNWLENBQUM7SUFDRCxPQUFPO0lBQ1AsbUJBQUksR0FBSixVQUFLLEtBQUs7SUFDVixDQUFDO0lBQ0QsT0FBTztJQUNQLGlCQUFFLEdBQUY7UUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDMUIsQ0FBQztJQUNELFFBQVE7SUFDUixrQkFBRyxHQUFIO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzFCLENBQUM7SUFFRDs7TUFFRTtJQUNGLDJCQUFZLEdBQVo7UUFDSSxJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFnQixDQUFDO1FBQ2hILElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ25DLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNyQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDaEMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQzVDLENBQUM7SUFFRDs7O0tBR0M7SUFDRCxpQ0FBa0IsR0FBbEIsVUFBbUIsTUFBTTtRQUNyQixZQUFZO1FBQ1osSUFBSSxXQUFXLEdBQWUsRUFBRSxDQUFDO1FBQ2pDLElBQUksV0FBVyxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUM7UUFDcEQsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFdBQVcsQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ25ELElBQUksS0FBSyxHQUFHLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFnQixDQUFDO1lBQ3BELFNBQVM7WUFDVCxJQUFJLEVBQUUsR0FBVyxLQUFLLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ3ZDLElBQUksRUFBRSxHQUFXLEtBQUssQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDdkMsSUFBSSxRQUFRLEdBQVcsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztZQUNwRCxJQUFJLE1BQU0sR0FBRztnQkFDVCxRQUFRLEVBQUUsUUFBUTtnQkFDbEIsSUFBSSxFQUFFLEtBQUssQ0FBQyxJQUFJO2FBQ25CLENBQUE7WUFDRCxXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQzVCO1FBQ0QsT0FBTztRQUNQLElBQUksT0FBTyxHQUFHLFVBQVUsSUFBSSxFQUFFLElBQUk7WUFDOUIsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztZQUN6QixJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1lBQ3pCLElBQUksSUFBSSxHQUFHLElBQUksRUFBRTtnQkFDYixPQUFPLENBQUMsQ0FBQyxDQUFDO2FBQ2I7aUJBQU0sSUFBSSxJQUFJLEdBQUcsSUFBSSxFQUFFO2dCQUNwQixPQUFPLENBQUMsQ0FBQzthQUNaO2lCQUFNO2dCQUNILE9BQU8sQ0FBQyxDQUFDO2FBQ1o7UUFDTCxDQUFDLENBQUE7UUFDRCxVQUFVO1FBQ1YsV0FBVyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMxQixJQUFJLFdBQVcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQ3hCLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxZQUFZLEdBQUcsV0FBVyxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFnQixDQUFDO1NBQ2xHO0lBQ0wsQ0FBQztJQUVELHVCQUFRLEdBQVI7UUFDSSxXQUFXO1FBQ1gsSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssSUFBSSxDQUFDLEVBQUU7WUFDL0IsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztTQUMxQjtRQUNELE9BQU87UUFDUCxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7UUFFdEIsTUFBTTtRQUNOLElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtZQUNuQixJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7WUFDekIsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsRUFBRTtnQkFDekQsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO2dCQUNwQixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQzthQUMxQjtTQUNKO0lBQ0wsQ0FBQztJQUNELHdCQUFTLEdBQVQ7SUFFQSxDQUFDO0lBQ0wsV0FBQztBQUFELENBak1BLEFBaU1DLENBak1pQyxJQUFJLENBQUMsTUFBTSxHQWlNNUM7Ozs7O0FDcE1ELHVEQUFrRDtBQUNsRDtJQUFvQywwQkFBVztJQTRCM0M7ZUFBZ0IsaUJBQU87SUFBRSxDQUFDO0lBRTFCLHlCQUFRLEdBQVI7UUFDSSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVELFlBQVk7SUFDWixxQkFBSSxHQUFKO1FBQ0ksSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsS0FBb0IsQ0FBQztRQUN0QyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ2pDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQywwQkFBZ0IsQ0FBQyxDQUFDO1FBQ3RFLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFdBQVcsQ0FBQztRQUNyRCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUM7UUFDL0MsSUFBSSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7UUFDcEIsT0FBTztRQUNQLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLE9BQU8sQ0FBQztRQUMxRCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQztRQUNsRSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLElBQUksQ0FBQztJQUMvQixDQUFDO0lBRUQ7Ozs7TUFJRTtJQUNGLDJCQUFVLEdBQVY7UUFDSSxJQUFJLElBQUksQ0FBQyxZQUFZLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUU7WUFDL0MsaUJBQWlCO1lBQ2pCLElBQUksS0FBSyxHQUFHLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2pHLGNBQWM7WUFDZCxLQUFLLENBQUMsU0FBUyxFQUFFLENBQUM7WUFDbEIsTUFBTTtZQUNOLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLEtBQUssQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztZQUN4QyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxLQUFLLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7U0FDM0M7YUFBTTtZQUNILG1CQUFtQjtZQUNuQixJQUFJLEtBQUssR0FBRyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM3RixjQUFjO1lBQ2QsS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDO1lBQ2xCLE1BQU07WUFDTixJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxLQUFLLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDeEMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksS0FBSyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO1NBQzNDO0lBQ0wsQ0FBQztJQUVELHlCQUFRLEdBQVI7UUFDSSxLQUFLO1FBQ0wsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ2xCLGtCQUFrQjtRQUNsQixJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRTtZQUM1RSxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1NBQzFCO1FBQ0QsZ0JBQWdCO1FBQ2hCLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUN6QyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1lBQ3ZCLE9BQU87U0FDVjtRQUNELG9CQUFvQjtRQUNwQixjQUFjO1FBQ2QsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUN4RCxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQWdCLENBQUM7WUFDekQsSUFBSSxXQUFXLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbEQsSUFBSSxXQUFXLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbEQsSUFBSSxXQUFXLEdBQUcsRUFBRSxJQUFJLFdBQVcsR0FBRyxFQUFFLEVBQUU7Z0JBQ3RDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFDOUIsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQzthQUMxQjtTQUNKO0lBQ0wsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0gsa0NBQWlCLEdBQWpCLFVBQWtCLEtBQUs7UUFDbkIsY0FBYztRQUNkLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUM7UUFDckUsSUFBSSxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQ1osS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLGFBQWEsQ0FBQyxLQUFLLElBQUksTUFBTSxDQUFDO1NBQ2hEO2FBQU07WUFDSCxNQUFNLEdBQUcsQ0FBQyxDQUFDO1NBQ2Q7UUFDRCxLQUFLO1FBQ0wsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDakMsT0FBTztRQUNQLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFRCw2QkFBWSxHQUFaLFVBQWEsS0FBa0IsRUFBRSxNQUFjO1FBQzNDLGdCQUFnQjtRQUNoQixJQUFJLEtBQUssQ0FBQyxNQUFNLEtBQUssSUFBSSxFQUFFO1lBQ3ZCLE9BQU87U0FDVjtRQUNELFdBQVc7UUFDWCxJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFnQixDQUFDO1FBQ3pHLFFBQVEsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDeEIsS0FBSyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN6QixJQUFJLFlBQVksR0FBVyxNQUFNLENBQUM7UUFDbEMsSUFBSSxXQUFtQixDQUFDO1FBQ3hCLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxZQUFZLENBQUMsWUFBWSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQzVELENBQUM7SUFFRCwwQkFBUyxHQUFUO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBQ0wsYUFBQztBQUFELENBdklBLEFBdUlDLENBdkltQyxJQUFJLENBQUMsTUFBTSxHQXVJOUM7Ozs7O0FDeElEO0lBQXFDLDJCQUFXO0lBYzVDO2VBQWdCLGlCQUFPO0lBQUUsQ0FBQztJQUUxQiwwQkFBUSxHQUFSO1FBQ0ksSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ1osSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxZQUFZO0lBQ1osc0JBQUksR0FBSjtRQUNJLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQW9CLENBQUM7UUFDdEMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQW1CLENBQUM7UUFDL0MsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLGtCQUFrQixDQUFDLENBQUMsVUFBVSxDQUFDO1FBQ2hFLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLFdBQVcsQ0FBQztJQUN0RSxDQUFDO0lBRUQ7OztLQUdDO0lBQ0QsNkJBQVcsR0FBWDtRQUNJLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckQsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyRCxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ2pELElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDdkQsQ0FBQztJQUNEO2VBQ1c7SUFDWCxzQkFBSSxHQUFKLFVBQUssS0FBSztRQUNOLElBQUksT0FBTyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxPQUFPLENBQUM7UUFDekQsYUFBYTtRQUNiLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDeEQsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFnQixDQUFDO1lBQ3pELElBQUksWUFBWSxHQUFHLEtBQUssQ0FBQyxjQUFjLENBQUMsY0FBYyxDQUFnQixDQUFDO1lBQ3ZFLElBQUksQ0FBQyxPQUFPLEVBQUU7Z0JBQ1YsSUFBSSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7Z0JBQ2xELFlBQVksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO2dCQUN2QixzQ0FBc0M7YUFDekM7aUJBQU07Z0JBQ0gsSUFBSSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7Z0JBQ25ELFlBQVksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO2dCQUN2Qix1Q0FBdUM7YUFDMUM7U0FDSjtRQUNELFFBQVE7UUFDUixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3ZELElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBZ0IsQ0FBQztZQUN2RCxJQUFJLFlBQVksR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLGNBQWMsQ0FBZ0IsQ0FBQztZQUN0RSxJQUFJLENBQUMsT0FBTyxFQUFFO2dCQUNWLElBQUksQ0FBQyxTQUFTLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO2dCQUNsRCxZQUFZLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQzthQUMxQjtpQkFBTTtnQkFDSCxJQUFJLENBQUMsU0FBUyxDQUFDLGtCQUFrQixDQUFDLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztnQkFDbkQsWUFBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7YUFDMUI7U0FDSjtJQUNMLENBQUM7SUFDRCxPQUFPO0lBQ1Asc0JBQUksR0FBSixVQUFLLEtBQUs7SUFDVixDQUFDO0lBQ0QsT0FBTztJQUNQLG9CQUFFLEdBQUY7UUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDMUIsQ0FBQztJQUNELFFBQVE7SUFDUixxQkFBRyxHQUFIO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzFCLENBQUM7SUFDRCw0QkFBNEI7SUFDNUIsZ0NBQWMsR0FBZDtRQUNJLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtTQUVqQjtJQUNMLENBQUM7SUFDRCwyQkFBUyxHQUFUO0lBQ0EsQ0FBQztJQUNMLGNBQUM7QUFBRCxDQTFGQSxBQTBGQyxDQTFGb0MsSUFBSSxDQUFDLE1BQU0sR0EwRi9DOzs7OztBQzFGRCxJQUFjLEtBQUssQ0ErS2xCO0FBL0tELFdBQWMsS0FBSztJQUNmOzs7O09BSUc7SUFDSCxnQkFBdUIsQ0FBUyxFQUFFLENBQVU7UUFDeEMsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDWixJQUFNLENBQUMsR0FBVyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUM1QixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQTtJQUM1QyxDQUFDO0lBSmUsWUFBTSxTQUlyQixDQUFBO0lBQ0Q7Ozs7O09BS0c7SUFDSCxnQ0FBdUMsR0FBRyxFQUFFLEtBQUs7UUFDN0MsSUFBSSxRQUFRLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxDQUFDLE1BQU0sRUFBRSxHQUFHLEdBQUcsQ0FBQyxHQUFHLEtBQUssRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDO1FBQzFFLE9BQU8sQ0FBQyxFQUFFLEdBQUcsR0FBRyxFQUFFO1lBQ2QsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7WUFDNUMsSUFBSSxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN2QixRQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzlCLFFBQVEsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUM7U0FDdEI7UUFDRCxPQUFPLFFBQVEsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQVRlLDRCQUFzQix5QkFTckMsQ0FBQTtJQUNELDZCQUFvQyxHQUFHLEVBQUUsS0FBSztRQUMxQyxJQUFNLE1BQU0sR0FBRyxFQUFFLENBQUM7UUFDbEIsSUFBSSxDQUFDLEdBQVcsQ0FBQyxDQUFDO1FBQ2xCLEtBQUssQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDcEIsSUFBTSxJQUFJLEdBQUcsVUFBVSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDaEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNyQjtRQUNELE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFSZSx5QkFBbUIsc0JBUWxDLENBQUE7SUFDRCxvQkFBMkIsR0FBRyxFQUFFLE1BQU0sRUFBRSxLQUFLO1FBQ3pDLElBQUksUUFBUSxHQUFHLEVBQUUsQ0FBQztRQUNsQixJQUFJLENBQUMsR0FBVyxDQUFDLENBQUM7UUFDbEIsS0FBSyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxNQUFNLEdBQUcsS0FBSyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ2pDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDcEI7UUFDRCxJQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDN0QsSUFBSSxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFO1lBQ3RDLElBQU0sT0FBTyxHQUFHLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUM5QixHQUFHLENBQUMsUUFBUSxDQUFDLEdBQUcsR0FBRyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDekMsT0FBTyxPQUFPLENBQUM7U0FDbEI7YUFBTTtZQUNILEdBQUcsQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ3hCLE9BQU8sVUFBVSxDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDekM7SUFDTCxDQUFDO0lBZmUsZ0JBQVUsYUFlekIsQ0FBQTtJQUNVLGlCQUFXLEdBQVksS0FBSyxDQUFDO0lBQ3hDLGtCQUF5QixHQUFHO1FBQ3hCLElBQU0sR0FBRyxHQUFHLEVBQUUsQ0FBQztRQUNmLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxJQUFJO1lBQ3hDLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUIsQ0FBQyxDQUFDLENBQUM7UUFDSCxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7SUFOZSxjQUFRLFdBTXZCLENBQUE7SUFFRDs7T0FFRztJQUNILG1CQUEwQixLQUFLLEVBQUUsR0FBRztRQUNoQyxJQUFJLEdBQUcsR0FBRyxFQUFFLENBQUM7UUFDYixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzFCLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDbkI7UUFDRCxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7SUFOZSxlQUFTLFlBTXhCLENBQUE7SUFFRDs7OztPQUlHO0lBQ0gsc0JBQTZCLEtBQWEsRUFBRSxFQUFPO1FBQy9DLElBQUksS0FBSyxHQUFHLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDNUIsT0FBTyxDQUFDLEtBQUssQ0FBQyxlQUFlLEVBQUUsS0FBSyxDQUFDLENBQUM7WUFDdEMsV0FBVztZQUNYLE9BQU87U0FDVjtRQUNELElBQUksT0FBTyxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUM7UUFDN0IsT0FBTyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ2pCLE9BQU8sQ0FBQyxDQUFDLEdBQUcsT0FBTyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsRUFBRSxHQUFHLEdBQUcsQ0FBQyxDQUFDO1FBQ3hELE9BQU8sT0FBTyxDQUFDO0lBQ25CLENBQUM7SUFWZSxrQkFBWSxlQVUzQixDQUFBO0lBQ0Qsd0JBQStCLEtBQWEsRUFBRSxLQUFhO1FBQ3ZELElBQUksS0FBSyxHQUFHLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDNUIsVUFBVTtTQUNiO1FBQ0QsSUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQztRQUMvQixPQUFPLENBQUMsQ0FBQyxHQUFHLEtBQUssR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsRUFBRSxHQUFHLEdBQUcsQ0FBQyxDQUFDO1FBQ3BELE9BQU8sQ0FBQyxDQUFDLEdBQUcsS0FBSyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxFQUFFLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDcEQsT0FBTyxPQUFPLENBQUM7SUFDbkIsQ0FBQztJQVJlLG9CQUFjLGlCQVE3QixDQUFBO0lBRUQsMkJBQWtDLEtBQWEsRUFBRSxLQUFhLEVBQUUsU0FBa0I7UUFDOUUsb0NBQW9DO1FBQ3BDLGVBQWU7UUFDZixJQUFJO1FBQ0osSUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQztRQUMvQixJQUFNLFNBQVMsR0FBRyxLQUFLLENBQUM7UUFDeEIsSUFBTSxZQUFZLEdBQUcsS0FBSyxDQUFDO1FBQzNCLElBQU0sSUFBSSxHQUFHLFNBQVMsSUFBSSxDQUFDLENBQUM7UUFDNUIsSUFBSSxTQUFTLEdBQUcsRUFBRSxLQUFLLENBQUMsRUFBRTtZQUN0QixJQUFJLFNBQVMsS0FBSyxDQUFDLElBQUksU0FBUyxLQUFLLEdBQUcsRUFBRTtnQkFDdEMsT0FBTyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxHQUFHLElBQUksQ0FBQzthQUM3QztpQkFBTSxJQUFJLFNBQVMsS0FBSyxFQUFFLEVBQUU7Z0JBQ3pCLE9BQU8sQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsR0FBRyxJQUFJLENBQUM7YUFDN0M7aUJBQU0sSUFBSSxTQUFTLEtBQUssR0FBRyxFQUFFO2dCQUMxQixPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsR0FBRyxJQUFJLENBQUM7YUFDOUM7aUJBQU07Z0JBQ0gsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLEdBQUcsSUFBSSxDQUFDO2FBQzlDO1NBQ0o7YUFBTTtZQUNILElBQU0sTUFBTSxHQUFHLEtBQUssQ0FBQyxjQUFjLENBQUMsU0FBUyxFQUFFLFlBQVksQ0FBQyxDQUFDO1lBQzdELE9BQU8sQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUNyQixPQUFPLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDckIsSUFBSSxTQUFTLEdBQUcsQ0FBQyxJQUFJLFNBQVMsR0FBRyxHQUFHLEVBQUU7Z0JBQ2xDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDO2FBQzFDO2lCQUFNO2dCQUNILE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUM7YUFDM0M7WUFDRCxJQUFJLFNBQVMsR0FBRyxFQUFFLElBQUksU0FBUyxHQUFHLEdBQUcsRUFBRTtnQkFDbkMsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQzthQUMzQztpQkFBTTtnQkFDSCxPQUFPLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQzthQUMxQztTQUNKO1FBQ0QsT0FBTyxPQUFPLENBQUM7SUFDbkIsQ0FBQztJQWxDZSx1QkFBaUIsb0JBa0NoQyxDQUFBO0lBQ0Q7Ozs7T0FJRztJQUNILGdCQUF1QixNQUFNO1FBQ3pCLE9BQU8sTUFBTSxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO0lBQ2xDLENBQUM7SUFGZSxZQUFNLFNBRXJCLENBQUE7SUFDRDs7T0FFRztJQUNILHFCQUE0QixLQUFhLEVBQUUsTUFBYyxFQUFFLE9BQVk7UUFDbkUsSUFBSSxNQUFNLEdBQUcsT0FBTyxDQUFDLENBQUMsTUFBTTtRQUM1QixJQUFJLE1BQU0sR0FBRyxNQUFNLENBQUMsQ0FBQyxJQUFJO1FBQ3pCLElBQUksSUFBSSxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxFQUFFLEdBQUcsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUMsU0FBUztRQUVqRCxJQUFJLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsTUFBTSxDQUFDLENBQUMsWUFBWTtRQUN4RCxJQUFJLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsTUFBTSxDQUFDLENBQUMsWUFBWTtRQUN4RCxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUM7SUFDMUIsQ0FBQztJQVJlLGlCQUFXLGNBUTFCLENBQUE7SUFDRDs7T0FFRztJQUNILHFCQUE0QixHQUFXO1FBQ25DLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLFFBQVEsRUFBRTtZQUMzQixPQUFPLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUM7WUFDaEMsT0FBTyxHQUFHLENBQUM7U0FDZDtRQUNELElBQUksT0FBZSxDQUFDO1FBRXBCLElBQUksR0FBRyxHQUFHLElBQUksRUFBRTtZQUNaLE9BQU8sR0FBRyxFQUFFLEdBQUcsR0FBRyxDQUFDO1NBQ3RCO2FBQU0sSUFBSSxHQUFHLEdBQUcsT0FBTyxFQUFFO1lBQ3RCLE9BQU8sR0FBRyxFQUFFLEdBQUcsQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQztTQUNoRDthQUFNLElBQUksR0FBRyxHQUFHLElBQUksRUFBRTtZQUNuQixPQUFPLEdBQUcsRUFBRSxHQUFHLENBQUMsR0FBRyxHQUFHLE9BQU8sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUM7U0FDbkQ7YUFBTTtZQUNILE9BQU8sR0FBRyxFQUFFLEdBQUcsR0FBRyxDQUFDO1NBQ3RCO1FBQ0QsT0FBTyxPQUFPLENBQUM7SUFDbkIsQ0FBQztJQWpCZSxpQkFBVyxjQWlCMUIsQ0FBQTtBQUVMLENBQUMsRUEvS2EsS0FBSyxHQUFMLGFBQUssS0FBTCxhQUFLLFFBK0tsQjtBQUNELGtCQUFlLEtBQUssQ0FBQyIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcclxuICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XHJcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcclxuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xyXG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxyXG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcclxuICAgIH07XHJcbn0pKCk7XHJcbihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCIvKipUaGlzIGNsYXNzIGlzIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIGJ5IExheWFBaXJJREUsIHBsZWFzZSBkbyBub3QgbWFrZSBhbnkgbW9kaWZpY2F0aW9ucy4gKi9cclxuaW1wb3J0IE1haW5TY2VuZUNvbnRyb2wgZnJvbSBcIi4vc2NyaXB0L01haW5TY2VuZUNvbnRyb2xcIlxuaW1wb3J0IFJvbGUgZnJvbSBcIi4vc2NyaXB0L1JvbGVcIlxuaW1wb3J0IE9wZXJhdGlvbkNvbnRyb2wgZnJvbSBcIi4vc2NyaXB0L09wZXJhdGlvbkNvbnRyb2xcIlxuaW1wb3J0IFN1c3BlbmQgZnJvbSBcIi4vc2NyaXB0L1N1c3BlbmRcIlxuaW1wb3J0IENhbmR5IGZyb20gXCIuL3NjcmlwdC9DYW5keVwiXG5pbXBvcnQgRW5lbXkgZnJvbSBcIi4vc2NyaXB0L0VuZW15XCJcbmltcG9ydCBFbmVteUJ1bGxldCBmcm9tIFwiLi9zY3JpcHQvRW5lbXlCdWxsZXRcIlxuaW1wb3J0IEhpbnRXb3JkIGZyb20gXCIuL3NjcmlwdC9IaW50V29yZFwiXG5pbXBvcnQgUmV3YXJkV29yZHMgZnJvbSBcIi4vc2NyaXB0L1Jld2FyZFdvcmRzXCJcbmltcG9ydCBSb2xlQnVsbGV0IGZyb20gXCIuL3NjcmlwdC9Sb2xlQnVsbGV0XCJcclxuLypcclxuKiDmuLjmiI/liJ3lp4vljJbphY3nva47XHJcbiovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVDb25maWd7XHJcbiAgICBzdGF0aWMgd2lkdGg6bnVtYmVyPTc1MDtcclxuICAgIHN0YXRpYyBoZWlnaHQ6bnVtYmVyPTEzMzQ7XHJcbiAgICBzdGF0aWMgc2NhbGVNb2RlOnN0cmluZz1cImZpeGVkd2lkdGhcIjtcclxuICAgIHN0YXRpYyBzY3JlZW5Nb2RlOnN0cmluZz1cInZlcnRpY2FsXCI7XHJcbiAgICBzdGF0aWMgYWxpZ25WOnN0cmluZz1cInRvcFwiO1xyXG4gICAgc3RhdGljIGFsaWduSDpzdHJpbmc9XCJjZW50ZXJcIjtcclxuICAgIHN0YXRpYyBzdGFydFNjZW5lOmFueT1cInNjZW5lL01haW5TY2VuZS5zY2VuZVwiO1xyXG4gICAgc3RhdGljIHNjZW5lUm9vdDpzdHJpbmc9XCJcIjtcclxuICAgIHN0YXRpYyBkZWJ1Zzpib29sZWFuPWZhbHNlO1xyXG4gICAgc3RhdGljIHN0YXQ6Ym9vbGVhbj10cnVlO1xyXG4gICAgc3RhdGljIHBoeXNpY3NEZWJ1Zzpib29sZWFuPXRydWU7XHJcbiAgICBzdGF0aWMgZXhwb3J0U2NlbmVUb0pzb246Ym9vbGVhbj10cnVlO1xyXG4gICAgY29uc3RydWN0b3IoKXt9XHJcbiAgICBzdGF0aWMgaW5pdCgpe1xyXG4gICAgICAgIHZhciByZWc6IEZ1bmN0aW9uID0gTGF5YS5DbGFzc1V0aWxzLnJlZ0NsYXNzO1xyXG4gICAgICAgIHJlZyhcInNjcmlwdC9NYWluU2NlbmVDb250cm9sLnRzXCIsTWFpblNjZW5lQ29udHJvbCk7XG4gICAgICAgIHJlZyhcInNjcmlwdC9Sb2xlLnRzXCIsUm9sZSk7XG4gICAgICAgIHJlZyhcInNjcmlwdC9PcGVyYXRpb25Db250cm9sLnRzXCIsT3BlcmF0aW9uQ29udHJvbCk7XG4gICAgICAgIHJlZyhcInNjcmlwdC9TdXNwZW5kLnRzXCIsU3VzcGVuZCk7XG4gICAgICAgIHJlZyhcInNjcmlwdC9DYW5keS50c1wiLENhbmR5KTtcbiAgICAgICAgcmVnKFwic2NyaXB0L0VuZW15LnRzXCIsRW5lbXkpO1xuICAgICAgICByZWcoXCJzY3JpcHQvRW5lbXlCdWxsZXQudHNcIixFbmVteUJ1bGxldCk7XG4gICAgICAgIHJlZyhcInNjcmlwdC9IaW50V29yZC50c1wiLEhpbnRXb3JkKTtcbiAgICAgICAgcmVnKFwic2NyaXB0L1Jld2FyZFdvcmRzLnRzXCIsUmV3YXJkV29yZHMpO1xuICAgICAgICByZWcoXCJzY3JpcHQvUm9sZUJ1bGxldC50c1wiLFJvbGVCdWxsZXQpO1xyXG4gICAgfVxyXG59XHJcbkdhbWVDb25maWcuaW5pdCgpOyIsImltcG9ydCBHYW1lQ29uZmlnIGZyb20gXCIuL0dhbWVDb25maWdcIjtcclxuY2xhc3MgTWFpbiB7XHJcblx0Y29uc3RydWN0b3IoKSB7XHJcblx0XHQvL+agueaNrklEReiuvue9ruWIneWni+WMluW8leaTjlx0XHRcclxuXHRcdGlmICh3aW5kb3dbXCJMYXlhM0RcIl0pIExheWEzRC5pbml0KEdhbWVDb25maWcud2lkdGgsIEdhbWVDb25maWcuaGVpZ2h0KTtcclxuXHRcdGVsc2UgTGF5YS5pbml0KEdhbWVDb25maWcud2lkdGgsIEdhbWVDb25maWcuaGVpZ2h0LCBMYXlhW1wiV2ViR0xcIl0pO1xyXG5cdFx0TGF5YVtcIlBoeXNpY3NcIl0gJiYgTGF5YVtcIlBoeXNpY3NcIl0uZW5hYmxlKCk7XHJcblx0XHRMYXlhW1wiRGVidWdQYW5lbFwiXSAmJiBMYXlhW1wiRGVidWdQYW5lbFwiXS5lbmFibGUoKTtcclxuXHRcdExheWEuc3RhZ2Uuc2NhbGVNb2RlID0gR2FtZUNvbmZpZy5zY2FsZU1vZGU7XHJcblx0XHRMYXlhLnN0YWdlLnNjcmVlbk1vZGUgPSBHYW1lQ29uZmlnLnNjcmVlbk1vZGU7XHJcblx0XHQvL+WFvOWuueW+ruS/oeS4jeaUr+aMgeWKoOi9vXNjZW5l5ZCO57yA5Zy65pmvXHJcblx0XHRMYXlhLlVSTC5leHBvcnRTY2VuZVRvSnNvbiA9IEdhbWVDb25maWcuZXhwb3J0U2NlbmVUb0pzb247XHJcblxyXG5cdFx0Ly/miZPlvIDosIPor5XpnaLmnb/vvIjpgJrov4dJREXorr7nva7osIPor5XmqKHlvI/vvIzmiJbogIV1cmzlnLDlnYDlop7liqBkZWJ1Zz10cnVl5Y+C5pWw77yM5Z2H5Y+v5omT5byA6LCD6K+V6Z2i5p2/77yJXHJcblx0XHRpZiAoR2FtZUNvbmZpZy5kZWJ1ZyB8fCBMYXlhLlV0aWxzLmdldFF1ZXJ5U3RyaW5nKFwiZGVidWdcIikgPT0gXCJ0cnVlXCIpIExheWEuZW5hYmxlRGVidWdQYW5lbCgpO1xyXG5cdFx0aWYgKEdhbWVDb25maWcucGh5c2ljc0RlYnVnICYmIExheWFbXCJQaHlzaWNzRGVidWdEcmF3XCJdKSBMYXlhW1wiUGh5c2ljc0RlYnVnRHJhd1wiXS5lbmFibGUoKTtcclxuXHRcdGlmIChHYW1lQ29uZmlnLnN0YXQpIExheWEuU3RhdC5zaG93KCk7XHJcblx0XHRMYXlhLmFsZXJ0R2xvYmFsRXJyb3IgPSB0cnVlO1xyXG5cclxuXHRcdC8v5r+A5rS76LWE5rqQ54mI5pys5o6n5Yi277yMdmVyc2lvbi5qc29u55SxSURF5Y+R5biD5Yqf6IO96Ieq5Yqo55Sf5oiQ77yM5aaC5p6c5rKh5pyJ5Lmf5LiN5b2x5ZON5ZCO57ut5rWB56iLXHJcblx0XHRMYXlhLlJlc291cmNlVmVyc2lvbi5lbmFibGUoXCJ2ZXJzaW9uLmpzb25cIiwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLm9uVmVyc2lvbkxvYWRlZCksIExheWEuUmVzb3VyY2VWZXJzaW9uLkZJTEVOQU1FX1ZFUlNJT04pO1xyXG5cdH1cclxuXHJcblx0b25WZXJzaW9uTG9hZGVkKCk6IHZvaWQge1xyXG5cdFx0Ly/mv4DmtLvlpKflsI/lm77mmKDlsITvvIzliqDovb3lsI/lm77nmoTml7blgJnvvIzlpoLmnpzlj5HnjrDlsI/lm77lnKjlpKflm77lkIjpm4bph4zpnaLvvIzliJnkvJjlhYjliqDovb3lpKflm77lkIjpm4bvvIzogIzkuI3mmK/lsI/lm75cclxuXHRcdExheWEuQXRsYXNJbmZvTWFuYWdlci5lbmFibGUoXCJmaWxlY29uZmlnLmpzb25cIiwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLm9uQ29uZmlnTG9hZGVkKSk7XHJcblx0fVxyXG5cclxuXHRvbkNvbmZpZ0xvYWRlZCgpOiB2b2lkIHtcclxuXHRcdC8v5Yqg6L29SURF5oyH5a6a55qE5Zy65pmvXHJcblx0XHRHYW1lQ29uZmlnLnN0YXJ0U2NlbmUgJiYgTGF5YS5TY2VuZS5vcGVuKEdhbWVDb25maWcuc3RhcnRTY2VuZSk7XHJcblx0fVxyXG59XHJcbi8v5r+A5rS75ZCv5Yqo57G7XHJcbm5ldyBNYWluKCk7XHJcbiIsImltcG9ydCBNYWluU2NlbmVDb250cm9sIGZyb20gXCIuL01haW5TY2VuZUNvbnRyb2xcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FuZHkgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XHJcbiAgICAvKiroh6rlt7EqL1xyXG4gICAgcHJpdmF0ZSBzZWxmOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuaJgOWxnuWcuuaZryovXHJcbiAgICBwcml2YXRlIHNlbGZTY2VuZTogTGF5YS5TY2VuZTtcclxuICAgIC8qKuWcuuaZr+iEmuacrOe7hOS7tiovXHJcbiAgICBwcml2YXRlIG1haW5TY2VuZUNvbnRyb2w7XHJcbiAgICAvKirns5bmnpzov5DooYznmoTpgJ/luqYqL1xyXG4gICAgcHJpdmF0ZSBzZWxmU3BlZWQ6IG51bWJlcjtcclxuICAgIC8qKuezluaenOenu+WKqOWvueixoSovXHJcbiAgICBwcml2YXRlIGNhbmR5VGFnUm9sZTogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirkuLvop5LnmoTniLboioLngrkqL1xyXG4gICAgcHJpdmF0ZSByb2xlUGFyZW50OiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuW+l+WIhuaYvuekuiovXHJcbiAgICBwcml2YXRlIHNjb3JlTGFiZWw6IExheWEuTGFiZWw7XHJcbiAgICAvKirml7bpl7Tnur8qL1xyXG4gICAgcHJpdmF0ZSB0aW1lckNvbnRyb2w6IG51bWJlcjtcclxuICAgIC8qKuagh+iusOS4gOS4i+i/meaYr+esrOWHoOS4quezluaenCovXHJcbiAgICBwcml2YXRlIHRhYjogbnVtYmVyO1xyXG4gICAgLyoq5q+P5Liq57OW5p6c5LmL6Ze055qE6Ze06LedKi9cclxuICAgIHByaXZhdGUgc3BhY2VZOiBudW1iZXI7XHJcblxyXG4gICAgLyoq5Yid5aeL5YyW55qEMTDkuKrns5bmnpznmoTkvY3nva7orrDlvZUqL1xyXG4gICAgcHJpdmF0ZSBwb3NZQXJyOiBBcnJheTxudW1iZXI+O1xyXG4gICAgLyoq5bGe5oCn6aOY5a2X5o+Q56S6Ki9cclxuICAgIHByaXZhdGUgaGludFdvcmQ6IExheWEuUHJlZmFiO1xyXG5cclxuICAgIC8qKuaOp+WItui/meS4quezluaenOaYr+WQpuWPmOaIkOaVjOS6uiovXHJcbiAgICBwcml2YXRlIGJlY29tZUVuZW15OiBib29sZWFuO1xyXG4gICAgLyoq5piv5ZCm5ZCR5LiL56e75Yqo5LiA5qC8Ki9cclxuICAgIHByaXZhdGUgbW92ZUFTdGVwOiBib29sZWFuO1xyXG5cclxuICAgIC8qKue7hOaVsO+8jOS7luaYr+WxnuS6juWTquS4gOe7hOeahCovXHJcbiAgICBwcml2YXRlIGdyb3VwOiBudW1iZXI7XHJcbiAgICAvKirmmK/lkKblt7Lnu4/ooqvngrnlh7vkuoYqL1xyXG4gICAgcHJpdmF0ZSBzZWxlY3RlZDogYm9vbGVhbjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHsgc3VwZXIoKTsgfVxyXG4gICAgb25FbmFibGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5pbml0UHJvcGVydHkoKTtcclxuICAgICAgICB0aGlzLmxvY2F0aW9uSW5pdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWIneWni+WMliovXHJcbiAgICBpbml0UHJvcGVydHkoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZWxmID0gdGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICB0aGlzLnNlbGZTY2VuZSA9IHRoaXMuc2VsZi5zY2VuZSBhcyBMYXlhLlNjZW5lO1xyXG4gICAgICAgIHRoaXMuY2FuZHlUYWdSb2xlID0gbnVsbDtcclxuICAgICAgICB0aGlzLm1haW5TY2VuZUNvbnRyb2wgPSB0aGlzLnNlbGZTY2VuZS5nZXRDb21wb25lbnQoTWFpblNjZW5lQ29udHJvbCk7XHJcbiAgICAgICAgdGhpcy5yb2xlUGFyZW50ID0gdGhpcy5tYWluU2NlbmVDb250cm9sLnJvbGVQYXJlbnQ7XHJcbiAgICAgICAgdGhpcy5zY29yZUxhYmVsID0gdGhpcy5tYWluU2NlbmVDb250cm9sLnNjb3JlTGFiZWw7XHJcbiAgICAgICAgdGhpcy5zZWxmU3BlZWQgPSAxMDtcclxuXHJcbiAgICAgICAgdGhpcy50YWIgPSB0aGlzLm1haW5TY2VuZUNvbnRyb2wuY2FuZHlDb3VudDtcclxuICAgICAgICB0aGlzLnRpbWVyQ29udHJvbCA9IDA7XHJcblxyXG4gICAgICAgIHRoaXMuc3BhY2VZID0gNTtcclxuXHJcbiAgICAgICAgdGhpcy5oaW50V29yZCA9IHRoaXMubWFpblNjZW5lQ29udHJvbC5oaW50V29yZDtcclxuXHJcbiAgICAgICAgdGhpcy5iZWNvbWVFbmVteSA9IGZhbHNlO1xyXG5cclxuICAgICAgICB0aGlzLm1vdmVBU3RlcDtcclxuXHJcbiAgICAgICAgdGhpcy5zZWxlY3RlZCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuZ3JvdXAgPSBudWxsO1xyXG5cclxuICAgICAgICB0aGlzLnNlbGZbJ0NhbmR5J10gPSB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWIneWni+S9jee9ruWIneWni+WMliovXHJcbiAgICBsb2NhdGlvbkluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5wb3NZQXJyID0gW107XHJcbiAgICAgICAgdGhpcy5tb3ZlQVN0ZXAgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLnNlbGYueSA9IC0gdGhpcy50YWIgKiAodGhpcy5zZWxmLmhlaWdodCArIHRoaXMuc3BhY2VZKTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEwOyBpKyspIHtcclxuICAgICAgICAgICAgbGV0IHkgPSAtKHRoaXMuc2VsZi5oZWlnaHQgKyB0aGlzLnNwYWNlWSkgKiBpO1xyXG4gICAgICAgICAgICB0aGlzLnBvc1lBcnIucHVzaCh5KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5b2T56ys5LiA5Liq57OW5p6c6KKr5ZCD5o6J5ZCO55qE56e75Yqo5Ye95pWwXHJcbiAgICAgKiDnp7vliqjpgJ/luqbopoHpnZ7luLjlv6tcclxuICAgICovXHJcbiAgICBtb3ZlUnVsZXMoKTogdm9pZCB7XHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLnNlbGYsIHsgeTogdGhpcy5zZWxmLnkgKyB0aGlzLnNlbGYuaGVpZ2h0ICsgdGhpcy5zcGFjZVkgfSwgMTAsIG51bGwsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIH0sIFtdKSwgMCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq6aOe5Yiw5Li76KeS6Lqr5LiK5aKe5Yqg5Li76KeS5bGe5oCnXHJcbiAgICAgKiDlubbkuJTmkq3mlL7lsZ7mgKflop7liqDliqjnlLtcclxuICAgICovXHJcbiAgICBmbHlUb1JvbGUoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuY2FuZHlUYWdSb2xlICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIC8vIHgseeWIhuWIq+ebuOWHj+aYr+S4pOeCuei/nue6v+WQkemHj1xyXG4gICAgICAgICAgICAvLyDlkJHph4/orqHnrpflubbkuJTlvZLkuIDljJbvvIzlkJHph4/plb/luqbkuLox44CCXHJcbiAgICAgICAgICAgIGxldCBwb2ludCA9IG5ldyBMYXlhLlBvaW50KHRoaXMuY2FuZHlUYWdSb2xlLnggLSB0aGlzLnNlbGYueCwgdGhpcy5jYW5keVRhZ1JvbGUueSAtIHRoaXMuc2VsZi55KTtcclxuICAgICAgICAgICAgcG9pbnQubm9ybWFsaXplKCk7XHJcbiAgICAgICAgICAgIC8v5ZCR6YeP55u45Yqg56e75YqoXHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi54ICs9IHBvaW50LnggKiB0aGlzLnNlbGZTcGVlZDtcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnkgKz0gcG9pbnQueSAqIHRoaXMuc2VsZlNwZWVkO1xyXG4gICAgICAgICAgICAvLyDliLDovr7lr7nosaHkvY3nva7lkI7lvIDlkK/mlLvlh7vlvIDlhbPov5vooYzmlLvlh7vvvIzmlLvlh7vpgJ/luqbkvp3nhafml7bpl7Tpl7TpmpTogIzlrppcclxuICAgICAgICAgICAgLy8g5q2k5pe256e75Yqo6YCf5bqm5Li66Zu2XHJcbiAgICAgICAgICAgIGxldCBkaWZmZXJlbmNlWCA9IE1hdGguYWJzKHRoaXMuc2VsZi54IC0gdGhpcy5jYW5keVRhZ1JvbGUueCk7XHJcbiAgICAgICAgICAgIGxldCBkaWZmZXJlbmNlWSA9IE1hdGguYWJzKHRoaXMuc2VsZi55IC0gdGhpcy5jYW5keVRhZ1JvbGUueSk7XHJcbiAgICAgICAgICAgIGlmIChkaWZmZXJlbmNlWCA8IDUwICYmIGRpZmZlcmVuY2VZIDwgNTApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZi5yZW1vdmVTZWxmKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmhpbnRXb3JkTW92ZSgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yb2xlQWRkUHJvcGVydHkoKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2FuZHlUYWdSb2xlID0gbnVsbDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKirlsZ7mgKflop7liqDmj5DnpLrliqjnlLsqL1xyXG4gICAgaGludFdvcmRNb3ZlKCk6IHZvaWQge1xyXG4gICAgICAgIGxldCBoaW50V29yZCA9IExheWEuUG9vbC5nZXRJdGVtQnlDcmVhdGVGdW4oJ2NhbmR5JywgdGhpcy5oaW50V29yZC5jcmVhdGUsIHRoaXMuaGludFdvcmQpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIGxldCByb2xlXzAxID0gdGhpcy5tYWluU2NlbmVDb250cm9sLnJvbGVfMDEgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgbGV0IHJvbGVfMDIgPSB0aGlzLm1haW5TY2VuZUNvbnRyb2wucm9sZV8wMiBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICBpZiAodGhpcy5jYW5keVRhZ1JvbGUucGFyZW50ID09PSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi5yZW1vdmVTZWxmKCk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5jYW5keVRhZ1JvbGUuYWRkQ2hpbGQoaGludFdvcmQpO1xyXG4gICAgICAgIGhpbnRXb3JkLnBvcygwLCAtMTUwKTtcclxuICAgICAgICBsZXQgcHJvUGVydHlUeXBlOiBzdHJpbmc7XHJcbiAgICAgICAgbGV0IG51bWJlclZhbHVlOiBudW1iZXI7XHJcbiAgICAgICAgdGhpcy5zZWxmLm5hbWUgPSB0aGlzLnNlbGYubmFtZS5zdWJzdHJpbmcoMCwgMTEpO1xyXG4gICAgICAgIHN3aXRjaCAodGhpcy5zZWxmLm5hbWUpIHtcclxuICAgICAgICAgICAgY2FzZSAneWVsbG93Q2FuZHknOlxyXG4gICAgICAgICAgICAgICAgcHJvUGVydHlUeXBlID0gJ+aUu+WHu+mHjCc7XHJcbiAgICAgICAgICAgICAgICBudW1iZXJWYWx1ZSA9IDEwO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ3JlZENhbmR5X19fJzpcclxuICAgICAgICAgICAgICAgIHByb1BlcnR5VHlwZSA9ICfnlJ/lkb0nO1xyXG4gICAgICAgICAgICAgICAgbnVtYmVyVmFsdWUgPSA1O1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ2JsdWVDYW5keV9fJzpcclxuICAgICAgICAgICAgICAgIHByb1BlcnR5VHlwZSA9ICflhazpuKHpgJ/luqYnO1xyXG4gICAgICAgICAgICAgICAgbnVtYmVyVmFsdWUgPSAxMDtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdncmVlbkNhbmR5Xyc6XHJcbiAgICAgICAgICAgICAgICBwcm9QZXJ0eVR5cGUgPSAn6Ziy5b6h5YqbJztcclxuICAgICAgICAgICAgICAgIG51bWJlclZhbHVlID0gNTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgIH1cclxuICAgICAgICBoaW50V29yZFsnSGludFdvcmQnXS5pbml0UHJvcGVydHkocHJvUGVydHlUeXBlLCBudW1iZXJWYWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5qC55o2u57OW5p6c55qE56eN57G75aKe5Yqg5Li76KeS5bGe5oCn6KeE5YiZXHJcbiAgICAgKiDlubbkuJTmkq3mlL7lop7liqDlsZ7mgKfmloflrZfmj5DnpLrliqjnlLtcclxuICAgICovXHJcbiAgICByb2xlQWRkUHJvcGVydHkoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZWxmLm5hbWUgPSB0aGlzLnNlbGYubmFtZS5zdWJzdHJpbmcoMCwgMTEpO1xyXG4gICAgICAgIGxldCByb2xlXzAxID0gdGhpcy5tYWluU2NlbmVDb250cm9sLnJvbGVfMDE7XHJcbiAgICAgICAgbGV0IHJvbGVfMDIgPSB0aGlzLm1haW5TY2VuZUNvbnRyb2wucm9sZV8wMjtcclxuICAgICAgICBzd2l0Y2ggKHRoaXMuc2VsZi5uYW1lKSB7XHJcbiAgICAgICAgICAgIGNhc2UgJ3llbGxvd0NhbmR5JzpcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNhbmR5VGFnUm9sZSA9PT0gcm9sZV8wMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJvbGVfMDFbJ1JvbGUnXS5yb2xlX3Byb3BlcnR5LmF0dGFja1ZhbHVlICs9IDEwO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByb2xlXzAyWydSb2xlJ10ucm9sZV9wcm9wZXJ0eS5hdHRhY2tWYWx1ZSArPSAxMDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdyZWRDYW5keV9fXyc6XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5jYW5keVRhZ1JvbGUgPT09IHJvbGVfMDEpIHtcclxuICAgICAgICAgICAgICAgICAgICByb2xlXzAxWydSb2xlJ10ucm9sZV9wcm9wZXJ0eS5ibG9vZCArPSA1O1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByb2xlXzAyWydSb2xlJ10ucm9sZV9wcm9wZXJ0eS5ibG9vZCArPSA1O1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdibHVlQ2FuZHlfXyc6XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5jYW5keVRhZ1JvbGUgPT09IHJvbGVfMDEpIHtcclxuICAgICAgICAgICAgICAgICAgICByb2xlXzAxWydSb2xlJ10ucm9sZV9wcm9wZXJ0eS5hdHRhY2tTcGVlZCArPSAxMDtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcm9sZV8wMlsnUm9sZSddLnJvbGVfcHJvcGVydHkuYXR0YWNrU3BlZWQgKz0gMTA7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAnZ3JlZW5DYW5keV8nOlxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuY2FuZHlUYWdSb2xlID09PSByb2xlXzAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcm9sZV8wMVsnUm9sZSddLnJvbGVfcHJvcGVydHkuZGVmZW5zZSArPSA1O1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByb2xlXzAyWydSb2xlJ10ucm9sZV9wcm9wZXJ0eS5kZWZlbnNlICs9IDU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBvblVwZGF0ZSgpOiB2b2lkIHtcclxuICAgICAgICAvLyDnrKzkuIDms6IxMOS4quezluaenOWHuuWOguaOp+WItu+8jOatpOWIu+S4jeWPr+eCueWHu1xyXG4gICAgICAgIHRoaXMudGltZXJDb250cm9sICs9IDAuMTtcclxuICAgICAgICBpZiAodGhpcy50aW1lckNvbnRyb2wgPCAxOCAmJiB0aGlzLnNlbGYucGFyZW50ID09PSB0aGlzLm1haW5TY2VuZUNvbnRyb2wuY2FuZHlQYXJlbnQpIHtcclxuICAgICAgICAgICAgLy8gdGhpcy5zZWxmLnkgKz0gMztcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g6aOe5Yiw5Li76KeS6Lqr5LiKXHJcbiAgICAgICAgdGhpcy5mbHlUb1JvbGUoKTtcclxuICAgICAgICAvLyDkuIvnp7vkuIDmoLxcclxuICAgICAgICBpZiAodGhpcy5tb3ZlQVN0ZXApIHtcclxuICAgICAgICAgICAgdGhpcy5tb3ZlUnVsZXMoKTtcclxuICAgICAgICAgICAgdGhpcy5tb3ZlQVN0ZXAgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb25EaXNhYmxlKCk6IHZvaWQge1xyXG4gICAgICAgIC8vIOa4heeQhuWKqOeUu1xyXG4gICAgICAgIExheWEuVHdlZW4uY2xlYXJBbGwodGhpcyk7XHJcbiAgICAgICAgaWYgKHRoaXMuc2VsZi5uYW1lID09PSAneWVsbG93Q2FuZHknKSB7XHJcbiAgICAgICAgICAgIExheWEuUG9vbC5yZWNvdmVyKCd5ZWxsb3dDYW5keScsIHRoaXMuc2VsZik7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnNlbGYubmFtZSA9PT0gJ3JlZENhbmR5X19fJykge1xyXG4gICAgICAgICAgICBMYXlhLlBvb2wucmVjb3ZlcigncmVkQ2FuZHlfX18nLCB0aGlzLnNlbGYpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5zZWxmLm5hbWUgPT09ICdibHVlQ2FuZHlfXycpIHtcclxuICAgICAgICAgICAgTGF5YS5Qb29sLnJlY292ZXIoJ2JsdWVDYW5keV9fJywgdGhpcy5zZWxmKTtcclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuc2VsZi5uYW1lID09PSAnZ3JlZW5DYW5keV8nKSB7XHJcbiAgICAgICAgICAgIExheWEuUG9vbC5yZWNvdmVyKCdncmVlbkNhbmR5XycsIHRoaXMuc2VsZik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiaW1wb3J0IE1haW5TY2VuZUNvbnRyb2wgZnJvbSBcIi4vTWFpblNjZW5lQ29udHJvbFwiO1xyXG5pbXBvcnQgUm9sZSBmcm9tIFwiLi9Sb2xlXCI7XHJcbmltcG9ydCB7IHRvb2xzIH0gZnJvbSBcIi4vVG9vbFwiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFbmVteSBleHRlbmRzIExheWEuU2NyaXB0IHtcclxuICAgIC8qKuiHquW3sSovXHJcbiAgICBwcml2YXRlIHNlbGY6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq6Ieq5bex55qE6KGA6YePKi9cclxuICAgIHByaXZhdGUgc2VsZkhlYWx0aDogTGF5YS5Qcm9ncmVzc0JhcjtcclxuICAgIC8qKuiHquW3seenu+WKqOmAn+W6piovXHJcbiAgICBwcml2YXRlIHNlbGZTcGVlZDogbnVtYmVyO1xyXG4gICAgLyoq55qu6IKkKi9cclxuICAgIHByaXZhdGUgcGljOiBMYXlhLlNwcml0ZTtcclxuXHJcbiAgICAvKirmiYDlsZ7lnLrmma8qL1xyXG4gICAgcHJpdmF0ZSBzZWxmU2NlbmU6IExheWEuU2NlbmU7XHJcbiAgICAvKirlnLrmma/ohJrmnKznu4Tku7YqL1xyXG4gICAgcHJpdmF0ZSBtYWluU2NlbmVDb250cm9sO1xyXG4gICAgLyoq5Li76KeS55qE54i26IqC54K5Ki9cclxuICAgIHByaXZhdGUgcm9sZVBhcmVudDogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirmgKrnianmlLvlh7vlr7nosaEs5Lmf5piv5LiK5Liq5ZCD57OW5p6c5a+56LGhLOS4gOasoeaAp++8jOi1i+S4gOasoeWAvOWPquiDveeUqOS4gOasoSovXHJcbiAgICBwcml2YXRlIHNsZWZUYWdSb2xlOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuaUu+WHu+WvueixoeihgOmHjyovXHJcbiAgICBwcml2YXRlIHRhZ0hlYWx0aDogTGF5YS5Qcm9ncmVzc0JhcjtcclxuICAgIC8qKuWvueivneahhiovXHJcbiAgICBwcml2YXRlIHNwZWFrQm94OiBMYXlhLlByZWZhYjtcclxuXHJcbiAgICAvKirmlLvlh7vml7bpl7Tpl7TpmpQqL1xyXG4gICAgcHJpdmF0ZSBhdHRhY2tUbnRlcnZhbDogbnVtYmVyO1xyXG4gICAgLyoq5b2T5YmN5pe26Ze077yM55So5LqO5a+55q+U5pe26Ze06Ze06ZqUKi9cclxuICAgIHByaXZhdGUgcmVjb3JkVGltZTogbnVtYmVyO1xyXG5cclxuICAgIC8qKuWIhuaVsCovXHJcbiAgICBwcml2YXRlIHNjb3JlTGFiZWw6IExheWEuTGFiZWw7XHJcbiAgICAvKirlvZPliY3lsZ7mgKcqL1xyXG4gICAgcHJpdmF0ZSBlbmVteVByb3BlcnR5OiBhbnk7XHJcbiAgICAvKirooYDph4/lgLzmmL7npLrnmoRsYWJlbCovXHJcbiAgICBwcml2YXRlIGJsb29kTGFiZWw6IGFueTtcclxuICAgIC8qKuWxnuaAp+WxleekuuahhiovXHJcbiAgICBwcml2YXRlIHByb3BlcnR5U2hvdzogTGF5YS5JbWFnZTtcclxuICAgIC8qKuiiq+WHu+mAgOaViOaenOiuoeaXtiovXHJcbiAgICBwcml2YXRlIHJlcGVsVGltZXI6IG51bWJlcjtcclxuXHJcbiAgICAvKirlsZ7mgKfpo5jlrZfmj5DnpLoqL1xyXG4gICAgcHJpdmF0ZSBoaW50V29yZDogTGF5YS5QcmVmYWI7XHJcbiAgICAvKirmiYDlsZ7mlYzkurrnmoTnsbvlnovvvIzmmK/ov5znqIvov5jmmK/ov5HmiJgqL1xyXG4gICAgcHJpdmF0ZSBlbmVteVR5cGU6IHN0cmluZztcclxuICAgIC8qKuWtkOW8uSovXHJcbiAgICBwcml2YXRlIGVuZW15QnVsbGV0OiBMYXlhLlByZWZhYjtcclxuICAgIC8qKuWHuuadpeS5i+WQjuWwseehruWumuS6huWcqOS4u+inkueahOS7gOS5iOS9jee9ruWvueS4u+inkuWPkeWKqOaUu+WHuyovXHJcbiAgICBwcml2YXRlIGF0dGFja1g6IG51bWJlcjtcclxuICAgIHByaXZhdGUgYXR0YWNrWTogbnVtYmVyO1xyXG5cclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHsgc3VwZXIoKTsgfVxyXG5cclxuICAgIG9uRW5hYmxlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuaW5pdFByb3BlcnR5KCk7XHJcbiAgICAgICAgdGhpcy5lbmVteVByb3BlcnR5U2V0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Yid5aeL5YyWKi9cclxuICAgIGluaXRQcm9wZXJ0eSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNlbGYgPSB0aGlzLm93bmVyIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMuc2VsZlNjZW5lID0gdGhpcy5vd25lci5zY2VuZSBhcyBMYXlhLlNjZW5lO1xyXG4gICAgICAgIHRoaXMubWFpblNjZW5lQ29udHJvbCA9IHRoaXMuc2VsZlNjZW5lLmdldENvbXBvbmVudChNYWluU2NlbmVDb250cm9sKTsvL+WcuuaZr+iEmuacrOe7hOS7tlxyXG4gICAgICAgIHRoaXMucm9sZVBhcmVudCA9IHRoaXMubWFpblNjZW5lQ29udHJvbC5yb2xlUGFyZW50O1xyXG4gICAgICAgIHRoaXMuc2VsZkhlYWx0aCA9IHRoaXMuc2VsZi5nZXRDaGlsZEJ5TmFtZSgnaGVhbHRoJykgYXMgTGF5YS5Qcm9ncmVzc0JhcjtcclxuICAgICAgICB0aGlzLnNlbGZTcGVlZCA9IDQ7XHJcbiAgICAgICAgdGhpcy5wcm9wZXJ0eVNob3cgPSB0aGlzLnNlbGYuZ2V0Q2hpbGRCeU5hbWUoJ3Byb3BlcnR5U2hvdycpIGFzIExheWEuSW1hZ2U7XHJcblxyXG4gICAgICAgIHRoaXMuYXR0YWNrVG50ZXJ2YWwgPSAxMDA7XHJcbiAgICAgICAgdGhpcy5yZWNvcmRUaW1lID0gRGF0ZS5ub3coKTtcclxuXHJcbiAgICAgICAgdGhpcy5zcGVha0JveCA9IHRoaXMubWFpblNjZW5lQ29udHJvbC5zcGVha0JveDtcclxuICAgICAgICB0aGlzLnNjb3JlTGFiZWwgPSB0aGlzLm1haW5TY2VuZUNvbnRyb2wuc2NvcmVMYWJlbDtcclxuXHJcbiAgICAgICAgdGhpcy5yZXBlbFRpbWVyID0gMDtcclxuICAgICAgICB0aGlzLmhpbnRXb3JkID0gdGhpcy5tYWluU2NlbmVDb250cm9sLmhpbnRXb3JkIGFzIExheWEuUHJlZmFiO1xyXG4gICAgICAgIHRoaXMuZW5lbXlCdWxsZXQgPSB0aGlzLm1haW5TY2VuZUNvbnRyb2wuZW5lbXlCdWxsZXQgYXMgTGF5YS5QcmVmYWI7XHJcblxyXG4gICAgICAgIHRoaXMuc2VsZlsnRW5lbXknXSA9IHRoaXM7XHJcblxyXG5cclxuICAgIH1cclxuXHJcbiAgICAvKirov5HmiJjmlLvlh7vnmoTmlYzkurrmlLvlh7vkuLvop5LnmoTml7blgJnvvIzkvJrpmo/mnLrlnKjkuLvop5LojIPlm7TlhoXlgZzmraLnhLblkI7mlLvlh7tcclxuICAgICAqIOi/meagt+WBmueahOWlveWkhOaYr+aVjOS6uuS4jeS8mumHjeWPoCzlubbkuJTov5nkuKrlnZDmoIflnKjkuLvop5LnmoTkuIrmlrlcclxuICAgICAqIOW5tuS4lOi/meS4quWdkOagh+WcqOW8gOWni+eahOaXtuWAmeaJp+ihjOS4gOasoVxyXG4gICAgICog5pu05o2i5Li76KeS55qE5pe25YCZ5omn6KGM5LiA5qyhXHJcbiAgICAgKiAqL1xyXG4gICAgcmFuZG9tQXR0YWNrUG9pbnQoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IGRpZmZlcmVuY2U7XHJcbiAgICAgICAgbGV0IG51bWJlciA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDIpO1xyXG4gICAgICAgIGlmIChudW1iZXIgPT09IDEpIHtcclxuICAgICAgICAgICAgZGlmZmVyZW5jZSA9IC1NYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA1MCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZGlmZmVyZW5jZSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDUwKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5hdHRhY2tYID0gdGhpcy5zbGVmVGFnUm9sZS54ICsgZGlmZmVyZW5jZTtcclxuICAgICAgICB0aGlzLmF0dGFja1kgPSB0aGlzLnNsZWZUYWdSb2xlLnkgLSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA1MCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5oCq54mp562J57qn5YyF5ous55qE5LiA5Lqb5bGe5oCnKi9cclxuICAgIGVuZW15UHJvcGVydHlTZXQoKTogdm9pZCB7XHJcbiAgICAgICAgLy8g5bGe5oCn6LWL5YC8XHJcbiAgICAgICAgdGhpcy5lbmVteVByb3BlcnR5ID0ge1xyXG4gICAgICAgICAgICBsZXZlbDogJycsXHJcbiAgICAgICAgICAgIGJsb29kOiAnJyxcclxuICAgICAgICAgICAgbW92ZVNwZWVkOiAnJyxcclxuICAgICAgICAgICAgZGVmZW5zZTogJycsXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuZW5lbXlQcm9wZXJ0eS5ibG9vZCA9IHRoaXMubWFpblNjZW5lQ29udHJvbC5lbmVteVByb3BlcnR5LmJsb29kO1xyXG4gICAgICAgIHRoaXMuZW5lbXlQcm9wZXJ0eS5hdHRhY2tWYWx1ZSA9IHRoaXMubWFpblNjZW5lQ29udHJvbC5lbmVteVByb3BlcnR5LmF0dGFja1ZhbHVlO1xyXG4gICAgICAgIHRoaXMuZW5lbXlQcm9wZXJ0eS5hdHRhY2tTcGVlZCA9IHRoaXMubWFpblNjZW5lQ29udHJvbC5lbmVteVByb3BlcnR5LmF0dGFja1NwZWVkO1xyXG4gICAgICAgIHRoaXMuZW5lbXlQcm9wZXJ0eS5kZWZlbnNlID0gdGhpcy5tYWluU2NlbmVDb250cm9sLmVuZW15UHJvcGVydHkuZGVmZW5zZTtcclxuICAgICAgICB0aGlzLmVuZW15UHJvcGVydHkubW92ZVNwZWVkID0gdGhpcy5tYWluU2NlbmVDb250cm9sLmVuZW15UHJvcGVydHkubW92ZVNwZWVkO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWxnuaAp+WIt+aWsOaYvuekuuinhOWImSzooYDph4/mmL7npLrkuIDlrprmmK/mlbTmlbAxMCovXHJcbiAgICBlbmVteVByb3BlcnR5VXBkYXRlKCk6IHZvaWQge1xyXG4gICAgICAgIC8vIOihgOadoeS4iueahOihgOmHj+aYvuekulxyXG4gICAgICAgIHRoaXMuYmxvb2RMYWJlbCA9IHRoaXMuc2VsZkhlYWx0aC5nZXRDaGlsZEJ5TmFtZSgnYmxvb2RMYWJlbCcpIGFzIExheWEuTGFiZWw7XHJcbiAgICAgICAgbGV0IHN0ciA9IE1hdGgucm91bmQodGhpcy5lbmVteVByb3BlcnR5LmJsb29kICogdGhpcy5zZWxmSGVhbHRoLnZhbHVlKS50b1N0cmluZygpO1xyXG4gICAgICAgIGxldCBzdWJTdHJfMDEgPSBzdHIuc3Vic3RyaW5nKDAsIHN0ci5sZW5ndGggLSAxKTtcclxuICAgICAgICBsZXQgc3ViU3RyXzAyID0gc3ViU3RyXzAxICsgMDtcclxuICAgICAgICB0aGlzLmJsb29kTGFiZWwudGV4dCA9IHN1YlN0cl8wMjtcclxuXHJcbiAgICAgICAgLy8g5bGe5oCn5pi+56S65qGG5LiK6Z2i5pi+56S655qE5bGe5oCnXHJcbiAgICAgICAgLy8g6KGA6YePXHJcbiAgICAgICAgbGV0IGJsb29kID0gdGhpcy5wcm9wZXJ0eVNob3cuZ2V0Q2hpbGRCeU5hbWUoJ2Jsb29kJykgYXMgTGF5YS5MYWJlbDtcclxuICAgICAgICBibG9vZC50ZXh0ID0gXCLooYDph486IFwiICsgdGhpcy5lbmVteVByb3BlcnR5LmJsb29kO1xyXG4gICAgICAgIC8vIOaUu+WHu+WKm1xyXG4gICAgICAgIGxldCBhdHRhY2tWYWx1ZSA9IHRoaXMucHJvcGVydHlTaG93LmdldENoaWxkQnlOYW1lKCdhdHRhY2tWYWx1ZScpIGFzIExheWEuTGFiZWw7XHJcbiAgICAgICAgYXR0YWNrVmFsdWUudGV4dCA9IFwi5pS75Ye75YqbOiBcIiArIHRoaXMuZW5lbXlQcm9wZXJ0eS5hdHRhY2tWYWx1ZTtcclxuICAgICAgICAvLyDmlLvlh7vpgJ/luqZcclxuICAgICAgICBsZXQgYXR0YWNrU3BlZWQgPSB0aGlzLnByb3BlcnR5U2hvdy5nZXRDaGlsZEJ5TmFtZSgnYXR0YWNrU3BlZWQnKSBhcyBMYXlhLkxhYmVsO1xyXG4gICAgICAgIGF0dGFja1NwZWVkLnRleHQgPSBcIuaUu+WHu+mAn+W6pjogXCIgKyB0aGlzLmVuZW15UHJvcGVydHkuYXR0YWNrU3BlZWQ7XHJcbiAgICAgICAgLy8g6Ziy5b6h5YqbXHJcbiAgICAgICAgbGV0IGRlZmVuc2UgPSB0aGlzLnByb3BlcnR5U2hvdy5nZXRDaGlsZEJ5TmFtZSgnZGVmZW5zZScpIGFzIExheWEuTGFiZWw7XHJcbiAgICAgICAgZGVmZW5zZS50ZXh0ID0gXCLpmLLlvqHlips6IFwiICsgdGhpcy5lbmVteVByb3BlcnR5LmRlZmVuc2U7XHJcblxyXG4gICAgICAgIC8v5b2T5pWM5Lq65pWw6YeP6L6+5Yiw5LiA5a6a5pWw6YeP55qE5pe25YCZ77yM57uZ5pWM5Lq65aKe5Yqg5pS75Ye75Yqb5byA5YWzXHJcbiAgICAgICAgLy8g6ZyA6KaB5pyJ5o+Q56S6XHJcbiAgICAgICAgbGV0IHJvbGVEZWZlbnNlID0gdGhpcy5zbGVmVGFnUm9sZVsnUm9sZSddLnJvbGVfcHJvcGVydHkuZGVmZW5zZTtcclxuICAgICAgICBpZiAodGhpcy5tYWluU2NlbmVDb250cm9sLmVuZW15UGFyZW50Ll9jaGlsZHJlbi5sZW5ndGggPiAyMCAmJiB0aGlzLmVuZW15UHJvcGVydHkuYXR0YWNrVmFsdWUgPCByb2xlRGVmZW5zZSkge1xyXG4gICAgICAgICAgICB0aGlzLmVuZW15UHJvcGVydHkuYXR0YWNrVmFsdWUgPSByb2xlRGVmZW5zZSArIDU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvKiog6L+R5oiY5pS75Ye755qE5pWM5Lq656ys5LqM6Zi25q6156e75Yqo5Yiw5Li76KeS5L2N572u77yM5bm25LiU6L+b5YWl5Li76KeS5bCE56iL6IyD5Zu055qE56e75Yqo6KeE5YiZXHJcbiAgICAgKiDliqDlhaXooqvlrZDlvLnlh7vpgIDmlYjmnpxcclxuICAgICovXHJcbiAgICBlbmVteU1vdmUoKTogdm9pZCB7XHJcbiAgICAgICAgLy8geCx55YiG5Yir55u45YeP5piv5Lik54K56L+e57q/5ZCR6YePXHJcbiAgICAgICAgLy8g5ZCR6YeP6K6h566X5bm25LiU5b2S5LiA5YyW77yM5ZCR6YeP6ZW/5bqm5Li6MeOAglxyXG4gICAgICAgIGxldCBwb2ludCA9IG5ldyBMYXlhLlBvaW50KHRoaXMuYXR0YWNrWCAtIHRoaXMuc2VsZi54LCB0aGlzLmF0dGFja1kgLSB0aGlzLnNlbGYueSk7XHJcbiAgICAgICAgcG9pbnQubm9ybWFsaXplKCk7XHJcbiAgICAgICAgLy8g5Yik5pat5piv5ZCm5r+A5rS76KKr5Ye76YCA5pWI5p6cXHJcbiAgICAgICAgaWYgKHRoaXMuc2xlZlRhZ1JvbGUueCA+IExheWEuc3RhZ2Uud2lkdGggLyAyKSB7Ly/lj7PovrlcclxuICAgICAgICAgICAgLy8g5Y+z6L655Y+R55Sf6aKE6K2mXHJcbiAgICAgICAgICAgIHRoaXMubWFpblNjZW5lQ29udHJvbC5yb2xlXzAxWydSb2xlJ10ucm9sZV9XYXJuaW5nID0gdHJ1ZTtcclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuc2xlZlRhZ1JvbGUueCA8IExheWEuc3RhZ2Uud2lkdGggLyAyKSB7Ly/lt6bovrlcclxuICAgICAgICAgICAgLy8g5bem6L655Y+R55Sf6aKE6K2mXHJcbiAgICAgICAgICAgIHRoaXMubWFpblNjZW5lQ29udHJvbC5yb2xlXzAyWydSb2xlJ10ucm9sZV9XYXJuaW5nID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g6KKr5Ye76YCA5Y+N5ZCR56e75YqoXHJcbiAgICAgICAgaWYgKHRoaXMucmVwZWxUaW1lciA+IDApIHtcclxuICAgICAgICAgICAgdGhpcy5yZXBlbFRpbWVyLS07XHJcbiAgICAgICAgICAgIC8v5Y+N5ZCR56e75YqoXHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi54IC09IHBvaW50LnggKiAyO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYueSAtPSBwb2ludC55ICogMjtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAvL+WQkemHj+ebuOWKoOenu+WKqFxyXG4gICAgICAgICAgICB0aGlzLnNlbGYueCArPSBwb2ludC54ICogdGhpcy5zZWxmU3BlZWQ7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi55ICs9IHBvaW50LnkgKiB0aGlzLnNlbGZTcGVlZDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5oCq54mp5a+55Li76KeS6YCg5oiQ5Lyk5a6z55qE5YWs5byPXHJcbiAgICAgKiDmlLvlh7vlipst5Li76KeS6Ziy5b6h5aaC5p6c5aSn5LqO6Zu25YiZ6YCg5oiQ5Lyk5a6z77yM5ZCm5YiZ5LiN6YCg5oiQ5Lyk5a6zXHJcbiAgICAgKiDmjonooYDmmL7npLrlgLzvvIzkvKTlrrPlsI/kuo7pm7bliJnmmL7npLowXHJcbiAgICAgKiDlubbkuJTlnKjkuLvop5LlpLTkuIrlh7rnjrDmjonooYDliqjnlLvmj5DnpLpcclxuICAgICovXHJcbiAgICBlbmVteUF0dGFja1J1bGVzKCk6IHZvaWQge1xyXG4gICAgICAgIC8vIOmAmui/h+aUu+WHu+WKm+iuoeeul+aOieihgOeKtuWGtVxyXG4gICAgICAgIGxldCBkYW1hZ2UgPSB0aGlzLmVuZW15UHJvcGVydHkuYXR0YWNrVmFsdWUgLSB0aGlzLnNsZWZUYWdSb2xlWydSb2xlJ10ucm9sZV9wcm9wZXJ0eS5kZWZlbnNlO1xyXG4gICAgICAgIGlmIChkYW1hZ2UgPiAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2xlZlRhZ1JvbGVbJ1JvbGUnXS5yb2xlX3Byb3BlcnR5LmJsb29kIC09IGRhbWFnZTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBkYW1hZ2UgPSAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmNyZWF0ZUhpbnRXb3JkKGRhbWFnZSk7XHJcbiAgICB9XHJcblxyXG4gICAgY3JlYXRlSGludFdvcmQoZGFtYWdlOiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgICAvLyDliJvlu7rmj5DnpLrliqjnlLvlr7nosaFcclxuICAgICAgICBsZXQgaGludFdvcmQgPSBMYXlhLlBvb2wuZ2V0SXRlbUJ5Q3JlYXRlRnVuKCdjYW5keScsIHRoaXMuaGludFdvcmQuY3JlYXRlLCB0aGlzLmhpbnRXb3JkKSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICBoaW50V29yZC5wb3MoMCwgLTE1MCk7XHJcbiAgICAgICAgdGhpcy5zbGVmVGFnUm9sZS5hZGRDaGlsZChoaW50V29yZCk7XHJcbiAgICAgICAgbGV0IHByb1BlcnR5VHlwZTogc3RyaW5nID0gJ+aVjOS6uuaOieihgCc7XHJcbiAgICAgICAgbGV0IG51bWJlclZhbHVlOiBudW1iZXI7XHJcbiAgICAgICAgaWYgKCF0aGlzLnNsZWZUYWdSb2xlLnBhcmVudCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGhpbnRXb3JkWydIaW50V29yZCddLmluaXRQcm9wZXJ0eShwcm9QZXJ0eVR5cGUsIGRhbWFnZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq6L+c56iL5pS75Ye75Yib5bu65a2Q5by5Ki9cclxuICAgIGNyZWF0QnVsbGV0KCk6IHZvaWQge1xyXG4gICAgICAgIGxldCBidWxsZXQgPSBMYXlhLlBvb2wuZ2V0SXRlbUJ5Q3JlYXRlRnVuKCdlbmVteUJ1bGxldCcsIHRoaXMuZW5lbXlCdWxsZXQuY3JlYXRlLCB0aGlzLmVuZW15QnVsbGV0KSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICBsZXQgYnVsbGV0UGFyZW50ID0gdGhpcy5tYWluU2NlbmVDb250cm9sLmJ1bGxldFBhcmVudDtcclxuICAgICAgICBidWxsZXRQYXJlbnQuYWRkQ2hpbGQoYnVsbGV0KTtcclxuICAgICAgICBidWxsZXQucG9zKHRoaXMuc2VsZi54LCB0aGlzLnNlbGYueSk7XHJcbiAgICAgICAgYnVsbGV0WydFbmVteUJ1bGxldCddLmJlbG9uZ0VuZW15ID0gdGhpcy5zZWxmO1xyXG4gICAgICAgIGJ1bGxldFsnRW5lbXlCdWxsZXQnXS5idWxsZXRUYXJnZXQgPSB0aGlzLnNsZWZUYWdSb2xlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuabtOaNouaUu+WHu+ebruagh1xyXG4gICAgICog5aaC5p6c5b2T5YmN5pS75Ye755qE5Li76KeS5q275LqG77yM5pWM5Lq65Lya5pS75Ye75Y+m5LiA5Liq55uu5qCHXHJcbiAgICAqL1xyXG4gICAgcmVwbGFjZVRhcmdldCgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5zbGVmVGFnUm9sZVsnUm9sZSddLnJvbGVfcHJvcGVydHkuYmxvb2QgPD0gMCkge1xyXG4gICAgICAgICAgICAvLyDmm7TmjaLnm67moIdcclxuICAgICAgICAgICAgaWYgKHRoaXMuc2xlZlRhZ1JvbGUubmFtZSA9PT0gJ3JvbGVfMDEnKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNsZWZUYWdSb2xlID0gdGhpcy5tYWluU2NlbmVDb250cm9sLnJvbGVfMDI7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnRhZ0hlYWx0aCA9IHRoaXMubWFpblNjZW5lQ29udHJvbC5yb2xlXzAyLmdldENoaWxkQnlOYW1lKCdoZWFsdGgnKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnNsZWZUYWdSb2xlLm5hbWUgPT09ICdyb2xlXzAyJykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zbGVmVGFnUm9sZSA9IHRoaXMubWFpblNjZW5lQ29udHJvbC5yb2xlXzAxO1xyXG4gICAgICAgICAgICAgICAgdGhpcy50YWdIZWFsdGggPSB0aGlzLm1haW5TY2VuZUNvbnRyb2wucm9sZV8wMS5nZXRDaGlsZEJ5TmFtZSgnaGVhbHRoJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb25VcGRhdGUoKTogdm9pZCB7XHJcblxyXG4gICAgICAgIC8vIOS4u+inkuWFqOmDqOatu+S6oeWImeWBnOatouenu+WKqFxyXG4gICAgICAgIGlmICh0aGlzLnJvbGVQYXJlbnQuX2NoaWxkcmVuLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIOWmguaenOayoeacieebruagh+WImeS7gOS5iOmDveS4jeaJp+ihjFxyXG4gICAgICAgIGlmICh0aGlzLnNsZWZUYWdSb2xlID09PSBudWxsKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g6KGA6YeP5L2O5LqOMOWImeatu+S6oSzlubbkuJTlhbPpl63kuLvop5Llj5HlsITlrZDlvLnpooToraZcclxuICAgICAgICBpZiAodGhpcy5lbmVteVByb3BlcnR5LmJsb29kIDwgMCkge1xyXG4gICAgICAgICAgICB0aGlzLm1haW5TY2VuZUNvbnRyb2wucm9sZV8wMVsnUm9sZSddLnJvbGVfV2FybmluZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLm1haW5TY2VuZUNvbnRyb2wucm9sZV8wMlsnUm9sZSddLnJvbGVfV2FybmluZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYucmVtb3ZlU2VsZigpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyDlsZ7mgKflrp7ml7bliLfmlrBcclxuICAgICAgICB0aGlzLmVuZW15UHJvcGVydHlVcGRhdGUoKTtcclxuICAgICAgICAvLyDooYDph4/kvY7kuo4w5q275LqhLOW5tuS4lOWinuWKoOWIhuaVsCzlubbkuJTlhbPpl63kuLvop5LmlLvlh7vpooToraZcclxuICAgICAgICBpZiAodGhpcy5zZWxmSGVhbHRoLnZhbHVlIDw9IDApIHtcclxuICAgICAgICAgICAgdGhpcy5zY29yZUxhYmVsLnRleHQgPSAoTnVtYmVyKHRoaXMuc2NvcmVMYWJlbC50ZXh0KSArIDIwMCkudG9TdHJpbmcoKTtcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnJlbW92ZVNlbGYoKTtcclxuICAgICAgICAgICAgdGhpcy5tYWluU2NlbmVDb250cm9sLnJvbGVfMDFbJ1JvbGUnXS5yb2xlX1dhcm5pbmcgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5tYWluU2NlbmVDb250cm9sLnJvbGVfMDJbJ1JvbGUnXS5yb2xlX1dhcm5pbmcgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy/liKTmlq3ov5nkuKrmlYzkurrmmK/kuI3mmK/ov5znqIvmlLvlh7vvvIzov5znqIvmlLvlh7vnmoTmlYzkurrmmoLml7bkuI3kvJrnp7vliqgs5Lya5Li75Yqo5Y+R5bCE5a2Q5by56L+b6KGM5pS75Ye7XHJcbiAgICAgICAgaWYgKHRoaXMuZW5lbXlUeXBlID09PSAncmFuZ2UnKSB7XHJcbiAgICAgICAgICAgIGxldCBub3dUaW1lID0gRGF0ZS5ub3coKTtcclxuICAgICAgICAgICAgaWYgKG5vd1RpbWUgLSB0aGlzLnJlY29yZFRpbWUgPiB0aGlzLmVuZW15UHJvcGVydHkuYXR0YWNrU3BlZWQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMucmVjb3JkVGltZSA9IG5vd1RpbWU7XHJcbiAgICAgICAgICAgICAgICAvLyDooYDph4/liKTmlq3vvIznm67moIfmrbvkuqHlkI7vvIzkvJrmm7TmjaLnm67moIdcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnNsZWZUYWdSb2xlWydSb2xlJ10ucm9sZV9wcm9wZXJ0eS5ibG9vZCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNyZWF0QnVsbGV0KCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVwbGFjZVRhcmdldCgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmVuZW15VHlwZSA9PT0gJ2luZmlnaHRpbmcnKSB7XHJcbiAgICAgICAgICAgIC8vIOi/keaImOenu+WKqFxyXG4gICAgICAgICAgICB0aGlzLmVuZW15TW92ZSgpO1xyXG4gICAgICAgICAgICAvLyDliLDovr7lr7nosaHkvY3nva7lkI7lvIDlkK/mlLvlh7vlvIDlhbPov5vooYzmlLvlh7vvvIzmlLvlh7vpgJ/luqbkvp3nhafml7bpl7Tpl7TpmpTogIzlrppcclxuICAgICAgICAgICAgLy8g5q2k5pe256e75Yqo6YCf5bqm5Li66Zu2XHJcbiAgICAgICAgICAgIGxldCBkaWZmZXJlbmNlWCA9IE1hdGguYWJzKHRoaXMuc2VsZi54IC0gdGhpcy5hdHRhY2tYKTtcclxuICAgICAgICAgICAgbGV0IGRpZmZlcmVuY2VZID0gTWF0aC5hYnModGhpcy5zZWxmLnkgLSB0aGlzLmF0dGFja1kpO1xyXG4gICAgICAgICAgICBpZiAoZGlmZmVyZW5jZVggPCAxMDAgJiYgZGlmZmVyZW5jZVkgPCAxMDApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZlNwZWVkID0gMDtcclxuICAgICAgICAgICAgICAgIGxldCBub3dUaW1lID0gRGF0ZS5ub3coKTtcclxuICAgICAgICAgICAgICAgIGlmIChub3dUaW1lIC0gdGhpcy5yZWNvcmRUaW1lID4gdGhpcy5lbmVteVByb3BlcnR5LmF0dGFja1NwZWVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWNvcmRUaW1lID0gbm93VGltZTtcclxuICAgICAgICAgICAgICAgICAgICAvLyDooYDph4/liKTmlq3vvIznm67moIfmrbvkuqHlkI7vvIzkvJrmm7TmjaLnm67moIdcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5zbGVmVGFnUm9sZVsnUm9sZSddLnJvbGVfcHJvcGVydHkuYmxvb2QgPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZW5lbXlBdHRhY2tSdWxlcygpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVwbGFjZVRhcmdldCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZlNwZWVkID0gNDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBvbkRpc2FibGUoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHBpYyA9IHRoaXMuc2VsZi5nZXRDaGlsZEJ5TmFtZSgncGljJykgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgcGljLnJlbW92ZVNlbGYoKTtcclxuICAgICAgICBMYXlhLlBvb2wucmVjb3ZlcignZW5lbXknLCB0aGlzLnNlbGYpO1xyXG4gICAgfVxyXG5cclxufSIsImltcG9ydCBNYWluU2NlbmVDb250cm9sIGZyb20gXCIuL01haW5TY2VuZUNvbnRyb2xcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVuZW15QnVsbGV0IGV4dGVuZHMgTGF5YS5TY3JpcHQge1xyXG4gICAgLyoq6Ieq5bexKi9cclxuICAgIHByaXZhdGUgc2VsZjogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirmiYDlsZ7lnLrmma8qL1xyXG4gICAgcHJpdmF0ZSBzZWxmU2NlbmU6IExheWEuU2NlbmU7XHJcbiAgICAvKirkuLvop5LniLboioLngrkqL1xyXG4gICAgcHJpdmF0ZSByb2xlUGFyZW50OiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuS4u+inkjEqL1xyXG4gICAgcHJpdmF0ZSByb2xlXzAxOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuS4u+inkjIqL1xyXG4gICAgcHJpdmF0ZSByb2xlXzAyOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuWcuuaZr+iEmuacrCovXHJcbiAgICBwcml2YXRlIG1haW5TY2VuZUNvbnRyb2w7XHJcbiAgICAvKirmgKrnianniLboioLngrkqL1xyXG4gICAgcHJpdmF0ZSBlbmVteVBhcmVudDogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirmlLvlh7vlipsqL1xyXG4gICAgcHJpdmF0ZSBhdHRhY2tWYWx1ZTogbnVtYmVyO1xyXG4gICAgLyoq55uu5qCH77yM6L+Z5Liq55uu5qCH5piv5pyA6L+R55qE6YKj5Liq5pWM5Lq6Ki9cclxuICAgIHByaXZhdGUgYnVsbGV0VGFyZ2V0OiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuWtkOW8uemAn+W6piovXHJcbiAgICBwcml2YXRlIHNlbGZTcGVlZDogbnVtYmVyO1xyXG4gICAgLyoq6L+Z5Liq5a2Q5by55bGe5LqO5ZOq5Liq5Li76KeS5Y+R5bCE55qEKi9cclxuICAgIHByaXZhdGUgYmVsb25nRW5lbXk6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq5bGe5oCn6aOY5a2X5o+Q56S6Ki9cclxuICAgIHByaXZhdGUgaGludFdvcmQ6IExheWEuUHJlZmFiO1xyXG4gICAgY29uc3RydWN0b3IoKSB7IHN1cGVyKCk7IH1cclxuXHJcbiAgICBvbkVuYWJsZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmluaXQoKTtcclxuICAgIH1cclxuICAgIC8qKuWIneWni+WMluS4gOS6m+WxnuaApyovXHJcbiAgICBpbml0KCkge1xyXG4gICAgICAgIHRoaXMuc2VsZiA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5zZWxmU2NlbmUgPSB0aGlzLnNlbGYuc2NlbmU7XHJcbiAgICAgICAgdGhpcy5tYWluU2NlbmVDb250cm9sID0gdGhpcy5zZWxmU2NlbmUuZ2V0Q29tcG9uZW50KE1haW5TY2VuZUNvbnRyb2wpO1xyXG4gICAgICAgIHRoaXMuZW5lbXlQYXJlbnQgPSB0aGlzLm1haW5TY2VuZUNvbnRyb2wuZW5lbXlQYXJlbnQ7XHJcbiAgICAgICAgdGhpcy5zZWxmU3BlZWQgPSAxNTtcclxuICAgICAgICB0aGlzLmF0dGFja1ZhbHVlID0gdGhpcy5tYWluU2NlbmVDb250cm9sLmVuZW15UHJvcGVydHkuYXR0YWNrVmFsdWU7XHJcbiAgICAgICAgdGhpcy5yb2xlUGFyZW50ID0gdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5yb2xlUGFyZW50O1xyXG4gICAgICAgIHRoaXMuc2VsZlsnRW5lbXlCdWxsZXQnXSA9IHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5aeL57uI5pS75Ye75LiA5Liq5Li76KeS77yM5aaC5p6c6L+Z5Liq5Li76KeS5q275LqG77yMXHJcbiAgICAgKiDoi6Xmnpzov5nkuKrnm67moIfooqvnp7vpmaTkuobvvIzpgqPkuYjlj5Hlh7rljrvnmoTlrZDlvLnkvJrmsr/nnYDlkozmgKrniannmoTmlrnlkJHnu6fnu63np7vliqjliLA1MDBcclxuICAgICAqICovXHJcbiAgICBidWxsZXRNb3ZlKCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLmJ1bGxldFRhcmdldCAmJiB0aGlzLmJ1bGxldFRhcmdldC5wYXJlbnQpIHtcclxuICAgICAgICAgICAgLy8geCx55YiG5Yir55u45YeP5piv5Lik54K56L+e57q/5ZCR6YePXHJcbiAgICAgICAgICAgIGxldCBwb2ludCA9IG5ldyBMYXlhLlBvaW50KHRoaXMuYnVsbGV0VGFyZ2V0LnggLSB0aGlzLnNlbGYueCwgdGhpcy5idWxsZXRUYXJnZXQueSAtIHRoaXMuc2VsZi55KTtcclxuICAgICAgICAgICAgLy8g5b2S5LiA5YyW77yM5ZCR6YeP6ZW/5bqm5Li6MeOAglxyXG4gICAgICAgICAgICBwb2ludC5ub3JtYWxpemUoKTtcclxuICAgICAgICAgICAgLy/lkJHph4/nm7jliqBcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnggKz0gcG9pbnQueCAqIHRoaXMuc2VsZlNwZWVkO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYueSArPSBwb2ludC55ICogdGhpcy5zZWxmU3BlZWQ7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgLy8g5rK/552A6Ieq5bex5ZKM5Y+R5bCE6Ieq5bex55qE5pWM5Lq65pa55ZCR56e75YqoXHJcbiAgICAgICAgICAgIGxldCBwb2ludCA9IG5ldyBMYXlhLlBvaW50KHRoaXMuc2VsZi54IC0gdGhpcy5iZWxvbmdFbmVteS54LCB0aGlzLnNlbGYueSAtIHRoaXMuYmVsb25nRW5lbXkueSk7XHJcbiAgICAgICAgICAgIC8vIOW9kuS4gOWMlu+8jOWQkemHj+mVv+W6puS4ujHjgIJcclxuICAgICAgICAgICAgcG9pbnQubm9ybWFsaXplKCk7XHJcbiAgICAgICAgICAgIC8v5ZCR6YeP55u45YqgXHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi54ICs9IHBvaW50LnggKiB0aGlzLnNlbGZTcGVlZDtcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnkgKz0gcG9pbnQueSAqIHRoaXMuc2VsZlNwZWVkO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKirlrZDlvLnlr7nkuLvop5LpgKDmiJDkvKTlrrPnmoTlhazlvI9cclxuICAgICAgICog5pS75Ye75YqbLeS4u+inkumYsuW+oeWmguaenOWkp+S6jumbtuWImemAoOaIkOS8pOWus++8jOWQpuWImeS4jemAoOaIkOS8pOWus1xyXG4gICAgICAgKiDlubbkuJTmnInliqjnlLvmj5DnpLrmloflrZdcclxuICAgICAgKi9cclxuICAgIGJ1bGxldEF0dGFja1J1bGVzKHJvbGUpOiB2b2lkIHtcclxuICAgICAgICAvLyDmjonooYDmmL7npLrlgLzvvIzkvKTlrrPlsI/kuo7pm7bliJnmmL7npLowXHJcbiAgICAgICAgbGV0IG51bWJlclZhbHVlOiBudW1iZXI7XHJcbiAgICAgICAgLy8g5Lyk5a6zXHJcbiAgICAgICAgbGV0IGRhbWFnZSA9IHRoaXMuYXR0YWNrVmFsdWUgLSByb2xlWydSb2xlJ10ucm9sZV9wcm9wZXJ0eS5kZWZlbnNlO1xyXG4gICAgICAgIGlmIChkYW1hZ2UgPiAwKSB7XHJcbiAgICAgICAgICAgIHJvbGVbJ1JvbGUnXS5yb2xlX3Byb3BlcnR5LmJsb29kIC09IGRhbWFnZTtcclxuICAgICAgICAgICAgbnVtYmVyVmFsdWUgPSBkYW1hZ2U7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgbnVtYmVyVmFsdWUgPSAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBvblVwZGF0ZSgpOiB2b2lkIHtcclxuICAgICAgICAvLyDnp7vliqhcclxuICAgICAgICB0aGlzLmJ1bGxldE1vdmUoKTtcclxuICAgICAgICAvLyDotoXlh7rmqKrlkJHojIPlm7TmtojlpLHvvIzkuIDoiKzkuI3kvJrop6blj5FcclxuICAgICAgICBpZiAodGhpcy5zZWxmLnggPiA3NTAgKyB0aGlzLnNlbGYud2lkdGggKyA1MCB8fCB0aGlzLnNlbGYueCA8IC10aGlzLnNlbGYud2lkdGgpIHtcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnJlbW92ZVNlbGYoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g56Kw5Yiw5Lu75L2V5LiA5Liq5Li76KeS77yM5a2Q5by55raI5aSx5oCq54mp5o6J6KGAXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnJvbGVQYXJlbnQuX2NoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCByb2xlID0gdGhpcy5yb2xlUGFyZW50Ll9jaGlsZHJlbltpXSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICAgICAgbGV0IGRpZmZlcmVuY2VYID0gTWF0aC5hYnMocm9sZS54IC0gdGhpcy5zZWxmLngpO1xyXG4gICAgICAgICAgICBsZXQgZGlmZmVyZW5jZVkgPSBNYXRoLmFicyhyb2xlLnkgLSB0aGlzLnNlbGYueSk7XHJcbiAgICAgICAgICAgIGlmIChkaWZmZXJlbmNlWCA8IDEwICYmIGRpZmZlcmVuY2VZIDwgMTApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYnVsbGV0QXR0YWNrUnVsZXMocm9sZSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGYucmVtb3ZlU2VsZigpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICBvbkRpc2FibGUoKTogdm9pZCB7XHJcblxyXG4gICAgfVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgSGludFdvcmQgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XHJcbiAgICAvKiroh6rlt7EqL1xyXG4gICAgcHJpdmF0ZSBzZWxmOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuWinuWKoOWxnuaAp+WxnuaAp+agh+etviovXHJcbiAgICBwcml2YXRlIGFkZFByb3BlcnR5OiBMYXlhLkZvbnRDbGlwO1xyXG4gICAgLyoq5aKe5Yqg5bGe5oCn5YC85bGe5oCn5YC8Ki9cclxuICAgIHByaXZhdGUgYWRkTnVtYmVyOiBMYXlhLkZvbnRDbGlwO1xyXG4gICAgLyoq5YeP5bCR5bGe5oCn5YC85bGe5oCn5YC8Ki9cclxuICAgIHByaXZhdGUgc3ViTnVtYmVyOiBMYXlhLkZvbnRDbGlwO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkgeyBzdXBlcigpOyB9XHJcblxyXG4gICAgb25FbmFibGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZWxmID0gdGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICB0aGlzLnNlbGZbJ0hpbnRXb3JkJ10gPSB0aGlzO1xyXG4gICAgICAgIHRoaXMuc2VsZi5hbHBoYSA9IDA7Ly/lh7rnjrDnmoTml7blgJnpmpDouqvvvIzmlrnkvr/lgZrliqjnlLtcclxuXHJcbiAgICAgICAgdGhpcy5hZGRQcm9wZXJ0eSA9IHRoaXMuc2VsZi5nZXRDaGlsZEJ5TmFtZSgnYWRkUHJvcGVydHknKSBhcyBMYXlhLkZvbnRDbGlwO1xyXG4gICAgICAgIHRoaXMuYWRkTnVtYmVyID0gdGhpcy5zZWxmLmdldENoaWxkQnlOYW1lKCdhZGROdW1iZXInKSBhcyBMYXlhLkZvbnRDbGlwO1xyXG4gICAgICAgIHRoaXMuc3ViTnVtYmVyID0gdGhpcy5zZWxmLmdldENoaWxkQnlOYW1lKCdzdWJOdW1iZXInKSBhcyBMYXlhLkZvbnRDbGlwO1xyXG5cclxuICAgICAgICB0aGlzLmFkZFByb3BlcnR5LnZhbHVlID0gbnVsbDtcclxuICAgICAgICB0aGlzLmFkZE51bWJlci52YWx1ZSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5zdWJOdW1iZXIudmFsdWUgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKumAmui/h+S8oOWFpeeahOWPguaVsOadpe+8jOiuvue9ruWxnuaAp+WbvueJh+Wtl+eahOagvOW8j1xyXG4gICAgICogQHBhcmFtIHByb3BlcnR5VHlwZSDlsZ7mgKfnsbvlnotcclxuICAgICAqIEBwYXJhbSBudW1iZXJWYWx1ZSDlsZ7mgKflgLxcclxuICAgICAqICovXHJcbiAgICBpbml0UHJvcGVydHkocHJvcGVydHlUeXBlOiBzdHJpbmcsIG51bWJlclZhbHVlOiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmFkZFByb3BlcnR5LnZhbHVlID0gcHJvcGVydHlUeXBlO1xyXG4gICAgICAgIC8vIOS9jee9ruWBj+enu++8jOWboOS4uuWtl+espumVv+W6puS4jeS4gOagt1xyXG4gICAgICAgIHN3aXRjaCAocHJvcGVydHlUeXBlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgJ+WFrOm4oemAn+W6pic6XHJcbiAgICAgICAgICAgICAgICB0aGlzLmFkZFByb3BlcnR5LnggLT0gNDA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmFkZE51bWJlci52YWx1ZSA9IFwiK1wiICsgbnVtYmVyVmFsdWU7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAn5pS75Ye76YeMJzpcclxuICAgICAgICAgICAgICAgIHRoaXMuYWRkUHJvcGVydHkueCAtPSAyMDtcclxuICAgICAgICAgICAgICAgIHRoaXMuYWRkTnVtYmVyLnggLT0gMjA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmFkZE51bWJlci52YWx1ZSA9IFwiK1wiICsgbnVtYmVyVmFsdWU7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAn55Sf5ZG9JzpcclxuICAgICAgICAgICAgICAgIHRoaXMuYWRkTnVtYmVyLnggLT0gNDA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmFkZE51bWJlci52YWx1ZSA9IFwiK1wiICsgbnVtYmVyVmFsdWU7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAn6Ziy5b6h5YqbJzpcclxuICAgICAgICAgICAgICAgIHRoaXMuYWRkUHJvcGVydHkueCAtPSAyMDtcclxuICAgICAgICAgICAgICAgIHRoaXMuYWRkTnVtYmVyLnggLT0gMjA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmFkZE51bWJlci52YWx1ZSA9IFwiK1wiICsgbnVtYmVyVmFsdWU7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAn5Li76KeS5o6J6KGAJzpcclxuICAgICAgICAgICAgICAgIHRoaXMuc3ViTnVtYmVyLnggLT0gODA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN1Yk51bWJlci52YWx1ZSA9IFwiLVwiICsgbnVtYmVyVmFsdWU7XHJcbiAgICAgICAgICAgIGNhc2UgJ+aVjOS6uuaOieihgCc6XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN1Yk51bWJlci54IC09IDgwO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zdWJOdW1iZXIudmFsdWUgPSBcIi1cIiArIG51bWJlclZhbHVlO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuaGludFdvcmRNb3ZlKCk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8qKumjmOWtl+WKqOeUu+aXtumXtOe6vyovXHJcbiAgICBoaW50V29yZE1vdmUoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHRpbWVMaW5lID0gbmV3IExheWEuVGltZUxpbmU7XHJcbiAgICAgICAgdGltZUxpbmUuYWRkTGFiZWwoJ2FwcGVhcicsIDApLnRvKHRoaXMuc2VsZiwgeyB5OiB0aGlzLnNlbGYueSAtIDYwLCBhbHBoYTogMSB9LCAxMDAsIG51bGwsIDApXHJcbiAgICAgICAgICAgIC5hZGRMYWJlbCgncGF1c2UnLCAwKS50byh0aGlzLnNlbGYsIHsgeTogdGhpcy5zZWxmLnkgLSAxMjAgfSwgODAwLCBudWxsLCAwKVxyXG4gICAgICAgICAgICAuYWRkTGFiZWwoJ3ZhbmlzaCcsIDApLnRvKHRoaXMuc2VsZiwgeyB5OiB0aGlzLnNlbGYueSAtIDE1MCwgYWxwaGE6IDAgfSwgMTAwLCBudWxsLCAwKVxyXG4gICAgICAgIHRpbWVMaW5lLnBsYXkoJ2FwcGVhcicsIGZhbHNlKTtcclxuICAgICAgICB0aW1lTGluZS5vbihMYXlhLkV2ZW50LkNPTVBMRVRFLCB0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi5yZW1vdmVTZWxmKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25EaXNhYmxlKCk6IHZvaWQge1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IEVuZW15IGZyb20gXCIuL0VuZW15XCI7XHJcbmltcG9ydCBDYW5keSBmcm9tIFwiLi9DYW5keVwiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNYWluU2NlbmVDb250cm9sIGV4dGVuZHMgTGF5YS5TY3JpcHQge1xyXG4gICAgLyoqIEBwcm9wIHtuYW1lOmNhbmR5LCB0aXBzOlwi57OW5p6cXCIsIHR5cGU6UHJlZmFifSovXHJcbiAgICBwdWJsaWMgY2FuZHk6IExheWEuUHJlZmFiO1xyXG4gICAgLyoqIEBwcm9wIHtuYW1lOmNhbmR5UGFyZW50LCB0aXBzOlwi57OW5p6c54i26IqC54K5XCIsIHR5cGU6Tm9kZX0qL1xyXG4gICAgcHVibGljIGNhbmR5UGFyZW50OiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKiBAcHJvcCB7bmFtZTpjYW5keVBhcmVudF9Nb3ZlLCB0aXBzOlwi5YWL6ZqG57OW5p6c55So5p2l56e75Yqo55qE54i26IqC54K5XCIsIHR5cGU6Tm9kZX0qL1xyXG4gICAgcHVibGljIGNhbmR5UGFyZW50X01vdmU6IExheWEuU3ByaXRlO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpyb2xlUGFyZW50LCB0aXBzOlwi6KeS6Imy54i26IqC54K5XCIsIHR5cGU6Tm9kZX0qL1xyXG4gICAgcHVibGljIHJvbGVQYXJlbnQ6IExheWEuU3ByaXRlO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTplbmVteSwgdGlwczpcIuaVjOS6ulwiLCB0eXBlOlByZWZhYn0qL1xyXG4gICAgcHVibGljIGVuZW15OiBMYXlhLlByZWZhYjtcclxuICAgIC8qKiBAcHJvcCB7bmFtZTplbmVteVBhcmVudCwgdGlwczpcIuaVjOS6uueItuiKgueCuVwiLCB0eXBlOk5vZGV9Ki9cclxuICAgIHB1YmxpYyBlbmVteVBhcmVudDogTGF5YS5TcHJpdGU7XHJcbiAgICAvKiogQHByb3Age25hbWU6ZW5lbXlCdWxsZXQsIHRpcHM6XCLmlYzkurrlrZDlvLnpooTliLbkvZNcIiwgdHlwZTpQcmVmYWJ9Ki9cclxuICAgIHB1YmxpYyBlbmVteUJ1bGxldDogTGF5YS5QcmVmYWI7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOmJhY2tncm91bmQsIHRpcHM6XCLog4zmma/lm75cIiwgdHlwZTpOb2RlfSovXHJcbiAgICBwdWJsaWMgYmFja2dyb3VuZDogTGF5YS5TcHJpdGU7XHJcbiAgICAvKiogQHByb3Age25hbWU6YXNzZW1ibHksIHRpcHM65rWB5rC057q/LCB0eXBlOk5vZGV9Ki9cclxuICAgIHB1YmxpYyBhc3NlbWJseTogTGF5YS5TcHJpdGU7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOnNwZWFrQm94UGFyZW50LCB0aXBzOlwi5a+56K+d5qGG54i26IqC54K5XCIsIHR5cGU6Tm9kZX0qL1xyXG4gICAgcHVibGljIHNwZWFrQm94UGFyZW50OiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKiBAcHJvcCB7bmFtZTpzcGVha0JveCwgdGlwczpcIuWvueivneahhlwiLCB0eXBlOlByZWZhYn0qL1xyXG4gICAgcHVibGljIHNwZWFrQm94OiBMYXlhLlByZWZhYjtcclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6YnVsbGV0UGFyZW50LCB0aXBzOlwi5a2Q5by554i26IqC54K5XCIsIHR5cGU6Tm9kZX0qL1xyXG4gICAgcHVibGljIGJ1bGxldFBhcmVudDogTGF5YS5TcHJpdGU7XHJcbiAgICAvKiogQHByb3Age25hbWU6cm9sZUJ1bGxldCwgdGlwczpcIuWtkOW8uVwiLCB0eXBlOlByZWZhYn0qL1xyXG4gICAgcHVibGljIHJvbGVCdWxsZXQ6IExheWEuUHJlZmFiO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpzY29yZUxhYmVsLCB0aXBzOuKAmOW+l+WIhuKAmSwgdHlwZTpOb2RlfSovXHJcbiAgICBwdWJsaWMgc2NvcmVMYWJlbDogTGF5YS5MYWJlbDtcclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6aGludFdvcmQgLCB0aXBzOlwi5bGe5oCn6aOY5a2X5o+Q56S6XCIsIHR5cGU6UHJlZmFifSovXHJcbiAgICBwdWJsaWMgaGludFdvcmQ6IExheWEuUHJlZmFiO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpyZXdhcmRXb3JkcyAsIHRpcHM6XCLlpZblirHmj5DnpLror61cIiwgdHlwZTpQcmVmYWJ9Ki9cclxuICAgIHB1YmxpYyByZXdhcmRXb3JkczogTGF5YS5QcmVmYWI7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOnRpbWVyICwgdGlwczpcIuiuoeaXtuWZqFwiLCB0eXBlOk5vZGV9Ki9cclxuICAgIHB1YmxpYyB0aW1lcjogTGF5YS5TcHJpdGU7XHJcblxyXG4gICAgLyoq5piv5ZCm5aSE5LqO5pqC5YGc54q25oCBKi9cclxuICAgIHByaXZhdGUgc3VzcGVuZDogYm9vbGVhbjtcclxuXHJcbiAgICAvKirkuKTkuKrkuLvop5IqL1xyXG4gICAgcHJpdmF0ZSByb2xlXzAxOiBMYXlhLlNwcml0ZTtcclxuICAgIHByaXZhdGUgcm9sZV8wMjogTGF5YS5TcHJpdGU7XHJcblxyXG4gICAgLyoq5Lik5Liq5Li76KeS55qE5a+56K+d5qGGKi9cclxuICAgIHByaXZhdGUgcm9sZV8wMXNwZWFrOiBMYXlhLlNwcml0ZTtcclxuICAgIHByaXZhdGUgcm9sZV8wMnNwZWFrOiBMYXlhLlNwcml0ZTtcclxuXHJcbiAgICAvKirmlYzkurrlh7rnjrDlvIDlhbPvvIzov5nkuKrlvIDlhbPmr4/mrKHlvIDlkK/lkI7vvIzkuIDmrKHmgKfvvIzotYvkuIDmrKHlgLzlj6rog73kuqfnlJ/kuIDkuKrmlYzkuroqL1xyXG4gICAgcHJpdmF0ZSBlbmVteUFwcGVhcjogYm9vbGVhbjtcclxuICAgIC8qKuaAqueJqeaUu+WHu+WvueixoSzkuZ/mmK/kuIrkuKrlkIPns5bmnpzlr7nosaEs5LiA5qyh5oCn77yM6LWL5LiA5qyh5YC85Y+q6IO955So5LiA5qyhKi9cclxuICAgIHByaXZhdGUgZW5lbXlUYWdSb2xlOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuaVjOS6uuS6p+eUn+eahOaAu+S4quaVsOiusOW9lSovXHJcbiAgICBwcml2YXRlIGVuZW15Q291bnQ6IG51bWJlcjtcclxuXHJcbiAgICAvKirns5bmnpzkuqfnlJ/nmoTml7bpl7Tpl7TpmpQqL1xyXG4gICAgcHJpdmF0ZSBjYW5keV9pbnRlcnZhbDogbnVtYmVyO1xyXG4gICAgLyoq5b2T5YmN5pe26Ze06K6w5b2VKi9cclxuICAgIHByaXZhdGUgY3JlYXRUaW1lOiBudW1iZXI7XHJcbiAgICAvKirnlJ/kuqflvIDlhbMqL1xyXG4gICAgcHJpdmF0ZSBjcmVhdE9uT2ZmOiBib29sZWFuO1xyXG4gICAgLyoq57OW5p6c5Yiw56Kw5Yiw5oSf5bqU6KOF572u5pe277yM5ZCN5a2X6KOF6L+b6L+Z5Liq5pWw57uEKi9cclxuICAgIHByaXZhdGUgbmFtZUFycjogQXJyYXk8c3RyaW5nPjtcclxuICAgIC8qKuezluaenOeUn+S6p+eahOaAu+S4quaVsOiusOW9lSovXHJcbiAgICBwcml2YXRlIGNhbmR5Q291bnQ6IG51bWJlcjtcclxuICAgIC8qKuWkjea0u+aJgOmcgOWQg+ezluaenOeahOaVsOmHjyovXHJcbiAgICBwcml2YXRlIHJlc2N1ZU51bTogbnVtYmVyO1xyXG5cclxuICAgIC8qKuaXtumXtOe6vyovXHJcbiAgICBwcml2YXRlIHRpbWVyQ29udHJvbDogbnVtYmVyO1xyXG5cclxuICAgIC8qKuaAqueJqeWxnuaApyovXHJcbiAgICBwcml2YXRlIGVuZW15UHJvcGVydHk6IGFueTtcclxuXHJcbiAgICAvKirlt6bovrnlh7rmgKrnmoTml7bpl7Tpl7TpmpQqL1xyXG4gICAgcHJpdmF0ZSBlbmVteUludGVydmFsXzAxOiBudW1iZXI7XHJcbiAgICAvKirlt6bovrnmr4/mrKHlh7rmgKrml7bpl7TmjqfliLYqL1xyXG4gICAgcHJpdmF0ZSBlbmVteVRpbWVfMDE6IG51bWJlcjtcclxuICAgIC8qKuW3pui+ueWHuuaAquW8gOWFsyovXHJcbiAgICBwcml2YXRlIGVuZW15U3dpdGNoXzAxOiBib29sZWFuO1xyXG5cclxuICAgIC8qKuWPs+i+ueWHuuaAqueahOaXtumXtOmXtOmalCovXHJcbiAgICBwcml2YXRlIGVuZW15SW50ZXJ2YWxfMDI6IG51bWJlcjtcclxuICAgIC8qKuWPs+i+ueavj+asoeWHuuaAquaXtumXtOaOp+WItiovXHJcbiAgICBwcml2YXRlIGVuZW15VGltZV8wMjogbnVtYmVyO1xyXG4gICAgLyoq5bem6L655Ye65oCq5byA5YWzKi9cclxuICAgIHByaXZhdGUgZW5lbXlTd2l0Y2hfMDI6IGJvb2xlYW47XHJcblxyXG4gICAgLyoqMTDkuKrns5bmnpzlm7rlrprkvY3nva4qL1xyXG4gICAgcHJpdmF0ZSBwb3NBcnJfbGVmdDogQXJyYXk8QXJyYXk8bnVtYmVyPj47XHJcbiAgICBwcml2YXRlIHBvc0Fycl9yaWdodDogQXJyYXk8QXJyYXk8bnVtYmVyPj47XHJcbiAgICAvKirmr4/mrKHliJvlu7oxMOS4quezluaenOS7luS7rOeahOWQjeensOe7hOWQiCovXHJcbiAgICBwcml2YXRlIGNhbmR5TmFtZUFycjogQXJyYXk8c3RyaW5nPjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHsgc3VwZXIoKTsgfVxyXG5cclxuICAgIG9uRW5hYmxlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuaW5pdFNlY25lKCk7XHJcbiAgICAgICAgdGhpcy5yb2xldEluaXQoKTtcclxuICAgICAgICB0aGlzLnJvbGVTcGVha0JveHMoKTtcclxuICAgICAgICB0aGlzLmNhbmR5UG9zSW5pdCgpO1xyXG4gICAgICAgIHRoaXMuY3JlYXRlV2F2ZUNhbmR5cygpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWcuuaZr+WIneWni+WMliovXHJcbiAgICBpbml0U2VjbmUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5lbmVteUFwcGVhciA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuZW5lbXlUYWdSb2xlID0gbnVsbDtcclxuICAgICAgICB0aGlzLmVuZW15Q291bnQgPSAwO1xyXG5cclxuICAgICAgICAvLyDliJ3lp4vljJbmgKrnianlsZ7mgKfvvIzkvp3mrKHkuLrooYDph4/vvIxcclxuICAgICAgICB0aGlzLmVuZW15UHJvcGVydHkgPSB7XHJcbiAgICAgICAgICAgIGJsb29kOiAyMDAsXHJcbiAgICAgICAgICAgIGF0dGFja1ZhbHVlOiAxNSxcclxuICAgICAgICAgICAgYXR0YWNrU3BlZWQ6IDEwMDAsXHJcbiAgICAgICAgICAgIGRlZmVuc2U6IDEsXHJcbiAgICAgICAgICAgIG1vdmVTcGVlZDogMTAsXHJcbiAgICAgICAgICAgIGNyZWF0SW50ZXJ2YWw6IDUwMDBcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuZW5lbXlJbnRlcnZhbF8wMSA9IDUwMDtcclxuICAgICAgICB0aGlzLmVuZW15VGltZV8wMSA9IERhdGUubm93KCk7XHJcbiAgICAgICAgdGhpcy5lbmVteVN3aXRjaF8wMSA9IHRydWU7XHJcblxyXG4gICAgICAgIHRoaXMuZW5lbXlJbnRlcnZhbF8wMiA9IDUwMDtcclxuICAgICAgICB0aGlzLmVuZW15VGltZV8wMiA9IERhdGUubm93KCk7XHJcbiAgICAgICAgdGhpcy5lbmVteVN3aXRjaF8wMiA9IHRydWU7XHJcblxyXG4gICAgICAgIHRoaXMuY2FuZHlfaW50ZXJ2YWwgPSAxMDAwO1xyXG4gICAgICAgIHRoaXMuY3JlYXRUaW1lID0gRGF0ZS5ub3coKTtcclxuICAgICAgICB0aGlzLmNyZWF0T25PZmYgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMubmFtZUFyciA9IFtdO1xyXG4gICAgICAgIHRoaXMuY2FuZHlDb3VudCA9IDA7XHJcbiAgICAgICAgdGhpcy5zY29yZUxhYmVsLnRleHQgPSAnMCc7XHJcblxyXG4gICAgICAgIHRoaXMucmVzY3VlTnVtID0gMDtcclxuICAgICAgICAvLyDlhbPpl63lpJrngrnop6bmjqdcclxuICAgICAgICBMYXlhLk1vdXNlTWFuYWdlci5tdWx0aVRvdWNoRW5hYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMudGltZXJDb250cm9sID0gMDtcclxuXHJcbiAgICAgICAgdGhpcy5vd25lclsnTWFpblNjZW5lQ29udHJvbCddID0gdGhpczsvL+iEmuacrOi1i+WAvFxyXG5cclxuICAgICAgICB0aGlzLnN1c3BlbmQgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICAvKirnlJ/miJAxMOS4quWIneWni+ezluaenFxyXG4gICAgICog5Zyo5Zu65a6a55qEMTDkuKrkvY3nva4qL1xyXG4gICAgY2FuZHlQb3NJbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMucG9zQXJyX2xlZnQgPSBbXTtcclxuICAgICAgICB0aGlzLnBvc0Fycl9yaWdodCA9IFtdO1xyXG4gICAgICAgIGxldCBjYW5keUhlaWh0ID0gMTAwO1xyXG4gICAgICAgIGxldCBzcGFjaW5nID0gMTA7XHJcbiAgICAgICAgbGV0IHN0YXJ0WF8wMSA9IExheWEuc3RhZ2Uud2lkdGggLyAyIC0gNzA7XHJcbiAgICAgICAgbGV0IHN0YXJ0WF8wMiA9IExheWEuc3RhZ2Uud2lkdGggLyAyICsgNzA7XHJcbiAgICAgICAgbGV0IHN0YXJ0WSA9IExheWEuc3RhZ2Uud2lkdGggLyAzO1xyXG4gICAgICAgIC8vIOazqOaEj+aOkuW4g+mhuuW6j++8jOaKiuesrOS4gOS4quaOkuWIsOacgOWJje+8jOaJgOS7pei/lOWbnuadpeW+queOr1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAxOyBpID49IDA7IGktLSkge1xyXG4gICAgICAgICAgICBmb3IgKGxldCBqID0gNDsgaiA+PSAwOyBqLS0pIHtcclxuICAgICAgICAgICAgICAgIGlmIChpID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGFyciA9IFtzdGFydFhfMDEsIHN0YXJ0WSArIGogKiAoY2FuZHlIZWlodCArIHNwYWNpbmcpXTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnBvc0Fycl9sZWZ0LnB1c2goYXJyKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaSA9PT0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBhcnIgPSBbc3RhcnRYXzAyLCBzdGFydFkgKyBqICogKGNhbmR5SGVpaHQgKyBzcGFjaW5nKV07XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wb3NBcnJfcmlnaHQucHVzaChhcnIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKjEw5Liq57OW5p6c5o6S5biD5Yqo55S7Ki9cclxuICAgIGNyZWF0ZVdhdmVDYW5keXMoKTogdm9pZCB7XHJcbiAgICAgICAgLy8g55Sf5oiQMTDkuKrliJ3lp4vns5bmnpxcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDI7IGkrKykge1xyXG4gICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IDU7IGorKykge1xyXG4gICAgICAgICAgICAgICAgbGV0IHg7XHJcbiAgICAgICAgICAgICAgICBsZXQgeTtcclxuICAgICAgICAgICAgICAgIGxldCBjYW5keSA9IHRoaXMuY3JlYXRlQ2FuZHkoKTtcclxuICAgICAgICAgICAgICAgIGlmIChpID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgeCA9IHRoaXMucG9zQXJyX2xlZnRbal1bMF07XHJcbiAgICAgICAgICAgICAgICAgICAgeSA9IHRoaXMucG9zQXJyX2xlZnRbal1bMV07XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGkgPT09IDEpIHtcclxuICAgICAgICAgICAgICAgICAgICB4ID0gdGhpcy5wb3NBcnJfcmlnaHRbal1bMF07XHJcbiAgICAgICAgICAgICAgICAgICAgeSA9IHRoaXMucG9zQXJyX3JpZ2h0W2pdWzFdO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY2FuZHkueCA9IHg7XHJcbiAgICAgICAgICAgICAgICBjYW5keS55ID0geTtcclxuICAgICAgICAgICAgICAgIGNhbmR5WydDYW5keSddLmdyb3VwID0gajtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKirkuLvop5LliJ3lp4vljJbvvIzmiJDlr7nlh7rnjrDlnKjkuKTkuKrlm7rlrprkvY3nva7vvIzmr4/mrKHliJ3lp4vljJblkI7nmoTkvY3nva7lj6/og73kvJrosIPmjaIqL1xyXG4gICAgcm9sZXRJbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMucm9sZV8wMSA9IHRoaXMub3duZXIuc2NlbmUucm9sZV8wMTtcclxuICAgICAgICB0aGlzLnJvbGVfMDIgPSB0aGlzLm93bmVyLnNjZW5lLnJvbGVfMDI7XHJcbiAgICAgICAgbGV0IHBpY18wMSA9ICh0aGlzLnJvbGVfMDEuZ2V0Q2hpbGRCeU5hbWUoJ3BpYycpIGFzIExheWEuU3ByaXRlKTtcclxuICAgICAgICBsZXQgcGljXzAyID0gKHRoaXMucm9sZV8wMi5nZXRDaGlsZEJ5TmFtZSgncGljJykgYXMgTGF5YS5TcHJpdGUpO1xyXG5cclxuICAgICAgICAvLyDpmo/mnLrmm7TmjaLnmq7ogqRcclxuICAgICAgICBsZXQgaW1hZ2VVcmxfMDE6IHN0cmluZyA9ICdjYW5keS/nuqLoibLmobYucG5nJztcclxuICAgICAgICBsZXQgaW1hZ2VVcmxfMDI6IHN0cmluZyA9ICdjYW5keS/pu4ToibLmobYucG5nJztcclxuICAgICAgICBsZXQgcmFuZG9tTnVtID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMik7XHJcbiAgICAgICAgaWYgKHJhbmRvbU51bSA9PT0gMCkge1xyXG4gICAgICAgICAgICBwaWNfMDEubG9hZEltYWdlKGltYWdlVXJsXzAxKTtcclxuICAgICAgICAgICAgcGljXzAxLm5hbWUgPSAncmVkUm9sZSc7XHJcbiAgICAgICAgICAgIHBpY18wMi5sb2FkSW1hZ2UoaW1hZ2VVcmxfMDIpO1xyXG4gICAgICAgICAgICBwaWNfMDIubmFtZSA9ICd5ZWxsb3dSb2xlJztcclxuXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcGljXzAyLmxvYWRJbWFnZShpbWFnZVVybF8wMSk7XHJcbiAgICAgICAgICAgIHBpY18wMi5uYW1lID0gJ3JlZFJvbGUnO1xyXG4gICAgICAgICAgICBwaWNfMDEubG9hZEltYWdlKGltYWdlVXJsXzAyKTtcclxuICAgICAgICAgICAgcGljXzAxLm5hbWUgPSAneWVsbG93Um9sZSc7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKuS4pOS4quS4u+inkuWvueivneahhueahOWIneWni+WMliovXHJcbiAgICByb2xlU3BlYWtCb3hzKCk6IHZvaWQge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMjsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCBzcGVha0JveCA9IExheWEuUG9vbC5nZXRJdGVtQnlDcmVhdGVGdW4oJ3NwZWFrQm94JywgdGhpcy5zcGVha0JveC5jcmVhdGUsIHRoaXMuc3BlYWtCb3gpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgICAgICB0aGlzLnNwZWFrQm94UGFyZW50LmFkZENoaWxkKHNwZWFrQm94KTtcclxuICAgICAgICAgICAgaWYgKGkgPT09IDApIHtcclxuICAgICAgICAgICAgICAgIHNwZWFrQm94LnBvcyh0aGlzLnJvbGVfMDEueCwgdGhpcy5yb2xlXzAxLnkpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yb2xlXzAxc3BlYWsgPSBzcGVha0JveDtcclxuICAgICAgICAgICAgICAgIHRoaXMucm9sZV8wMXNwZWFrLmFscGhhID0gMDtcclxuICAgICAgICAgICAgICAgIC8vIOWPjeWQkeWSjOWBj+enu1xyXG4gICAgICAgICAgICAgICAgbGV0IHBpYyA9IHRoaXMucm9sZV8wMXNwZWFrLmdldENoaWxkQnlOYW1lKCdwaWMnKSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICAgICAgICAgIGxldCBsYWJlbCA9IHRoaXMucm9sZV8wMXNwZWFrLmdldENoaWxkQnlOYW1lKCdsYWJlbCcpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgICAgICAgICAgcGljLnNjYWxlWCA9IC0xO1xyXG4gICAgICAgICAgICAgICAgbGFiZWwueCArPSAzMDtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHNwZWFrQm94LnBvcyh0aGlzLnJvbGVfMDIueCwgdGhpcy5yb2xlXzAyLnkpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yb2xlXzAyc3BlYWsgPSBzcGVha0JveDtcclxuICAgICAgICAgICAgICAgIHRoaXMucm9sZV8wMnNwZWFrLmFscGhhID0gMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKirkuqfnlJ/ns5bmnpwqL1xyXG4gICAgY3JlYXRlQ2FuZHkoKTogTGF5YS5TcHJpdGUge1xyXG4gICAgICAgIC8vIOmAmui/h+WvueixoeaxoOWIm+W7ulxyXG4gICAgICAgIGxldCBjYW5keSA9IExheWEuUG9vbC5nZXRJdGVtQnlDcmVhdGVGdW4oJ2NhbmR5JywgdGhpcy5jYW5keS5jcmVhdGUsIHRoaXMuY2FuZHkpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIC8vIOmaj+acuuWIm+W7uuS4gOenjeminOiJsuezluaenFxyXG4gICAgICAgIC8vIOezluaenOeahOWQjeensOe7k+aehOaYrzEx5L2N5a2X56ym5Liy5Yqg5LiK57Si5byV5YC877yM5pa55L6/5p+l5om+77yM5bm25LiU6L+Z5qC35L2/5LuW5Lus55qE5ZCN56ew5ZSv5LiAXHJcbiAgICAgICAgbGV0IHJhbmRvbU51bSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDQpO1xyXG4gICAgICAgIGxldCB1cmxfMDEgPSAnY2FuZHkv6buE6Imy57OW5p6cLnBuZyc7XHJcbiAgICAgICAgbGV0IHVybF8wMiA9ICdjYW5keS/nuqLoibLns5bmnpwucG5nJztcclxuICAgICAgICBsZXQgdXJsXzAzID0gJ2NhbmR5L+iTneiJsuezluaenC5wbmcnO1xyXG4gICAgICAgIGxldCB1cmxfMDQgPSAnY2FuZHkv57u/6Imy57OW5p6cLnBuZyc7XHJcbiAgICAgICAgbGV0IHBpYyA9IChjYW5keS5nZXRDaGlsZEJ5TmFtZSgncGljJykgYXMgTGF5YS5TcHJpdGUpO1xyXG4gICAgICAgIHN3aXRjaCAocmFuZG9tTnVtKSB7XHJcbiAgICAgICAgICAgIGNhc2UgMDpcclxuICAgICAgICAgICAgICAgIGNhbmR5Lm5hbWUgPSAneWVsbG93Q2FuZHknICsgdGhpcy5jYW5keUNvdW50O1xyXG4gICAgICAgICAgICAgICAgcGljLmxvYWRJbWFnZSh1cmxfMDEpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgICAgIGNhbmR5Lm5hbWUgPSAncmVkQ2FuZHlfX18nICsgdGhpcy5jYW5keUNvdW50O1xyXG4gICAgICAgICAgICAgICAgcGljLmxvYWRJbWFnZSh1cmxfMDIpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMjpcclxuICAgICAgICAgICAgICAgIGNhbmR5Lm5hbWUgPSAnYmx1ZUNhbmR5X18nICsgdGhpcy5jYW5keUNvdW50O1xyXG4gICAgICAgICAgICAgICAgcGljLmxvYWRJbWFnZSh1cmxfMDMpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMzpcclxuICAgICAgICAgICAgICAgIGNhbmR5Lm5hbWUgPSAnZ3JlZW5DYW5keV8nICsgdGhpcy5jYW5keUNvdW50O1xyXG4gICAgICAgICAgICAgICAgcGljLmxvYWRJbWFnZSh1cmxfMDQpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g6ZqP5py654K55Ye75qyh5pWwXHJcbiAgICAgICAgbGV0IGNsaWNrc0xhYmVsID0gY2FuZHkuZ2V0Q2hpbGRCeU5hbWUoJ2NsaWNrc0xhYmVsJykgYXMgTGF5YS5MYWJlbDtcclxuICAgICAgICBjbGlja3NMYWJlbC50ZXh0ID0gKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDApICsgMSkudG9TdHJpbmcoKTtcclxuICAgICAgICBjYW5keS5wb3MoTGF5YS5zdGFnZS53aWR0aCAvIDIsIC0xMDApO1xyXG4gICAgICAgIHRoaXMuY2FuZHlQYXJlbnQuYWRkQ2hpbGQoY2FuZHkpO1xyXG4gICAgICAgIGNhbmR5LnJvdGF0aW9uID0gMDtcclxuICAgICAgICB0aGlzLmNhbmR5Q291bnQrKztcclxuICAgICAgICByZXR1cm4gY2FuZHk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq6KeS6Imy5q275Lqh5aSN5rS754q25Ya1Ki9cclxuICAgIHJvbGVEZWF0aFN0YXRlKCk6IHZvaWQge1xyXG4gICAgICAgIC8vIOinkuiJsuatu+S6oeaDheWGtVxyXG4gICAgICAgIGxldCBsZW4gPSB0aGlzLnJvbGVQYXJlbnQuX2NoaWxkcmVuLmxlbmd0aDtcclxuICAgICAgICBpZiAobGVuID09PSAwKSB7XHJcbiAgICAgICAgICAgIC8vIOatu+S6oVxyXG4gICAgICAgICAgICB0aGlzLmVuZW15U3dpdGNoXzAxID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMuZW5lbXlTd2l0Y2hfMDIgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9IGVsc2UgaWYgKGxlbiA9PT0gMSkge1xyXG4gICAgICAgICAgICBsZXQgc3BlYWtfMDEgPSB0aGlzLnJvbGVfMDFzcGVhay5nZXRDaGlsZEJ5TmFtZSgnbGFiZWwnKSBhcyBMYXlhLkxhYmVsO1xyXG4gICAgICAgICAgICBsZXQgc3BlYWtfMDIgPSB0aGlzLnJvbGVfMDJzcGVhay5nZXRDaGlsZEJ5TmFtZSgnbGFiZWwnKSBhcyBMYXlhLkxhYmVsO1xyXG4gICAgICAgICAgICAvLyDlpI3mtLtcclxuICAgICAgICAgICAgaWYgKHRoaXMucmVzY3VlTnVtID49IDUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMucmVzY3VlTnVtID0gMDtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnJvbGVQYXJlbnQuX2NoaWxkcmVuWzBdLm5hbWUgPT09IFwicm9sZV8wMVwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yb2xlUGFyZW50LmFkZENoaWxkKHRoaXMucm9sZV8wMik7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yb2xlXzAyc3BlYWsueCAtPSAxNTA7XHJcbiAgICAgICAgICAgICAgICAgICAgc3BlYWtfMDIudGV4dCA9ICfosKLosKLkvaDllYrvvIEnO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnJvbGVQYXJlbnQuYWRkQ2hpbGQodGhpcy5yb2xlXzAxKTtcclxuICAgICAgICAgICAgICAgICAgICBzcGVha18wMS50ZXh0ID0gJ+iwouiwouS9oOWViu+8gSc7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yb2xlXzAxc3BlYWsueCArPSAxNTA7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAvLyDlvoXlpI3mtLvmj5DnpLpcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnJvbGVQYXJlbnQuX2NoaWxkcmVuWzBdLm5hbWUgPT09IFwicm9sZV8wMVwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yb2xlXzAyc3BlYWsuYWxwaGEgPSAxO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucm9sZV8wMnNwZWFrLnggPSB0aGlzLnJvbGVfMDIueDtcclxuICAgICAgICAgICAgICAgICAgICBzcGVha18wMi50ZXh0ID0gJ+i/nue7reWQgzXkuKrns5bmnpzkuI3niq/plJnnmoTor53miJHlsLHlpI3mtLvkuoYnO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnJvbGVfMDFzcGVhay5hbHBoYSA9IDE7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yb2xlXzAxc3BlYWsueCA9IHRoaXMucm9sZV8wMS54O1xyXG4gICAgICAgICAgICAgICAgICAgIHNwZWFrXzAxLnRleHQgPSAn6L+e57ut5ZCDNeS4quezluaenOS4jeeKr+mUmeeahOivneaIkeWwseWkjea0u+S6hic7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2UgaWYgKGxlbiA9PT0gMikge1xyXG4gICAgICAgICAgICAvLyDkv53mjIHvvIzlpI3mtLvnirbmgIHkuLrnqbpcclxuICAgICAgICAgICAgdGhpcy5yZXNjdWVOdW0gPT09IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKuWHuueOsOaVjOS6ulxyXG4gICAgICog5Yib5bu65pa55byP5Yaz5a6a5LqG5pWM5Lq65Ye655Sf55qE5L2N572uXHJcbiAgICAgKiBAcGFyYW0gbW9kZSDliJvlu7rmqKHlvI/mmK/lt6bovrnov5jmmK/lj7PovrlcclxuICAgICAqIEBwYXJhbSB0YWdSb2xlIOebruagh+aYr+WTquS4quS4u+inklxyXG4gICAgKi9cclxuICAgIGNhcmVhdEVuZW15KG1vZGU6IHN0cmluZywgdGFnUm9sZTogTGF5YS5TcHJpdGUsIHR5cGU6IHN0cmluZyk6IExheWEuU3ByaXRlIHtcclxuICAgICAgICB0aGlzLmVuZW15Q291bnQrKztcclxuICAgICAgICBpZiAodGFnUm9sZSAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgICBsZXQgZW5lbXkgPSBMYXlhLlBvb2wuZ2V0SXRlbUJ5Q3JlYXRlRnVuKCdlbmVteScsIHRoaXMuZW5lbXkuY3JlYXRlLCB0aGlzLmVuZW15KSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICAgICAgdGhpcy5lbmVteVBhcmVudC5hZGRDaGlsZChlbmVteSk7XHJcbiAgICAgICAgICAgIGVuZW15Lm5hbWUgPSAnZW5lbXknICsgdGhpcy5lbmVteUNvdW50Oy8v5ZCN56ew5ZSv5LiAXHJcbiAgICAgICAgICAgIGVuZW15LnBpdm90WCA9IGVuZW15LndpZHRoIC8gMjtcclxuICAgICAgICAgICAgZW5lbXkucGl2b3RZID0gZW5lbXkuaGVpZ2h0IC8gMjtcclxuICAgICAgICAgICAgLy/lh7rnlJ/kvY3nva7liKTlrpos5ZKM5pS75Ye755uu5qCH6YCJ5oupXHJcbiAgICAgICAgICAgIGlmIChtb2RlID09PSAnbGVmdCcpIHtcclxuICAgICAgICAgICAgICAgIGVuZW15LnBvcygtNTAsIDMwMCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAobW9kZSA9PT0gJ3JpZ2h0Jykge1xyXG4gICAgICAgICAgICAgICAgZW5lbXkucG9zKDgwMCwgMzAwKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChtb2RlID09PSAndGFyZ2V0Jykge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRhZ1JvbGUueCA8IExheWEuc3RhZ2Uud2lkdGggLyAyICYmIHRhZ1JvbGUueCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBlbmVteS5wb3MoLTUwLCAzMDApO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0YWdSb2xlLnggPj0gTGF5YS5zdGFnZS53aWR0aCAvIDIgJiYgdGFnUm9sZS54IDwgTGF5YS5zdGFnZS53aWR0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGVuZW15LnBvcyg4MDAsIDMwMCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZW5lbXlbJ0VuZW15J10uc2xlZlRhZ1JvbGUgPSB0YWdSb2xlO1xyXG4gICAgICAgICAgICBlbmVteVsnRW5lbXknXS5lbmVteVR5cGUgPSB0eXBlO1xyXG4gICAgICAgICAgICBlbmVteVsnRW5lbXknXS5yYW5kb21BdHRhY2tQb2ludCgpO1xyXG4gICAgICAgICAgICAvLyDnmq7ogqRcclxuXHJcbiAgICAgICAgICAgIGxldCBwaWMgPSBuZXcgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgICAgIHBpYy5uYW1lID0gJ3BpYydcclxuICAgICAgICAgICAgbGV0IHVybF8wMSA9ICdjYW5keS/ov5HmiJjmlYzkuroucG5nJ1xyXG4gICAgICAgICAgICBsZXQgdXJsXzAyID0gJ2NhbmR5L+i/nOeoi+aVjOS6ui5wbmcnXHJcbiAgICAgICAgICAgIGlmICh0eXBlID09PSAnaW5maWdodGluZycpIHtcclxuICAgICAgICAgICAgICAgIHBpYy5sb2FkSW1hZ2UodXJsXzAxKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlID09PSAncmFuZ2UnKSB7XHJcbiAgICAgICAgICAgICAgICBwaWMubG9hZEltYWdlKHVybF8wMik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZW5lbXkuYWRkQ2hpbGQocGljKTtcclxuICAgICAgICAgICAgcGljLnBpdm90WCA9IHBpYy53aWR0aCAvIDI7XHJcbiAgICAgICAgICAgIHBpYy5waXZvdFkgPSBwaWMuaGVpZ2h0IC8gMjtcclxuICAgICAgICAgICAgcGljLnBvcyhlbmVteS53aWR0aCAvIDIsIGVuZW15LmhlaWdodCAvIDIpO1xyXG4gICAgICAgICAgICAvLyDpu5jorqTlsZ7mgKfkuI3lj6/op4FcclxuICAgICAgICAgICAgbGV0IHByb3BlcnR5U2hvdyA9IGVuZW15LmdldENoaWxkQnlOYW1lKCdwcm9wZXJ0eVNob3cnKSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLnN1c3BlbmQpIHtcclxuICAgICAgICAgICAgICAgIHByb3BlcnR5U2hvdy5hbHBoYSA9IDA7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBwcm9wZXJ0eVNob3cuYWxwaGEgPSAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBlbmVteTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKiog5pWM5Lq655qE5bGC57qn6L+b6KGM5o6S5bqPXHJcbiAgICog6KeE5YiZ5piv5Yik5pateei9tO+8jHnlnZDmoIfotorkvY7nmoTotorpnaDliY1cclxuICAqL1xyXG4gICAgZW5lbXlPcmRlcigpOiB2b2lkIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuZW5lbXlQYXJlbnQuX2NoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZW5lbXlQYXJlbnQuX2NoaWxkcmVuW2ldLnpPcmRlciA9IE1hdGgucm91bmQodGhpcy5lbmVteVBhcmVudC5fY2hpbGRyZW5baV0ueSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoq5bGe5oCn5Yi35paw5pi+56S66KeE5YiZLOihgOmHj+aYvuekuuS4gOWumuaYr+aVtOaVsO+8jOW5tuS4lOaYrzEw55qE5YCN5pWwXHJcbiAgICAqIOagueaNruaXtumXtOe6v+eahOWinumVv++8jOaAqueJqeeahOWxnuaAp+S4jeaWreWinuW8ulxyXG4gICAgKi9cclxuICAgIGVuZW15UHJvcGVydHlVcGRhdGUoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMudGltZXJDb250cm9sICUgNTAwID09PSAwKSB7XHJcbiAgICAgICAgICAgIC8vIOihgOmHj+WinumVv1xyXG4gICAgICAgICAgICB0aGlzLmVuZW15UHJvcGVydHkuYmxvb2QgKz0gNTA7XHJcbiAgICAgICAgICAgIC8vIOaUu+WHu+WKm+WinumVv1xyXG4gICAgICAgICAgICB0aGlzLmVuZW15UHJvcGVydHkuYXR0YWNrVmFsdWUgKz0gMTtcclxuICAgICAgICAgICAgLy8g6Ziy5b6h5Yqb5aKe6ZW/XHJcbiAgICAgICAgICAgIHRoaXMuZW5lbXlQcm9wZXJ0eS5kZWZlbnNlICs9IDE7XHJcbiAgICAgICAgICAgIC8vIOWHuuaAquaXtumXtOWinumVvyzov5nph4zkvJrmnInkuKrmnIDnn63pl7TpmpRcclxuICAgICAgICAgICAgaWYgKHRoaXMuZW5lbXlQcm9wZXJ0eS5jcmVhdEludGVydmFsID4gNTAwKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVuZW15UHJvcGVydHkuY3JlYXRJbnRlcnZhbCAtPSAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcblxyXG4gICAgLyoq5bGe5oCn5Yi35paw5pi+56S66KeE5YiZKi9cclxuICAgIG9uVXBkYXRlKCk6IHZvaWQge1xyXG4gICAgICAgIC8vIOaXtuWIu+WvueaVjOS6uueahOWxgue6p+i/m+ihjOaOkuW6j1xyXG4gICAgICAgIHRoaXMuZW5lbXlPcmRlcigpO1xyXG4gICAgICAgIC8vIOiusOW9leaXtumXtFxyXG4gICAgICAgIHRoaXMudGltZXJDb250cm9sICs9IDE7XHJcbiAgICAgICAgLy8g5qC55o2u5pe26Ze057q/77yM5Yi35paw5oCq54mp5bGe5oCnXHJcbiAgICAgICAgdGhpcy5lbmVteVByb3BlcnR5VXBkYXRlKCk7XHJcbiAgICAgICAgLy8g6KeS6Imy5q275Lqh5aSN5rS754q25Ya1XHJcbiAgICAgICAgdGhpcy5yb2xlRGVhdGhTdGF0ZSgpO1xyXG4gICAgICAgIC8vIOmAmui/h+aXtumXtOmXtOmalOS6p+eUn+aVjOS6uu+8jOW3puWPs+S6p+eUn+eahOaVjOS6uuS4jeS4gOagt1xyXG4gICAgICAgIC8vIOW3plxyXG4gICAgICAgIGlmICh0aGlzLmVuZW15U3dpdGNoXzAxKSB7XHJcbiAgICAgICAgICAgIGxldCBub3dUaW1lID0gRGF0ZS5ub3coKTtcclxuICAgICAgICAgICAgaWYgKG5vd1RpbWUgLSB0aGlzLmVuZW15VGltZV8wMSA+IHRoaXMuZW5lbXlQcm9wZXJ0eS5jcmVhdEludGVydmFsKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVuZW15VGltZV8wMSA9IG5vd1RpbWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVuZW15VGFnUm9sZSA9IHRoaXMucm9sZV8wMTtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2FyZWF0RW5lbXkoJ2xlZnQnLCB0aGlzLnJvbGVfMDEsICdpbmZpZ2h0aW5nJyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVuZW15VGFnUm9sZSA9IG51bGw7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g5Y+zXHJcbiAgICAgICAgaWYgKHRoaXMuZW5lbXlTd2l0Y2hfMDIpIHtcclxuICAgICAgICAgICAgbGV0IG5vd1RpbWUgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgICAgICBpZiAobm93VGltZSAtIHRoaXMuZW5lbXlUaW1lXzAyID4gdGhpcy5lbmVteVByb3BlcnR5LmNyZWF0SW50ZXJ2YWwpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZW5lbXlUaW1lXzAyID0gbm93VGltZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZW5lbXlUYWdSb2xlID0gdGhpcy5yb2xlXzAyO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jYXJlYXRFbmVteSgncmlnaHQnLCB0aGlzLnJvbGVfMDIsICdpbmZpZ2h0aW5nJyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVuZW15VGFnUm9sZSA9IG51bGw7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb25EaXNhYmxlKCk6IHZvaWQge1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IE1haW5TY2VuZUNvbnRyb2wgZnJvbSBcIi4vTWFpblNjZW5lQ29udHJvbFwiO1xyXG5pbXBvcnQgQ2FuZHkgZnJvbSBcIi4vQ2FuZHlcIjtcclxuaW1wb3J0IHRvb2xzIGZyb20gXCIuL1Rvb2xcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgT3BlcmF0aW9uQnV0dG9uIGV4dGVuZHMgTGF5YS5TY3JpcHQge1xyXG4gICAgLyoq6Ieq5bexKi9cclxuICAgIHByaXZhdGUgc2VsZjogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirmiYDlsZ7lnLrmma8qL1xyXG4gICAgcHJpdmF0ZSBzZWxmU2NlbmU6IExheWEuU2NlbmU7XHJcbiAgICAvKirlnLrmma/ohJrmnKznu4Tku7YqL1xyXG4gICAgcHJpdmF0ZSBtYWluU2NlbmVDb250cm9sO1xyXG4gICAgLyoq57OW5p6c54i26IqC54K5Ki9cclxuICAgIHByaXZhdGUgY2FuZHlQYXJlbnQ6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq5YWL6ZqG57OW5p6c55So5p2l56e75Yqo55qE54i26IqC54K5Ki9cclxuICAgIHByaXZhdGUgY2FuZHlQYXJlbnRfTW92ZTogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirmk43kvZzlvIDlhbMqL1xyXG4gICAgcHJpdmF0ZSBvcGVyYXRpb25Td2l0Y2g6IGJvb2xlYW47XHJcbiAgICAvKirmlYzkuroqL1xyXG4gICAgcHJpdmF0ZSBlbmVteTogTGF5YS5QcmVmYWI7XHJcbiAgICAvKirorqHml7blmagqL1xyXG4gICAgcHJpdmF0ZSB0aW1lcjogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirorqHml7blmajov5vluqbmnaEqL1xyXG4gICAgcHJpdmF0ZSB0aW1lU2NoZWR1bGU6IExheWEuUHJvZ3Jlc3NCYXI7XHJcblxyXG4gICAgLyoq6L+e57ut54K55Ye757OW5p6c5q2j56Gu6ICM5LiN54qv6ZSZ55qE5LqL5Lu2Ki9cclxuICAgIHByaXZhdGUgcmlnaHRDb3VudDogbnVtYmVyO1xyXG4gICAgLyoq54K55Ye75qyh5pWw6K6w5b2VKi9cclxuICAgIHByaXZhdGUgY2xpY2tzQ291bnQ6IG51bWJlcjtcclxuICAgIC8qKuavj+eCueS4pOasoeWQjueahOezluaenOminOiJsuWQjeensCovXHJcbiAgICBwcml2YXRlIGNsaWNrc05hbWVBcnI6IEFycmF5PHN0cmluZz47XHJcbiAgICAvKirmraPnoa7ns5bmnpznmoTlkI3lrZcqL1xyXG4gICAgcHJpdmF0ZSByaWdodE5hbWU6IEFycmF5PHN0cmluZz47XHJcbiAgICAvKirplJnor6/ns5bmnpznmoTlkI3lrZcqL1xyXG4gICAgcHJpdmF0ZSBlcnJvck5hbWU6IEFycmF5PHN0cmluZz47XHJcbiAgICAvKirns5bmnpzmgLvlkI3np7DlkIjpm4YqL1xyXG4gICAgcHJpdmF0ZSBjYW5keU5hbWVBcnI6IEFycmF5PHN0cmluZz47XHJcbiAgICAvKirns5bmnpzmgLvlkI3np7DlkIjpm4YqL1xyXG4gICAgcHJpdmF0ZSBhbHJlYWR5R3JvdXA6IEFycmF5PG51bWJlcj47XHJcbiAgICAvKirliIbmlbAqL1xyXG4gICAgcHJpdmF0ZSBzY29yZUxhYmVsOiBMYXlhLkxhYmVsO1xyXG4gICAgLyoq57uT566X5byA5YWzLOato+WcqOe7k+eul+eahOaXtuWAmeWFs+mXreS4gOWIh+ihjOS4uiovXHJcbiAgICBwcml2YXRlIHNldHRsZVN3aXRjaDogYm9vbGVhbjtcclxuICAgIC8qKuWlluWKseaPkOekuuaWh+WtlyovXHJcbiAgICBwcml2YXRlIHJld2FyZFdvcmRzOiBMYXlhLlByZWZhYjtcclxuXHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7IHN1cGVyKCk7IH1cclxuXHJcbiAgICBvbkVuYWJsZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmluaXRQcm9wZXJ0eSgpO1xyXG4gICAgICAgIHRoaXMuYnV0dG9uQ2xpbmsoKTtcclxuICAgICAgICB0aGlzLmNsaWNrSGludCgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWIneWni+WMluS4gOS6m+WxnuaApyovXHJcbiAgICBpbml0UHJvcGVydHkoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZWxmID0gdGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICB0aGlzLnNlbGZTY2VuZSA9IHRoaXMuc2VsZi5zY2VuZTtcclxuICAgICAgICB0aGlzLm1haW5TY2VuZUNvbnRyb2wgPSB0aGlzLnNlbGZTY2VuZS5nZXRDb21wb25lbnQoTWFpblNjZW5lQ29udHJvbCk7XHJcbiAgICAgICAgdGhpcy5jYW5keVBhcmVudCA9IHRoaXMubWFpblNjZW5lQ29udHJvbC5jYW5keVBhcmVudDtcclxuICAgICAgICB0aGlzLmNhbmR5UGFyZW50X01vdmUgPSB0aGlzLm1haW5TY2VuZUNvbnRyb2wuY2FuZHlQYXJlbnRfTW92ZTtcclxuICAgICAgICB0aGlzLm9wZXJhdGlvblN3aXRjaCA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5yaWdodENvdW50ID0gMDtcclxuICAgICAgICB0aGlzLmNsaWNrc0NvdW50ID0gMDtcclxuICAgICAgICB0aGlzLmNsaWNrc05hbWVBcnIgPSBbXTtcclxuICAgICAgICB0aGlzLnJpZ2h0TmFtZSA9IFtdO1xyXG4gICAgICAgIHRoaXMuZXJyb3JOYW1lID0gW107XHJcbiAgICAgICAgdGhpcy5hbHJlYWR5R3JvdXAgPSBbXTtcclxuICAgICAgICB0aGlzLnNjb3JlTGFiZWwgPSB0aGlzLm1haW5TY2VuZUNvbnRyb2wuc2NvcmVMYWJlbDtcclxuICAgICAgICB0aGlzLmNhbmR5TmFtZUFyciA9IHRoaXMubWFpblNjZW5lQ29udHJvbC5jYW5keU5hbWVBcnI7XHJcbiAgICAgICAgdGhpcy50aW1lciA9IHRoaXMubWFpblNjZW5lQ29udHJvbC50aW1lcjtcclxuICAgICAgICB0aGlzLnRpbWVTY2hlZHVsZSA9IHRoaXMudGltZXIuZ2V0Q2hpbGRCeU5hbWUoJ3RpbWVTY2hlZHVsZScpIGFzIExheWEuUHJvZ3Jlc3NCYXI7XHJcbiAgICAgICAgdGhpcy5zZXR0bGVTd2l0Y2ggPSBmYWxzZTtcclxuICAgICAgICB0aGlzLnJld2FyZFdvcmRzID0gdGhpcy5tYWluU2NlbmVDb250cm9sLnJld2FyZFdvcmRzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuaTjeS9nOaMiemSrueahOeCueWHu+S6i+S7tiovXHJcbiAgICBidXR0b25DbGluaygpOiB2b2lkIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuc2VsZi5fY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgdGhpcy5zZWxmLl9jaGlsZHJlbltpXS5vbihMYXlhLkV2ZW50Lk1PVVNFX0RPV04sIHRoaXMsIHRoaXMuZG93bik7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi5fY2hpbGRyZW5baV0ub24oTGF5YS5FdmVudC5NT1VTRV9NT1ZFLCB0aGlzLCB0aGlzLm1vdmUpO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYuX2NoaWxkcmVuW2ldLm9uKExheWEuRXZlbnQuTU9VU0VfVVAsIHRoaXMsIHRoaXMudXApO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYuX2NoaWxkcmVuW2ldLm9uKExheWEuRXZlbnQuTU9VU0VfT1VULCB0aGlzLCB0aGlzLm91dCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoq5Yik5pat5oyJ5LiL55qE5oyJ6ZKu5ZKM5YeG5aSH5L2N572u55qE57OW5p6c5piv5ZCm5Yy56YWNO1xyXG4gICAgICog5aaC5p6c5Yy56YWN77yM6YKj5LmI55yL5LiL57OW5p6c5LiK6Z2i5YaZ55qE5Yeg5qyh54K55Ye75qyh5pWw77yM6ZyA6KaB6L+e57ut54K55Ye75Yiw6L+Z5Liq5qyh5pWw5omN5Y+v5Lul5ZCD57OW5p6cXHJcbiAgICAgKiDlpoLmnpzmrKHmlbDmsqHmnInovr7liLDvvIzljbTngrnkuoblj6bkuIDnp43mjInpkq7vvIzpgqPkuYjliY3pnaLnmoTmrKHmlbDkvJrph43nva7vvIzlubbkuJTlh7rnjrDkuIDkuKrmgKrnialcclxuICAgICAqIOWmguaenOS4jeWMuemFje+8jOivtOaYjueCuemUmeS6hu+8jOezluaenOS8mui3s+WIsOWklumdouWPmOaIkOS4gOS4quaAqueJqSzliJnlh7rnjrDkuIDkuKrmgKrnialcclxuICAgICAqL1xyXG4gICAgZG93bihldmVudCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLnNldHRsZVN3aXRjaCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLm9wZXJhdGlvblN3aXRjaCA9PT0gZmFsc2UpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmNsaWNrc0NvdW50Kys7XHJcbiAgICAgICAgLy8g6YCa6L+H54K55Ye755qE5oyJ6ZKu5Yy56YWN5a+55bqU55qE57OW5p6c57G75Z6LXHJcbiAgICAgICAgc3dpdGNoIChldmVudC5jdXJyZW50VGFyZ2V0Lm5hbWUpIHtcclxuICAgICAgICAgICAgY2FzZSAncmVkQnV0dG9uJzpcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xpY2tzTmFtZUFyci5wdXNoKCdyZWRDYW5keV9fXycpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ3llbGxvd0J1dHRvbic6XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNsaWNrc05hbWVBcnIucHVzaCgneWVsbG93Q2FuZHknKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdncmVlbkJ1dHRvbic6XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNsaWNrc05hbWVBcnIucHVzaCgnZ3JlZW5DYW5keV8nKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdibHVlQnV0dG9uJzpcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xpY2tzTmFtZUFyci5wdXNoKCdibHVlQ2FuZHlfXycpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyDkuKTkuKTlr7nmr5TliKTmlq3kuYvlkI7muIXnqbrov5nkuKrmlbDnu4TvvIzlvZPngrnlh7vmrKHmlbDmmK8y55qE5YCN5pWw5pe26L+b6KGM5a+55q+UXHJcbiAgICAgICAgaWYgKHRoaXMuY2xpY2tzQ291bnQgJSAyID09PSAwICYmIHRoaXMuY2xpY2tzQ291bnQgPj0gMikge1xyXG4gICAgICAgICAgICB0aGlzLmNsaWNrVHdvQ29tcGFyZU5hbWUoKTsvL+esrOS6jOasoeeCueWHu+WvueavlFxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2xpY2tPbmVDb21wYXJlTmFtZSgpOy8v56ys5LiA5qyh54K55Ye75a+55q+UXHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIOeCueWujOe7k+eul1xyXG4gICAgICAgIGlmICh0aGlzLmNsaWNrc0NvdW50ID09PSAxMCkge1xyXG4gICAgICAgICAgICB0aGlzLnNldHRsZW1lbnQoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZXZlbnQuY3VycmVudFRhcmdldC5zY2FsZSgwLjksIDAuOSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq54K55Ye75Lik5qyh5LmL5ZCO5a+55q+U5ZCN56ewXHJcbiAgICAgKiDngrnlh7vmrKHmlbDlkoznu4TmlbDpg73mmK/lm7rlrprnmoTvvIzliIbliKvmmK8xMOasoeWSjDXnu4RcclxuICAgICAq5omA5Lul54K55Ye75LqGMuasoeWvueW6lOeahOWwseaYr+esrDDnu4TvvIw05qyh5bCx5piv56ysMee7hC4uLi4uLlxyXG4gICAgKi9cclxuICAgIGNsaWNrVHdvQ29tcGFyZU5hbWUoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IG5hbWVBcnIgPSBbXTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuY2FuZHlQYXJlbnQuX2NoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCBjYW5keSA9IHRoaXMuY2FuZHlQYXJlbnQuX2NoaWxkcmVuW2ldO1xyXG4gICAgICAgICAgICBpZiAoY2FuZHlbXCJDYW5keVwiXS5ncm91cCA9PT0gKHRoaXMuY2xpY2tzQ291bnQgLSAyKSAvIDIpIHsvL+avj+eCueS4pOasoeWvueW6lOeahOezluaenOe7hFxyXG4gICAgICAgICAgICAgICAgbmFtZUFyci5wdXNoKGNhbmR5Lm5hbWUpO1xyXG4gICAgICAgICAgICAgICAgbGV0IGZpcnN0Q2FuZHkgPSB0aGlzLmNhbmR5UGFyZW50LmdldENoaWxkQnlOYW1lKG5hbWVBcnJbMF0pIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgICAgICAgICAgLy8g5paH5a2X5pi+56S6XHJcbiAgICAgICAgICAgICAgICBpZiAobmFtZUFyci5sZW5ndGggPj0gMikge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBjb21wYXJlQXJyID0gW25hbWVBcnJbMF0uc3Vic3RyaW5nKDAsIDExKSwgbmFtZUFyclsxXS5zdWJzdHJpbmcoMCwgMTEpXVxyXG4gICAgICAgICAgICAgICAgICAgIC8vIOWvueavlOS4pOS4quaVsOe7hOeci+eci+aYr+WQpuebuOetie+8jOaOkuW6j++8jOi9rOaIkOWtl+espuS4suaWueWPr+WvueavlO+8m1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChjb21wYXJlQXJyLnNvcnQoKS50b1N0cmluZygpID09PSB0aGlzLmNsaWNrc05hbWVBcnIuc29ydCgpLnRvU3RyaW5nKCkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGxhYmVsXzAxID0gZmlyc3RDYW5keS5nZXRDaGlsZEJ5TmFtZSgnY2xpY2tzTGFiZWwnKSBhcyBMYXlhLkxhYmVsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgbGFiZWxfMDIgPSBjYW5keS5nZXRDaGlsZEJ5TmFtZSgnY2xpY2tzTGFiZWwnKSBhcyBMYXlhLkxhYmVsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbF8wMS50ZXh0ID0gJ+mAieWvueS6hic7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsXzAyLnRleHQgPSAn6YCJ5a+55LqGJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8g5q2j56Gu55qE57OW5p6c5ZCN56ew5L+d5a2YXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmlnaHROYW1lLnB1c2gobmFtZUFyclswXSwgbmFtZUFyclsxXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGxhYmVsXzAxID0gZmlyc3RDYW5keS5nZXRDaGlsZEJ5TmFtZSgnY2xpY2tzTGFiZWwnKSBhcyBMYXlhLkxhYmVsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgbGFiZWxfMDIgPSBjYW5keS5nZXRDaGlsZEJ5TmFtZSgnY2xpY2tzTGFiZWwnKSBhcyBMYXlhLkxhYmVsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbF8wMS50ZXh0ID0gJ+mAiemUmeS6hic7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsXzAyLnRleHQgPSAn6YCJ6ZSZ5LqGJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8g6ZSZ6K+v55qE57OW5p6c5ZCN5L+d5a2YXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZXJyb3JOYW1lLnB1c2gobmFtZUFyclswXSwgbmFtZUFyclsxXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIC8vIOW3sue7j+eCuei/h+eahOezluaenOeahOe7hOaVsFxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWxyZWFkeUdyb3VwLnB1c2goY2FuZHlbXCJDYW5keVwiXS5ncm91cCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5jbGlja0hpbnQoKTtcclxuICAgICAgICB0aGlzLmNsaWNrc05hbWVBcnIgPSBbXTsvL+WvueavlOWQjua4heepulxyXG4gICAgfVxyXG5cclxuICAgIC8qKuavj+eCueS4gOasoeeahOaXtuWAmeWIpOaWreeCueWHu+aYr+WQpuato+ehru+8jOW5tuS4lOe7meS6iOWKqOeUu+aPkOekulxyXG4gICAgICog5q2k5pe25YiG5Li65LiJ56eN5oOF5Ya1XHJcbiAgICAgKiDkuIDkuKrpg73kuI3lr7nvvIzpgqPkuYjnm7TmjqXlhpnkuIrplJnor69cclxuICAgICAqIOWvueS4gOS4qu+8jOmCo+S5iOebtOaOpeWGmeS4iuato+ehrlxyXG4gICAgICog5aaC5p6c5Lik5Liq55u45ZCM6YO95ZKMIHRoaXMuY2xpY2tzTmFtZUFyclswXeWMuemFje+8jOmCo+S5iOaIkeWPqumcgOimgeWIpOaWreS4gOS4quWwseihjFxyXG4gICAgICog5Zug5Li656ys5LqM5qyh54K55Ye755qE5pe25YCZ5Lya6KGl5LiK5qCH6K6wXHJcbiAgICAqL1xyXG4gICAgY2xpY2tPbmVDb21wYXJlTmFtZSgpOiB2b2lkIHtcclxuICAgICAgICBsZXQgbmFtZUFyciA9IFtdO1xyXG4gICAgICAgIGxldCBmaXJzdF9OYW1lOiBzdHJpbmcgPSBudWxsO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5jYW5keVBhcmVudC5fY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgbGV0IGNhbmR5ID0gdGhpcy5jYW5keVBhcmVudC5fY2hpbGRyZW5baV07XHJcbiAgICAgICAgICAgIGlmIChjYW5keVtcIkNhbmR5XCJdLmdyb3VwID09PSAodGhpcy5jbGlja3NDb3VudCAtIDEpIC8gMikgey8v5q+P54K55LiA5qyh5a+55bqU55qE57OW5p6c57uEXHJcbiAgICAgICAgICAgICAgICBpZiAoY2FuZHkubmFtZS5zdWJzdHJpbmcoMCwgMTEpID09PSB0aGlzLmNsaWNrc05hbWVBcnJbMF0pIHsgLy/lj6rliKTmlq3kuIDmrKHvvIznhLblkI7ov5Tlm55cclxuICAgICAgICAgICAgICAgICAgICBsZXQgbGFiZWxfMDEgPSBjYW5keS5nZXRDaGlsZEJ5TmFtZSgnY2xpY2tzTGFiZWwnKSBhcyBMYXlhLkxhYmVsO1xyXG4gICAgICAgICAgICAgICAgICAgIGxhYmVsXzAxLnRleHQgPSAn6YCJ5a+55LqGJztcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gbnVtYmVy55So5LqO6K6w5b2V56ys5Yeg5qyh5b6q546v77yM5pyA5aSa5Lik5qyh5b6q546vXHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZUFyci5wdXNoKGNhbmR5Lm5hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChuYW1lQXJyLmxlbmd0aCA9PT0gMikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDlvZNuYW1lQXJyLmxlbmd0aD0y55qE5pe25YCZ6K+05piO5LiA5Liq6YO95LiN5a+577yM6YKj5LmI55u05o6l57uT5p2f5pys57uEXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBmaXJzdENhbmR5ID0gdGhpcy5jYW5keVBhcmVudC5nZXRDaGlsZEJ5TmFtZShuYW1lQXJyWzBdKSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGxhYmVsXzAxID0gZmlyc3RDYW5keS5nZXRDaGlsZEJ5TmFtZSgnY2xpY2tzTGFiZWwnKSBhcyBMYXlhLkxhYmVsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgbGFiZWxfMDIgPSBjYW5keS5nZXRDaGlsZEJ5TmFtZSgnY2xpY2tzTGFiZWwnKSBhcyBMYXlhLkxhYmVsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbF8wMS50ZXh0ID0gJ+mAiemUmeS6hic7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsXzAyLnRleHQgPSAn6YCJ6ZSZ5LqGJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy/ph43mlrDliJ3lp4vljJbkuIvkuIDnu4RcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jbGlja3NOYW1lQXJyID0gW107XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2xpY2tzQ291bnQrKztcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5lcnJvck5hbWUucHVzaChuYW1lQXJyWzBdLCBuYW1lQXJyWzFdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hbHJlYWR5R3JvdXAucHVzaChjYW5keVtcIkNhbmR5XCJdLmdyb3VwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jbGlja0hpbnQoKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5o+Q56S65oiR5bqU6K+l54K55ZOq5LiA57uE5LqGXHJcbiAgICAgKiDov5nkuIDnu4Tnu5PmnZ/kuYvlkI7mj5DnpLrkuIvkuIDnu4RcclxuICAgICAqIOeEtuWQjui/meS4gOe7hOeahOaPkOekuua2iOWksVxyXG4gICAgKi9cclxuICAgIGNsaWNrSGludCgpOiB2b2lkIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuY2FuZHlQYXJlbnQuX2NoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCBwcmVzZW50R3JvdXAgPSB0aGlzLmFscmVhZHlHcm91cFt0aGlzLmFscmVhZHlHcm91cC5sZW5ndGggLSAxXTtcclxuICAgICAgICAgICAgbGV0IGNhbmR5ID0gdGhpcy5jYW5keVBhcmVudC5fY2hpbGRyZW5baV07XHJcbiAgICAgICAgICAgIGxldCBjYW5keUdyb3VwID0gY2FuZHlbJ0NhbmR5J10uZ3JvdXA7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmFscmVhZHlHcm91cC5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgICAgIGlmIChjYW5keUdyb3VwID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FuZHkuc2NhbGUoMS4xLCAxLjEpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaWYgKGNhbmR5R3JvdXAgPT09IHByZXNlbnRHcm91cCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNhbmR5LnNjYWxlKDEsIDEpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKGNhbmR5R3JvdXAgPT09IHByZXNlbnRHcm91cCArIDEpIHtcclxuICAgICAgICAgICAgICAgICAgICBjYW5keS5zY2FsZSgxLjEsIDEuMSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoq57uT566X77yM5b2TMTDkuKrpg73ngrnlh7vlrozmr5XlkI7vvIzmiafooYzlkIPns5bmnpzmtLvnnYDmmK/nvJbnqIvmlYzkurrnmoTliqjnlLsqL1xyXG4gICAgc2V0dGxlbWVudCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNldHRsZVN3aXRjaCA9IHRydWU7XHJcbiAgICAgICAgLy8g5q2j56Gu56e75Yqo5Yiw5Li76KeS5aSE5Yqg5bGe5oCnXHJcbiAgICAgICAgaWYgKHRoaXMucmlnaHROYW1lLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnJpZ2h0TmFtZS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgbGV0IGNhbmR5ID0gdGhpcy5jYW5keVBhcmVudC5nZXRDaGlsZEJ5TmFtZSh0aGlzLnJpZ2h0TmFtZVtpXSkgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgICAgICAgICBpZiAoY2FuZHkueCA8IExheWEuc3RhZ2Uud2lkdGggLyAyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FuZHlbJ0NhbmR5J10uY2FuZHlUYWdSb2xlID0gdGhpcy5tYWluU2NlbmVDb250cm9sLnJvbGVfMDE7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGNhbmR5WydDYW5keSddLmNhbmR5VGFnUm9sZSA9IHRoaXMubWFpblNjZW5lQ29udHJvbC5yb2xlXzAyO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIOmUmeivr+eahOWPmOaIkOaVjOS6ulxyXG4gICAgICAgIGlmICh0aGlzLmVycm9yTmFtZS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgdGhpcy5lcnJvck5hbWUubGVuZ3RoOyBqKyspIHtcclxuICAgICAgICAgICAgICAgIGxldCBjYW5keSA9IHRoaXMuY2FuZHlQYXJlbnQuZ2V0Q2hpbGRCeU5hbWUodGhpcy5lcnJvck5hbWVbal0pIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jYW5keWJlY29tZUVuZW15KGNhbmR5KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmFkZGl0aW9uQXdhcmQoKTtcclxuICAgICAgICAvLyDmuIXnqbpcclxuICAgICAgICB0aGlzLnJpZ2h0TmFtZSA9IFtdO1xyXG4gICAgICAgIHRoaXMuZXJyb3JOYW1lID0gW107XHJcbiAgICAgICAgdGhpcy5jbGlja3NDb3VudCA9IDA7XHJcbiAgICAgICAgdGhpcy5jbGlja3NOYW1lQXJyID0gW107XHJcbiAgICAgICAgdGhpcy5hbHJlYWR5R3JvdXAgPSBbXTtcclxuICAgIH1cclxuXHJcbiAgICAvKirmoLnmja7ov5vluqbmnaHliankvZnnmoTml7bpl7Tnu5nkuojlpZblirHliqDmiJBcclxuICAgICAqIOWIhuautee7meS6iOS4jeWQjOeahOWlluWKsVxyXG4gICAgKi9cclxuICAgIGFkZGl0aW9uQXdhcmQoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMudGltZVNjaGVkdWxlLnZhbHVlID4gMC43KSB7XHJcbiAgICAgICAgICAgIHRoaXMuY3JlYXRSZXdhcmRXb3Jkcygn56We6YCf77yBJyk7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnRpbWVTY2hlZHVsZS52YWx1ZSA+IDAuNSkge1xyXG4gICAgICAgICAgICB0aGlzLmNyZWF0UmV3YXJkV29yZHMoJ+elnumAn++8gScpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy50aW1lU2NoZWR1bGUudmFsdWUgPiAwLjMpIHtcclxuICAgICAgICAgICAgdGhpcy5jcmVhdFJld2FyZFdvcmRzKCfnpZ7pgJ/vvIEnKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKirmj5DnpLrlpZblirHmloflrZfnmoTliJvlu7oqL1xyXG4gICAgY3JlYXRSZXdhcmRXb3Jkcyh3b3JkKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHJld2FyZFdvcmRzID0gTGF5YS5Qb29sLmdldEl0ZW1CeUNyZWF0ZUZ1bigncmV3YXJkV29yZHMnLCB0aGlzLnJld2FyZFdvcmRzLmNyZWF0ZSwgdGhpcy5yZXdhcmRXb3JkcykgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgTGF5YS5zdGFnZS5hZGRDaGlsZChyZXdhcmRXb3Jkcyk7XHJcbiAgICAgICAgcmV3YXJkV29yZHNbJ1Jld2FyZFdvcmRzJ10uaW5pdFByb3BlcnR5KHdvcmQpO1xyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gICAgLyoq54K56ZSZ5ZCO77yM57OW5p6c6Lez5Yiw5Zyw5LiK5Y+Y5oiQMeS4quaVjOS6ulxyXG4gICAgICog6L+Z5Liq5pWM5Lq65piv6ZqP5py65Zyo5LiA5Liq6IyD5Zu05YaF5Ye655SfXHJcbiAgICAgKiBAcGFyYW0gY2FuZHkg6L+Z5Liq57OW5p6c55qE5L+h5oGvXHJcbiAgICAqL1xyXG4gICAgY2FuZHliZWNvbWVFbmVteShjYW5keTogTGF5YS5TcHJpdGUsICk6IHZvaWQge1xyXG4gICAgICAgIC8vIOW3puWPs+S4pOS4quaWueWQkVxyXG4gICAgICAgIGxldCBwb2ludDsvL+WbuuWumuWchuW/g+eCuVxyXG4gICAgICAgIGxldCBkaXJlY3Rpb247Ly/lt6blj7PvvIznlKjmnaXliKTmlq3kvY3nva7lkoxlbmVteVRhcmdldFxyXG4gICAgICAgIGxldCBlbmVteVRhcmdldDsvL+aUu+WHu+WvueixoVxyXG4gICAgICAgIC8vIOacgOe7iOS9jee9rlxyXG4gICAgICAgIGxldCBtb3ZlWDtcclxuICAgICAgICBsZXQgbW92ZVk7XHJcbiAgICAgICAgaWYgKGNhbmR5LnggPCBMYXlhLnN0YWdlLndpZHRoIC8gMikge1xyXG4gICAgICAgICAgICBkaXJlY3Rpb24gPSAnbGVmdCc7XHJcbiAgICAgICAgICAgIGVuZW15VGFyZ2V0ID0gdGhpcy5tYWluU2NlbmVDb250cm9sLnJvbGVfMDE7XHJcbiAgICAgICAgICAgIHBvaW50ID0gbmV3IExheWEuUG9pbnQoY2FuZHkueCAtIDE2MCwgY2FuZHkueSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZGlyZWN0aW9uID0gJ3JpZ2h0JztcclxuICAgICAgICAgICAgZW5lbXlUYXJnZXQgPSB0aGlzLm1haW5TY2VuZUNvbnRyb2wucm9sZV8wMjtcclxuICAgICAgICAgICAgcG9pbnQgPSBuZXcgTGF5YS5Qb2ludChjYW5keS54ICsgMTYwLCBjYW5keS55KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g6ZqP5py65Y+W54K55Ye95pWwXHJcbiAgICAgICAgbW92ZVggPSB0b29scy5nZXRSb3VuZFBvcyhNYXRoLnJhbmRvbSgpICogMzYwLCBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA0MCksIHBvaW50KS54O1xyXG4gICAgICAgIG1vdmVZID0gdG9vbHMuZ2V0Um91bmRQb3MoTWF0aC5yYW5kb20oKSAqIDM2MCwgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNDApLCBwb2ludCkueTtcclxuXHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byhjYW5keSwgeyB4OiBtb3ZlWCwgeTogbW92ZVkgfSwgNTAwLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy8g6Kem5Y+R5Li76KeS6aKE6K2m5bm255Sf5oiQMeS4quaVjOS6ulxyXG4gICAgICAgICAgICB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLnJvbGVfMDFbJ1JvbGUnXS5yb2xlX1dhcm5pbmcgPSB0cnVlO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLnJvbGVfMDJbJ1JvbGUnXS5yb2xlX1dhcm5pbmcgPSB0cnVlO1xyXG4gICAgICAgICAgICBsZXQgZW5lbXkgPSB0aGlzLm1haW5TY2VuZUNvbnRyb2wuY2FyZWF0RW5lbXkoZGlyZWN0aW9uLCBlbmVteVRhcmdldCwgJ3JhbmdlJyk7XHJcbiAgICAgICAgICAgIGVuZW15LnBvcyhjYW5keS54LCBjYW5keS55KTtcclxuICAgICAgICAgICAgY2FuZHkucmVtb3ZlU2VsZigpO1xyXG4gICAgICAgIH0sIFtdKSwgMCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq6K6h5pe25Zmo5o6n5Yi2XHJcbiAgICAgKiDlvZPml7bpl7TlsI/kuo7pm7bnmoTml7blgJnmiYDmnInov5jmsqHmnInngrnlh7vnmoTns5bmnpznm7TmjqXlj5jmiJDmlYzkurpcclxuICAgICAqIOW5tuS4lOe7k+eul++8jOmHjee9ruWxnuaAp1xyXG4gICAgKi9cclxuICAgIHRpbWVyQ29udHJvbCgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy50aW1lU2NoZWR1bGUudmFsdWUgPiAwICYmIHRoaXMuc2V0dGxlU3dpdGNoID09PSBmYWxzZSkge1xyXG4gICAgICAgICAgICB0aGlzLnRpbWVTY2hlZHVsZS52YWx1ZSAtPSAwLjAwMjtcclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMudGltZVNjaGVkdWxlLnZhbHVlIDw9IDAgJiYgdGhpcy5zZXR0bGVTd2l0Y2ggPT09IGZhbHNlKSB7XHJcbiAgICAgICAgICAgIC8vIOayoeacieeCueWHu+i/h+eahOWFqOmDqOWPmOaIkOaVjOS6uizlh4/ljrvngrnplJnnmoTns5bmnpzvvIzlkoxcclxuICAgICAgICAgICAgbGV0IGdyb3VwQXJyID0gWzAsIDEsIDIsIDMsIDRdXHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5hbHJlYWR5R3JvdXAubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgZ3JvdXBBcnIubGVuZ3RoOyBqKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5hbHJlYWR5R3JvdXBbaV0gPT09IGdyb3VwQXJyW2pdKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGdyb3VwQXJyLnNoaWZ0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIOaKiuayoeacieeCueWHu+eahOWPmOaIkOaVjOS6ulxyXG4gICAgICAgICAgICBmb3IgKGxldCBrID0gMDsgayA8IHRoaXMuY2FuZHlQYXJlbnQuX2NoaWxkcmVuLmxlbmd0aDsgaysrKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgY2FuZHkgPSB0aGlzLmNhbmR5UGFyZW50Ll9jaGlsZHJlbltrXSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGwgPSAwOyBsIDwgZ3JvdXBBcnIubGVuZ3RoOyBsKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoY2FuZHlbXCJDYW5keVwiXS5ncm91cCA9PT0gZ3JvdXBBcnJbbF0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jYW5keWJlY29tZUVuZW15KGNhbmR5KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8g54K55Ye76L+H55qE57uT566XXHJcbiAgICAgICAgICAgIHRoaXMuc2V0dGxlbWVudCgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKuaWsOW7uuezluaenO+8jOWIneWni+aNouWxnuaApyovXHJcbiAgICBpbml0Q2FuZHkoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5tYWluU2NlbmVDb250cm9sLmNyZWF0ZVdhdmVDYW5keXMoKTtcclxuICAgICAgICB0aGlzLmNsaWNrSGludCgpO1xyXG4gICAgICAgIHRoaXMuc2V0dGxlU3dpdGNoID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy50aW1lU2NoZWR1bGUudmFsdWUgPSAxO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuenu+WKqCovXHJcbiAgICBtb3ZlKGV2ZW50KTogdm9pZCB7XHJcbiAgICAgICAgaWYgKCF0aGlzLm9wZXJhdGlvblN3aXRjaCAmJiB0aGlzLnNldHRsZVN3aXRjaCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoq5oqs6LW3Ki9cclxuICAgIHVwKGV2ZW50KTogdm9pZCB7XHJcbiAgICAgICAgaWYgKCF0aGlzLm9wZXJhdGlvblN3aXRjaCAmJiB0aGlzLnNldHRsZVN3aXRjaCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuc2NhbGUoMSwgMSk7XHJcbiAgICB9XHJcbiAgICAvKirlh7rlsY/luZUqL1xyXG4gICAgb3V0KGV2ZW50KTogdm9pZCB7XHJcbiAgICAgICAgaWYgKCF0aGlzLm9wZXJhdGlvblN3aXRjaCAmJiB0aGlzLnNldHRsZVN3aXRjaCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuc2NhbGUoMSwgMSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25VcGRhdGUoKTogdm9pZCB7XHJcbiAgICAgICAgLy8g5Li76KeS5YWo6YOo5q275Lqh5ri45oiP57uT5p2fXHJcbiAgICAgICAgaWYgKHRoaXMubWFpblNjZW5lQ29udHJvbC5yb2xlUGFyZW50Ll9jaGlsZHJlbi5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgdGhpcy5vcGVyYXRpb25Td2l0Y2ggPSBmYWxzZTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy/orqHml7blmahcclxuICAgICAgICB0aGlzLnRpbWVyQ29udHJvbCgpO1xyXG5cclxuICAgICAgICAvLyDlpoLmnpzns5bmnpzooqvngrnlrozkuobvvIzpgqPkuYjph43mlrDnlJ/miJAxMOS4quezluaenFxyXG4gICAgICAgIGlmICh0aGlzLmNhbmR5UGFyZW50Ll9jaGlsZHJlbi5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgLy8g5paw5bu657OW5p6cXHJcbiAgICAgICAgICAgIHRoaXMuaW5pdENhbmR5KCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyDml7bpl7TliLDkuobmiY3lj6/ku6Xov5vooYzmk43kvZxcclxuICAgICAgICBpZiAodGhpcy5tYWluU2NlbmVDb250cm9sLnRpbWVyQ29udHJvbCA+IDIwMCkge1xyXG4gICAgICAgICAgICB0aGlzLm9wZXJhdGlvblN3aXRjaCA9IHRydWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICBvbkRpc2FibGUoKTogdm9pZCB7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBSZXdhcmRXb3JkcyBleHRlbmRzIExheWEuU2NyaXB0IHtcclxuICAgIC8qKuiHquW3sSovXHJcbiAgICBwcml2YXRlIHNlbGY6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq5aKe5Yqg5bGe5oCn5bGe5oCn5qCH562+Ki9cclxuICAgIHByaXZhdGUgd29yZDogTGF5YS5Gb250Q2xpcDtcclxuICAgIGNvbnN0cnVjdG9yKCkgeyBzdXBlcigpOyB9XHJcblxyXG4gICAgb25FbmFibGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZWxmID0gdGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICB0aGlzLnNlbGZbJ1Jld2FyZFdvcmRzJ10gPSB0aGlzO1xyXG4gICAgICAgIHRoaXMuc2VsZi5hbHBoYSA9IDA7Ly/lh7rnjrDnmoTml7blgJnpmpDouqvvvIzmlrnkvr/lgZrliqjnlLtcclxuICAgICAgICB0aGlzLnNlbGYueSA9IExheWEuc3RhZ2UuaGVpZ2h0IC8gMjtcclxuICAgICAgICB0aGlzLnNlbGYueCA9IDEyMDA7XHJcbiAgICAgICAgdGhpcy53b3JkID0gdGhpcy5zZWxmLmdldENoaWxkQnlOYW1lKCd3b3JkJykgYXMgTGF5YS5Gb250Q2xpcDtcclxuICAgIH1cclxuXHJcbiAgICAvKirpgJrov4fkvKDlhaXnmoTlj4LmlbDmnaXvvIzorr7nva7lsZ7mgKflm77niYflrZfnmoTmoLzlvI9cclxuICAgICAqIEBwYXJhbSB3b3JkIOWFt+S9k+Wtl+agt1xyXG4gICAgICogKi9cclxuICAgIGluaXRQcm9wZXJ0eSh3b3JkOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLndvcmQudmFsdWUgPSB3b3JkO1xyXG5cclxuICAgICAgICB0aGlzLlJld2FyZFdvcmRzTW92ZSgpO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKirpo5jlrZfliqjnlLvml7bpl7Tnur8qL1xyXG4gICAgUmV3YXJkV29yZHNNb3ZlKCk6IHZvaWQge1xyXG4gICAgICAgIGxldCB0aW1lTGluZSA9IG5ldyBMYXlhLlRpbWVMaW5lO1xyXG4gICAgICAgIHRpbWVMaW5lLmFkZExhYmVsKCdhcHBlYXInLCAwKS50byh0aGlzLnNlbGYsIHsgeDogTGF5YS5zdGFnZS53aWR0aCAvIDIsIGFscGhhOiAxIH0sIDMwMCwgbnVsbCwgMClcclxuICAgICAgICAgICAgLmFkZExhYmVsKCdwYXVzZScsIDApLnRvKHRoaXMuc2VsZiwgeyB4OiBMYXlhLnN0YWdlLndpZHRoIC8gMiB9LCA4MDAsIG51bGwsIDApXHJcbiAgICAgICAgICAgIC5hZGRMYWJlbCgndmFuaXNoXzAxJywgMCkudG8odGhpcy5zZWxmLCB7IHg6IExheWEuc3RhZ2Uud2lkdGggLyAyIC0gMTAwIH0sIDEwMCwgbnVsbCwgMClcclxuICAgICAgICAgICAgLmFkZExhYmVsKCd2YW5pc2hfMDInLCAwKS50byh0aGlzLnNlbGYsIHsgeDogLTEyMDAgfSwgMzAwLCBudWxsLCAwKVxyXG4gICAgICAgIHRpbWVMaW5lLnBsYXkoJ2FwcGVhcicsIGZhbHNlKTtcclxuICAgICAgICB0aW1lTGluZS5vbihMYXlhLkV2ZW50LkNPTVBMRVRFLCB0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi5yZW1vdmVTZWxmKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25EaXNhYmxlKCk6IHZvaWQge1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IE1haW5TY2VuZUNvbnRyb2wgZnJvbSBcIi4vTWFpblNjZW5lQ29udHJvbFwiO1xyXG5pbXBvcnQgQ2FuZHkgZnJvbSBcIi4vQ2FuZHlcIjtcclxuaW1wb3J0IEJ1bGxldCBmcm9tIFwiLi9Sb2xlQnVsbGV0XCI7XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJvbGUgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XHJcbiAgICAvKiogQHByb3Age25hbWU6YnVsbGV0UGFyZW50LCB0aXBzOlwi5a2Q5by554i26IqC54K5XCIsIHR5cGU6Tm9kZX0qL1xyXG4gICAgcHVibGljIGJ1bGxldFBhcmVudDogTGF5YS5TcHJpdGU7XHJcbiAgICAvKiogQHByb3Age25hbWU6cm9sZUJ1bGxldCwgdGlwczpcIuWtkOW8uVwiLCB0eXBlOlByZWZhYn0qL1xyXG4gICAgcHVibGljIHJvbGVCdWxsZXQ6IExheWEuUHJlZmFiO1xyXG5cclxuICAgIC8qKuiHquW3sSovXHJcbiAgICBwcml2YXRlIHNlbGY6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq5omA5bGe5Zy65pmvKi9cclxuICAgIHByaXZhdGUgc2VsZlNjZW5lOiBMYXlhLlNjZW5lO1xyXG4gICAgLyoq5Zy65pmv6ISa5pys57uE5Lu2Ki9cclxuICAgIHByaXZhdGUgbWFpblNjZW5lQ29udHJvbDtcclxuICAgIC8qKuezluaenOeItuiKgueCuSovXHJcbiAgICBwcml2YXRlIGNhbmR5UGFyZW50OiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuiHquW3seeahOihgOmHjyovXHJcbiAgICBwcml2YXRlIHNlbGZIZWFsdGg6IExheWEuUHJvZ3Jlc3NCYXI7XHJcbiAgICAvKirooYDph4/mmL7npLrmloflrZcqL1xyXG4gICAgcHJpdmF0ZSBibG9vZExhYmVsOiBMYXlhLkxhYmVsO1xyXG4gICAgLyoq5bGe5oCn5bGV56S65qGGKi9cclxuICAgIHByaXZhdGUgcHJvcGVydHlTaG93OiBMYXlhLkltYWdlO1xyXG5cclxuICAgIC8qKuS4u+inkuWxnuaApyovXHJcbiAgICBwcml2YXRlIHJvbGVfcHJvcGVydHk6IGFueTtcclxuXHJcbiAgICAvKirmlYzkurrpooTorabvvIzlj6ropoHmlYzkurrov5vlhaXlsITnqIvlsLHkvJrop6blj5HorabmiqUqL1xyXG4gICAgcHJpdmF0ZSByb2xlX1dhcm5pbmc6IGJvb2xlYW47XHJcbiAgICAvKirkuKTkuKrlvZPliY3liJvlu7rml7bpl7TorrDlvZUqL1xyXG4gICAgcHJpdmF0ZSBub3dUaW1lOiBudW1iZXI7XHJcbiAgICAvKirlvpfliIbmmL7npLoqL1xyXG4gICAgcHVibGljIHNjb3JlTGFiZWw6IExheWEuTGFiZWw7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7IHN1cGVyKCk7IH1cclxuXHJcbiAgICBvbkVuYWJsZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmluaXRQcm9wZXJ0eSgpO1xyXG4gICAgICAgIHRoaXMuYnVja2V0Q2xpbmsoKTtcclxuICAgICAgICB0aGlzLnJvbGVQcm9wZXJ0eVNldCgpO1xyXG4gICAgfVxyXG4gICAgLyoq5Yid5aeL5YyWKi9cclxuICAgIGluaXRQcm9wZXJ0eSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNlbGYgPSB0aGlzLm93bmVyIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMuc2VsZkhlYWx0aCA9IHRoaXMuc2VsZi5nZXRDaGlsZEJ5TmFtZSgnaGVhbHRoJykgYXMgTGF5YS5Qcm9ncmVzc0JhcjtcclxuICAgICAgICB0aGlzLnByb3BlcnR5U2hvdyA9IHRoaXMuc2VsZi5nZXRDaGlsZEJ5TmFtZSgncHJvcGVydHlTaG93JykgYXMgTGF5YS5JbWFnZTtcclxuICAgICAgICAvLyDpu5jorqTlsZ7mgKfkuI3lj6/op4FcclxuICAgICAgICB0aGlzLnByb3BlcnR5U2hvdy5hbHBoYSA9IDA7XHJcblxyXG4gICAgICAgIHRoaXMuYmxvb2RMYWJlbCA9IHRoaXMuc2VsZkhlYWx0aC5nZXRDaGlsZEJ5TmFtZSgnYmxvb2RMYWJlbCcpIGFzIExheWEuTGFiZWw7XHJcbiAgICAgICAgdGhpcy5zZWxmWydSb2xlJ10gPSB0aGlzO1xyXG5cclxuICAgICAgICB0aGlzLnNlbGZTY2VuZSA9IHRoaXMuc2VsZi5zY2VuZSBhcyBMYXlhLlNjZW5lO1xyXG4gICAgICAgIHRoaXMubWFpblNjZW5lQ29udHJvbCA9IHRoaXMuc2VsZlNjZW5lLmdldENvbXBvbmVudChNYWluU2NlbmVDb250cm9sKTsvL+WcuuaZr+iEmuacrOe7hOS7tlxyXG4gICAgICAgIHRoaXMuY2FuZHlQYXJlbnQgPSB0aGlzLm1haW5TY2VuZUNvbnRyb2wuY2FuZHlQYXJlbnQ7XHJcbiAgICAgICAgdGhpcy5zY29yZUxhYmVsID0gdGhpcy5tYWluU2NlbmVDb250cm9sLnNjb3JlTGFiZWw7XHJcbiAgICAgICAgdGhpcy5ub3dUaW1lID0gRGF0ZS5ub3coKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirkuLvop5LnmoTlsZ7mgKdcclxuICAgICAq5Lik5Liq5Li76KeS5bGe5oCn5YiG5Yir6K6h566XXHJcbiAgICAgKuWbm+S4quWxnuaAp+S+neasoeaYr++8jOeUn+WRveWAvO+8jOWtkOW8ueaUu+WHu+WKm++8jOWtkOW8ueWPkeWwhOmikeeOh+WSjOW8uemBk+mAn+W6pu+8jOmYsuW+oeiDveWKm1xyXG4gICAgKi9cclxuICAgIHJvbGVQcm9wZXJ0eVNldCgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5zZWxmLm5hbWUgPT09ICdyb2xlXzAxJykge1xyXG4gICAgICAgICAgICB0aGlzLnJvbGVfcHJvcGVydHkgPSB7XHJcbiAgICAgICAgICAgICAgICBibG9vZDogMjAwMCxcclxuICAgICAgICAgICAgICAgIGF0dGFja1ZhbHVlOiAyMCxcclxuICAgICAgICAgICAgICAgIGF0dGFja1NwZWVkOiAxMDAsXHJcbiAgICAgICAgICAgICAgICBkZWZlbnNlOiAxNSxcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuc2VsZi5uYW1lID09PSAncm9sZV8wMicpIHtcclxuICAgICAgICAgICAgdGhpcy5yb2xlX3Byb3BlcnR5ID0ge1xyXG4gICAgICAgICAgICAgICAgYmxvb2Q6IDIwMDAsXHJcbiAgICAgICAgICAgICAgICBhdHRhY2tWYWx1ZTogMjAsXHJcbiAgICAgICAgICAgICAgICBhdHRhY2tTcGVlZDogNTAwLFxyXG4gICAgICAgICAgICAgICAgZGVmZW5zZTogMTUsXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKuWxnuaAp+WunuaXtuWIt+aWsOWIt+aWsCovXHJcbiAgICB1cGRhdGVQcm9wZXJ0eSgpOiB2b2lkIHtcclxuICAgICAgICAvLyDooYDmnaHkuIrnmoTooYDph4/mmL7npLrjgIFcclxuICAgICAgICB0aGlzLmJsb29kTGFiZWwudGV4dCA9IHRoaXMucm9sZV9wcm9wZXJ0eS5ibG9vZDtcclxuICAgICAgICAvLyDlsZ7mgKfmmL7npLrmoYblhoXnmoTlsZ7mgKfmmL7npLpcclxuICAgICAgICAvLyDooYDph49cclxuICAgICAgICBsZXQgYmxvb2QgPSB0aGlzLnByb3BlcnR5U2hvdy5nZXRDaGlsZEJ5TmFtZSgnYmxvb2QnKSBhcyBMYXlhLkxhYmVsO1xyXG4gICAgICAgIGJsb29kLnRleHQgPSBcIuihgOmHjzogXCIgKyB0aGlzLnJvbGVfcHJvcGVydHkuYmxvb2Q7XHJcbiAgICAgICAgLy8g5pS75Ye75YqbXHJcbiAgICAgICAgbGV0IGF0dGFja1ZhbHVlID0gdGhpcy5wcm9wZXJ0eVNob3cuZ2V0Q2hpbGRCeU5hbWUoJ2F0dGFja1ZhbHVlJykgYXMgTGF5YS5MYWJlbDtcclxuICAgICAgICBhdHRhY2tWYWx1ZS50ZXh0ID0gXCLmlLvlh7vlips6IFwiICsgdGhpcy5yb2xlX3Byb3BlcnR5LmF0dGFja1ZhbHVlO1xyXG4gICAgICAgIC8vIOaUu+WHu+mAn+W6plxyXG4gICAgICAgIGxldCBhdHRhY2tTcGVlZCA9IHRoaXMucHJvcGVydHlTaG93LmdldENoaWxkQnlOYW1lKCdhdHRhY2tTcGVlZCcpIGFzIExheWEuTGFiZWw7XHJcbiAgICAgICAgYXR0YWNrU3BlZWQudGV4dCA9IFwi5pS75Ye76YCf5bqmOiBcIiArIHRoaXMucm9sZV9wcm9wZXJ0eS5hdHRhY2tTcGVlZDtcclxuICAgICAgICAvLyDpmLLlvqHliptcclxuICAgICAgICBsZXQgZGVmZW5zZSA9IHRoaXMucHJvcGVydHlTaG93LmdldENoaWxkQnlOYW1lKCdkZWZlbnNlJykgYXMgTGF5YS5MYWJlbDtcclxuICAgICAgICBkZWZlbnNlLnRleHQgPSBcIumYsuW+oeWKmzogXCIgKyB0aGlzLnJvbGVfcHJvcGVydHkuZGVmZW5zZTtcclxuICAgIH1cclxuXHJcbiAgICAvKirkuLvop5LnmoTngrnlh7vkuovku7ZcclxuICAgICAqIOWSjOmVv+aMieWHuueOsOWxnuaAp+WxleekuumhtemdolxyXG4gICAgICog5ruR5Yqo5Y+v5Lul5ouW5Yqo5Li76KeS5Yiw6KeE5a6a55qE5L2N572uXHJcbiAgICAqL1xyXG4gICAgYnVja2V0Q2xpbmsoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZWxmLm9uKExheWEuRXZlbnQuTU9VU0VfRE9XTiwgdGhpcywgdGhpcy5kb3duKTtcclxuICAgICAgICB0aGlzLnNlbGYub24oTGF5YS5FdmVudC5NT1VTRV9NT1ZFLCB0aGlzLCB0aGlzLm1vdmUpO1xyXG4gICAgICAgIHRoaXMuc2VsZi5vbihMYXlhLkV2ZW50Lk1PVVNFX1VQLCB0aGlzLCB0aGlzLnVwKTtcclxuICAgICAgICB0aGlzLnNlbGYub24oTGF5YS5FdmVudC5NT1VTRV9PVVQsIHRoaXMsIHRoaXMub3V0KTtcclxuICAgIH1cclxuICAgIC8qKuaMieS4iyznu5nkuojnm67moIfkvY3nva7vvIzns5bmnpzotbDlkJHnm67moIfkvY3nva47XHJcbiAgICAgKiDlubbkuJTliIbmlbDlop7liqAqL1xyXG4gICAgZG93bihldmVudCk6IHZvaWQge1xyXG4gICAgfVxyXG4gICAgLyoq56e75YqoKi9cclxuICAgIG1vdmUoZXZlbnQpOiB2b2lkIHtcclxuICAgIH1cclxuICAgIC8qKuaKrOi1tyovXHJcbiAgICB1cCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNlbGYuc2NhbGUoMSwgMSk7XHJcbiAgICB9XHJcbiAgICAvKirlh7rlsY/luZUqL1xyXG4gICAgb3V0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc2VsZi5zY2FsZSgxLCAxKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirliJvlu7rkuLvop5LlrZDlvLlcclxuICAgICAqIOS4u+inkjHkvY3nva7nmoTlrZDlvLlcclxuICAgICovXHJcbiAgICBjYXJlYXRCdWxsZXQoKSB7XHJcbiAgICAgICAgbGV0IGJ1bGxldCA9IExheWEuUG9vbC5nZXRJdGVtQnlDcmVhdGVGdW4oJ3JvbGVCdWxsZXQnLCB0aGlzLnJvbGVCdWxsZXQuY3JlYXRlLCB0aGlzLnJvbGVCdWxsZXQpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMuYnVsbGV0UGFyZW50LmFkZENoaWxkKGJ1bGxldCk7XHJcbiAgICAgICAgYnVsbGV0LnBvcyh0aGlzLnNlbGYueCwgdGhpcy5zZWxmLnkpO1xyXG4gICAgICAgIHRoaXMubG9ja2VkQnVsbGV0VGFyZ2V0KGJ1bGxldCk7XHJcbiAgICAgICAgYnVsbGV0WydCdWxsZXQnXS5iZWxvbmdSb2xlID0gdGhpcy5zZWxmO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKumUgeWumuacgOi/keeahOmCo+S4quaVjOS6ulxyXG4gICAgKiDlpoLmnpzmsqHmnInmlYzkurrvvIzkuJTlsY/luZXkuIrmlYzkurrlrZjlnKjvvIzpgqPkuYjkvJrplIHlrprkuIDkuKrmlYzkurpcclxuICAgICog5bem5Y+z5Yik5pat5Y6f5YiZ5piv77yM5aaC5p6c5piv5bem6L656KeS6Imy5Y+R5bCE5a2Q5by577yM6YKj5LmI5YWI6KeC5a+f5bem6L655pyJ5rKh5pyJ5pWM5Lq677yM5aaC5p6c5pyJ6YKj5LmI5LyY5YWI5pS75Ye75bem6L65XHJcbiAgICovXHJcbiAgICBsb2NrZWRCdWxsZXRUYXJnZXQoYnVsbGV0KTogdm9pZCB7XHJcbiAgICAgICAgLy8g5Lik54K55LmL6Ze055qE6Led56a75pWw57uEXHJcbiAgICAgICAgbGV0IGRpc3RhbmNlQXJyOiBBcnJheTxhbnk+ID0gW107XHJcbiAgICAgICAgbGV0IGVuZW15UGFyZW50ID0gdGhpcy5tYWluU2NlbmVDb250cm9sLmVuZW15UGFyZW50O1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZW5lbXlQYXJlbnQuX2NoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCBlbmVteSA9IGVuZW15UGFyZW50Ll9jaGlsZHJlbltpXSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICAgICAgLy/kuKTngrnkuYvpl7TnmoTot53nprtcclxuICAgICAgICAgICAgbGV0IGR4OiBudW1iZXIgPSBlbmVteS54IC0gdGhpcy5zZWxmLng7XHJcbiAgICAgICAgICAgIGxldCBkeTogbnVtYmVyID0gZW5lbXkueSAtIHRoaXMuc2VsZi55O1xyXG4gICAgICAgICAgICBsZXQgZGlzdGFuY2U6IG51bWJlciA9IE1hdGguc3FydChkeCAqIGR4ICsgZHkgKiBkeSk7XHJcbiAgICAgICAgICAgIGxldCBvYmplY3QgPSB7XHJcbiAgICAgICAgICAgICAgICBkaXN0YW5jZTogZGlzdGFuY2UsXHJcbiAgICAgICAgICAgICAgICBuYW1lOiBlbmVteS5uYW1lXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZGlzdGFuY2VBcnIucHVzaChvYmplY3QpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyDot53nprvmjpLluo9cclxuICAgICAgICB2YXIgY29tcGFyZSA9IGZ1bmN0aW9uIChvYmoxLCBvYmoyKSB7XHJcbiAgICAgICAgICAgIHZhciB2YWwxID0gb2JqMS5kaXN0YW5jZTtcclxuICAgICAgICAgICAgdmFyIHZhbDIgPSBvYmoyLmRpc3RhbmNlO1xyXG4gICAgICAgICAgICBpZiAodmFsMSA8IHZhbDIpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAtMTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmICh2YWwxID4gdmFsMikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIDE7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAvLyDmib7lh7rot53nprvmnIDov5HnmoRcclxuICAgICAgICBkaXN0YW5jZUFyci5zb3J0KGNvbXBhcmUpO1xyXG4gICAgICAgIGlmIChkaXN0YW5jZUFyci5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGJ1bGxldFsnQnVsbGV0J10uYnVsbGV0VGFyZ2V0ID0gZW5lbXlQYXJlbnQuZ2V0Q2hpbGRCeU5hbWUoZGlzdGFuY2VBcnJbMF0ubmFtZSkgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uVXBkYXRlKCk6IHZvaWQge1xyXG4gICAgICAgIC8vIOihgOmHj+S9juS6jjDliJnmrbvkuqFcclxuICAgICAgICBpZiAodGhpcy5yb2xlX3Byb3BlcnR5LmJsb29kIDw9IDApIHtcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnJlbW92ZVNlbGYoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g5Yi35paw5bGe5oCnXHJcbiAgICAgICAgdGhpcy51cGRhdGVQcm9wZXJ0eSgpO1xyXG5cclxuICAgICAgICAvL+WIm+W7uuWtkOW8uVxyXG4gICAgICAgIGlmICh0aGlzLnJvbGVfV2FybmluZykge1xyXG4gICAgICAgICAgICBsZXQgbm93VGltZSA9IERhdGUubm93KCk7XHJcbiAgICAgICAgICAgIGlmIChub3dUaW1lIC0gdGhpcy5ub3dUaW1lID4gdGhpcy5yb2xlX3Byb3BlcnR5LmF0dGFja1NwZWVkKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNhcmVhdEJ1bGxldCgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5ub3dUaW1lID0gbm93VGltZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIG9uRGlzYWJsZSgpOiB2b2lkIHtcclxuXHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgTWFpblNjZW5lQ29udHJvbCBmcm9tIFwiLi9NYWluU2NlbmVDb250cm9sXCI7XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJ1bGxldCBleHRlbmRzIExheWEuU2NyaXB0IHtcclxuICAgIC8qKuiHquW3sSovXHJcbiAgICBwcml2YXRlIHNlbGY6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq5omA5bGe5Zy65pmvKi9cclxuICAgIHByaXZhdGUgc2VsZlNjZW5lOiBMYXlhLlNjZW5lO1xyXG4gICAgLyoq5Li76KeS54i26IqC54K5Ki9cclxuICAgIHByaXZhdGUgcm9sZVBhcmVudDogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirkuLvop5IxKi9cclxuICAgIHByaXZhdGUgcm9sZV8wMTogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirkuLvop5IyKi9cclxuICAgIHByaXZhdGUgcm9sZV8wMjogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirlnLrmma/ohJrmnKwqL1xyXG4gICAgcHJpdmF0ZSBtYWluU2NlbmVDb250cm9sO1xyXG4gICAgLyoq5oCq54mp54i26IqC54K5Ki9cclxuICAgIHByaXZhdGUgZW5lbXlQYXJlbnQ6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq5a2Q5by56YCf5bqmKi9cclxuICAgIHByaXZhdGUgc2VsZlNwZWVkOiBudW1iZXI7XHJcbiAgICAvKirov5nkuKrlrZDlvLnlsZ7kuo7lk6rkuKrkuLvop5Llj5HlsITnmoQqL1xyXG4gICAgcHJpdmF0ZSBiZWxvbmdSb2xlOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuebruagh++8jOi/meS4quebruagh+aYr+acgOi/keeahOmCo+S4quaVjOS6uiovXHJcbiAgICBwcml2YXRlIGJ1bGxldFRhcmdldDogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirmlLvlh7vlipsqL1xyXG4gICAgcHJpdmF0ZSBhdHRhY2tWYWx1ZTogbnVtYmVyO1xyXG5cclxuICAgIC8qKuWxnuaAp+mjmOWtl+aPkOekuiovXHJcbiAgICBwcml2YXRlIGhpbnRXb3JkOiBMYXlhLlByZWZhYjtcclxuXHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7IHN1cGVyKCk7IH1cclxuXHJcbiAgICBvbkVuYWJsZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmluaXQoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirliJ3lp4vljJbkuIDkupvlsZ7mgKcqL1xyXG4gICAgaW5pdCgpIHtcclxuICAgICAgICB0aGlzLnNlbGYgPSB0aGlzLm93bmVyIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMuc2VsZlNjZW5lID0gdGhpcy5zZWxmLnNjZW5lO1xyXG4gICAgICAgIHRoaXMubWFpblNjZW5lQ29udHJvbCA9IHRoaXMuc2VsZlNjZW5lLmdldENvbXBvbmVudChNYWluU2NlbmVDb250cm9sKTtcclxuICAgICAgICB0aGlzLmVuZW15UGFyZW50ID0gdGhpcy5tYWluU2NlbmVDb250cm9sLmVuZW15UGFyZW50O1xyXG4gICAgICAgIHRoaXMuaGludFdvcmQgPSB0aGlzLm1haW5TY2VuZUNvbnRyb2wuaGludFdvcmQ7XHJcbiAgICAgICAgdGhpcy5zZWxmU3BlZWQgPSAxNTtcclxuICAgICAgICAvLyDlsZ7mgKfotYvlgLxcclxuICAgICAgICB0aGlzLnJvbGVfMDEgPSB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLnJvbGVfMDE7XHJcbiAgICAgICAgdGhpcy5hdHRhY2tWYWx1ZSA9IHRoaXMucm9sZV8wMVsnUm9sZSddLnJvbGVfcHJvcGVydHkuYXR0YWNrVmFsdWU7XHJcbiAgICAgICAgdGhpcy5zZWxmWydCdWxsZXQnXSA9IHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5a2Q5by556e75YqoXHJcbiAgICAgKiDlrZDlvLnlj6rmnInlvZPnm67moIflr7nosaHlkoznm67moIflr7nosaHlnKjniLboioLngrnlhoXnmoTml7blgJnmiY3kvJrnp7vliqhcclxuICAgICAqIOebruagh+WvueixoeawuOi/nOWtmOWcqO+8jOWPquS4jei/h+S7luiiq+enu+mZpOS6hu+8jOaJgOS7pWJ1bGxldFRhcmdldOawuOS4jeS4uuepuu+8jOWPquiDveWIpOaWreeItuiKgueCueaYr+WQpuWtmOWcqFxyXG4gICAgICog6Iul5p6c6L+Z5Liq55uu5qCH6KKr56e76Zmk5LqG77yM6YKj5LmI5Y+R5Ye65Y6755qE5a2Q5by55Lya5rK/552A5ZKM5Li76KeS55qE5pa55ZCR57un57ut56e75Yqo5YiwNTAw77ybXHJcbiAgICAqL1xyXG4gICAgYnVsbGV0TW92ZSgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5idWxsZXRUYXJnZXQgJiYgdGhpcy5idWxsZXRUYXJnZXQucGFyZW50KSB7XHJcbiAgICAgICAgICAgIC8vIHgseeWIhuWIq+ebuOWHj+aYr+S4pOeCuei/nue6v+WQkemHj1xyXG4gICAgICAgICAgICBsZXQgcG9pbnQgPSBuZXcgTGF5YS5Qb2ludCh0aGlzLmJ1bGxldFRhcmdldC54IC0gdGhpcy5zZWxmLngsIHRoaXMuYnVsbGV0VGFyZ2V0LnkgLSB0aGlzLnNlbGYueSk7XHJcbiAgICAgICAgICAgIC8vIOW9kuS4gOWMlu+8jOWQkemHj+mVv+W6puS4ujHjgIJcclxuICAgICAgICAgICAgcG9pbnQubm9ybWFsaXplKCk7XHJcbiAgICAgICAgICAgIC8v5ZCR6YeP55u45YqgXHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi54ICs9IHBvaW50LnggKiB0aGlzLnNlbGZTcGVlZDtcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnkgKz0gcG9pbnQueSAqIHRoaXMuc2VsZlNwZWVkO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIOayv+edgOiHquW3seWSjOWPkeWwhOiHquW3seeahOS4u+inkuaWueWQkeenu+WKqFxyXG4gICAgICAgICAgICBsZXQgcG9pbnQgPSBuZXcgTGF5YS5Qb2ludCh0aGlzLnNlbGYueCAtIHRoaXMuYmVsb25nUm9sZS54LCB0aGlzLnNlbGYueSAtIHRoaXMuYmVsb25nUm9sZS55KTtcclxuICAgICAgICAgICAgLy8g5b2S5LiA5YyW77yM5ZCR6YeP6ZW/5bqm5Li6MeOAglxyXG4gICAgICAgICAgICBwb2ludC5ub3JtYWxpemUoKTtcclxuICAgICAgICAgICAgLy/lkJHph4/nm7jliqBcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnggKz0gcG9pbnQueCAqIHRoaXMuc2VsZlNwZWVkO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYueSArPSBwb2ludC55ICogdGhpcy5zZWxmU3BlZWQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uVXBkYXRlKCk6IHZvaWQge1xyXG4gICAgICAgIC8vIOenu+WKqFxyXG4gICAgICAgIHRoaXMuYnVsbGV0TW92ZSgpO1xyXG4gICAgICAgIC8vIOi2heWHuuaoquWQkeiMg+WbtOa2iOWkse+8jOS4gOiIrOS4jeS8muinpuWPkVxyXG4gICAgICAgIGlmICh0aGlzLnNlbGYueCA+IDc1MCArIHRoaXMuc2VsZi53aWR0aCArIDUwIHx8IHRoaXMuc2VsZi54IDwgLXRoaXMuc2VsZi53aWR0aCkge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYucmVtb3ZlU2VsZigpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyDlsITnqIvkuLo1MDDvvIzotoXov4flsITnqIvmtojlpLFcclxuICAgICAgICBpZiAodGhpcy5zZWxmLnkgPD0gTGF5YS5zdGFnZS53aWR0aCAqIDEgLyAzKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi5yZW1vdmVTZWxmKCk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g56Kw5Yiw5Lu75L2V5LiA5Liq5oCq54mp77yM5a2Q5by55raI5aSx5oCq54mp5o6J6KGAXHJcbiAgICAgICAgLy8g5a2Q5by55Ye75Lit5oCq54mp5oCq54mp5Lya5ZCO6YCAXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmVuZW15UGFyZW50Ll9jaGlsZHJlbi5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBsZXQgZW5lbXkgPSB0aGlzLmVuZW15UGFyZW50Ll9jaGlsZHJlbltpXSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICAgICAgbGV0IGRpZmZlcmVuY2VYID0gTWF0aC5hYnMoZW5lbXkueCAtIHRoaXMuc2VsZi54KTtcclxuICAgICAgICAgICAgbGV0IGRpZmZlcmVuY2VZID0gTWF0aC5hYnMoZW5lbXkueSAtIHRoaXMuc2VsZi55KTtcclxuICAgICAgICAgICAgaWYgKGRpZmZlcmVuY2VYIDwgMTAgJiYgZGlmZmVyZW5jZVkgPCAxMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5idWxsZXRBdHRhY2tSdWxlcyhlbmVteSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGYucmVtb3ZlU2VsZigpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKuWtkOW8ueWvueaVjOS6uumAoOaIkOS8pOWus+eahOWFrOW8j1xyXG4gICAgICog5a2Q5by55Ye75Lit5pWM5Lq677yM5pWM5Lq65Lya6KKr5Ye76YCAXHJcbiAgICAgICog5pS75Ye75YqbLeaVjOS6uumYsuW+oeWmguaenOWkp+S6jumbtuWImemAoOaIkOS8pOWus++8jOWQpuWImeS4jemAoOaIkOS8pOWus1xyXG4gICAgICAqIOaOieihgOaYvuekuuWAvO+8jOS8pOWus+Wwj+S6jumbtuWImeaYvuekujBcclxuICAgICAgKiDlubbkuJTmnInliqjnlLvmj5DnpLrmloflrZdcclxuICAgICAqL1xyXG4gICAgYnVsbGV0QXR0YWNrUnVsZXMoZW5lbXkpOiB2b2lkIHtcclxuICAgICAgICAvLyDpgJrov4fmlLvlh7vlipvorqHnrpfmjonooYDnirblhrVcclxuICAgICAgICBsZXQgZGFtYWdlID0gdGhpcy5hdHRhY2tWYWx1ZSAtIGVuZW15WydFbmVteSddLmVuZW15UHJvcGVydHkuZGVmZW5zZTtcclxuICAgICAgICBpZiAoZGFtYWdlID4gMCkge1xyXG4gICAgICAgICAgICBlbmVteVsnRW5lbXknXS5lbmVteVByb3BlcnR5LmJsb29kIC09IGRhbWFnZTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBkYW1hZ2UgPSAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyDpo5jlrZdcclxuICAgICAgICB0aGlzLmhpbnRXb3JkTW92ZShlbmVteSwgZGFtYWdlKTtcclxuICAgICAgICAvLyDop6blj5Hlh7vpgIBcclxuICAgICAgICBlbmVteVsnRW5lbXknXS5yZXBlbFRpbWVyID0gMjtcclxuICAgIH1cclxuXHJcbiAgICBoaW50V29yZE1vdmUoZW5lbXk6IExheWEuU3ByaXRlLCBkYW1hZ2U6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICAgIC8vIOaVjOS6uuiiq+a2iOeBreS6hu+8jOWImeS4jeaJp+ihjOi/meS4qlxyXG4gICAgICAgIGlmIChlbmVteS5wYXJlbnQgPT09IG51bGwpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyDliJvlu7rmj5DnpLrliqjnlLvlr7nosaFcclxuICAgICAgICBsZXQgaGludFdvcmQgPSBMYXlhLlBvb2wuZ2V0SXRlbUJ5Q3JlYXRlRnVuKCdjYW5keScsIHRoaXMuaGludFdvcmQuY3JlYXRlLCB0aGlzLmhpbnRXb3JkKSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICBoaW50V29yZC5wb3MoMTAwLCAtMTUwKTtcclxuICAgICAgICBlbmVteS5hZGRDaGlsZChoaW50V29yZCk7XHJcbiAgICAgICAgbGV0IHByb1BlcnR5VHlwZTogc3RyaW5nID0gJ+S4u+inkuaOieihgCc7XHJcbiAgICAgICAgbGV0IG51bWJlclZhbHVlOiBudW1iZXI7XHJcbiAgICAgICAgaGludFdvcmRbJ0hpbnRXb3JkJ10uaW5pdFByb3BlcnR5KHByb1BlcnR5VHlwZSwgZGFtYWdlKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkRpc2FibGUoKTogdm9pZCB7XHJcbiAgICAgICAgTGF5YS5Qb29sLnJlY292ZXIoJ2J1bGxldCcsIHRoaXMuc2VsZik7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTdXNwZW5kIGV4dGVuZHMgTGF5YS5TY3JpcHQge1xyXG4gICAgLyoq6Ieq5bexKi9cclxuICAgIHByaXZhdGUgc2VsZjogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirmiYDlsZ7lnLrmma8qL1xyXG4gICAgcHJpdmF0ZSBzZWxmU2NlbmU6IExheWEuU2NlbmU7XHJcbiAgICAvKirlnLrmma/ohJrmnKznu4Tku7YqL1xyXG4gICAgcHJpdmF0ZSBtYWluU2NlbmVDb250cm9sO1xyXG4gICAgLyoq5piv5ZCm5aSE5LqO5pqC5YGc54q25oCBKi9cclxuICAgIHByaXZhdGUgc3VzcGVuZDogYm9vbGVhbjtcclxuICAgIC8qKuS4u+inkueItuiKgueCuSovXHJcbiAgICBwcml2YXRlIHJvbGVQYXJlbnQ6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq5pWM5Lq654i26IqC54K5Ki9cclxuICAgIHByaXZhdGUgZW5lbXlQYXJlbnQ6IExheWEuU3ByaXRlO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkgeyBzdXBlcigpOyB9XHJcblxyXG4gICAgb25FbmFibGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5pbml0KCk7XHJcbiAgICAgICAgdGhpcy5idWNrZXRDbGluaygpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWIneWni+WMluW/heimgeWxnuaApyovXHJcbiAgICBpbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc3VzcGVuZCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuc2VsZiA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5zZWxmU2NlbmUgPSB0aGlzLnNlbGYuc2NlbmUgYXMgTGF5YS5TY2VuZTtcclxuICAgICAgICB0aGlzLnJvbGVQYXJlbnQgPSB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLnJvbGVQYXJlbnQ7XHJcbiAgICAgICAgdGhpcy5lbmVteVBhcmVudCA9IHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uZW5lbXlQYXJlbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Li76KeS55qE54K55Ye75LqL5Lu2XHJcbiAgICAqIOWSjOmVv+aMieWHuueOsOWxnuaAp+WxleekuumhtemdolxyXG4gICAgKiDmu5Hliqjlj6/ku6Xmi5bliqjkuLvop5LliLDop4TlrprnmoTkvY3nva5cclxuICAgKi9cclxuICAgIGJ1Y2tldENsaW5rKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc2VsZi5vbihMYXlhLkV2ZW50Lk1PVVNFX0RPV04sIHRoaXMsIHRoaXMuZG93bik7XHJcbiAgICAgICAgdGhpcy5zZWxmLm9uKExheWEuRXZlbnQuTU9VU0VfTU9WRSwgdGhpcywgdGhpcy5tb3ZlKTtcclxuICAgICAgICB0aGlzLnNlbGYub24oTGF5YS5FdmVudC5NT1VTRV9VUCwgdGhpcywgdGhpcy51cCk7XHJcbiAgICAgICAgdGhpcy5zZWxmLm9uKExheWEuRXZlbnQuTU9VU0VfT1VULCB0aGlzLCB0aGlzLm91dCk7XHJcbiAgICB9XHJcbiAgICAvKirmjInkuIss57uZ5LqI55uu5qCH5L2N572u77yM57OW5p6c6LWw5ZCR55uu5qCH5L2N572uO1xyXG4gICAgICog5bm25LiU5YiG5pWw5aKe5YqgKi9cclxuICAgIGRvd24oZXZlbnQpOiB2b2lkIHtcclxuICAgICAgICBsZXQgc3VzcGVuZCA9IHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uc3VzcGVuZDtcclxuICAgICAgICAvLyDmiZPlvIDlkozlhbPpl63mlYzkurrnmoTlsZ7mgKdcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuZW5lbXlQYXJlbnQuX2NoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCBlbmVteSA9IHRoaXMuZW5lbXlQYXJlbnQuX2NoaWxkcmVuW2ldIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgICAgICBsZXQgcHJvcGVydHlTaG93ID0gZW5lbXkuZ2V0Q2hpbGRCeU5hbWUoJ3Byb3BlcnR5U2hvdycpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgICAgICBpZiAoIXN1c3BlbmQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uc3VzcGVuZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICBwcm9wZXJ0eVNob3cuYWxwaGEgPSAxO1xyXG4gICAgICAgICAgICAgICAgLy8gTGF5YS5zdGFnZS5yZW5kZXJpbmdFbmFibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uc3VzcGVuZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgcHJvcGVydHlTaG93LmFscGhhID0gMDtcclxuICAgICAgICAgICAgICAgIC8vIExheWEuc3RhZ2UucmVuZGVyaW5nRW5hYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIOS4u+inkueahOWxnuaAp1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5yb2xlUGFyZW50Ll9jaGlsZHJlbi5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBsZXQgcm9sZSA9IHRoaXMucm9sZVBhcmVudC5fY2hpbGRyZW5baV0gYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgICAgIGxldCBwcm9wZXJ0eVNob3cgPSByb2xlLmdldENoaWxkQnlOYW1lKCdwcm9wZXJ0eVNob3cnKSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICAgICAgaWYgKCFzdXNwZW5kKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLnN1c3BlbmQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgcHJvcGVydHlTaG93LmFscGhhID0gMTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uc3VzcGVuZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgcHJvcGVydHlTaG93LmFscGhhID0gMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKuenu+WKqCovXHJcbiAgICBtb3ZlKGV2ZW50KTogdm9pZCB7XHJcbiAgICB9XHJcbiAgICAvKirmiqzotbcqL1xyXG4gICAgdXAoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZWxmLnNjYWxlKDEsIDEpO1xyXG4gICAgfVxyXG4gICAgLyoq5Ye65bGP5bmVKi9cclxuICAgIG91dCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNlbGYuc2NhbGUoMSwgMSk7XHJcbiAgICB9XHJcbiAgICAvKirmmoLlgZznirbmgIHmmL7npLrmiYDmnInlsZ7mgKfmoYbvvIzpnZ7mmoLlgZznirbmgIHkuI3mmL7npLrlsZ7mgKfmoYYqL1xyXG4gICAgc3VzcGVuZGVkU3RhdGUoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuc3VzcGVuZCkge1xyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBvbkRpc2FibGUoKTogdm9pZCB7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgbW9kdWxlIHRvb2xzIHtcbiAgICAvKipcbiAgICAgKiBcbiAgICAgKiBAcGFyYW0gbiBcbiAgICAgKiBAcGFyYW0gbSDnrKzkuozkuKrpmo/mnLrmlbDkuI3lrZjlnKjnmoTor53pu5jorqTkuLoxMFxuICAgICAqL1xuICAgIGV4cG9ydCBmdW5jdGlvbiByYW5kb20objogbnVtYmVyLCBtPzogbnVtYmVyKSB7XG4gICAgICAgIG0gPSBtIHx8IDEwO1xuICAgICAgICBjb25zdCBjOiBudW1iZXIgPSBtIC0gbiArIDE7XG4gICAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjICsgbilcbiAgICB9XG4gICAgLyoqXG4gICAgICogXG4gICAgICogQHBhcmFtIGFyciBcbiAgICAgKiBAcGFyYW0gY291bnRcbiAgICAgKiDku47mlbDnu4TkuK3pmo/mnLrlj5blh7pjb3VudOS4quaVsCBcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gZ2V0UmFuZG9tQXJyYXlFbGVtZW50cyhhcnIsIGNvdW50KSB7XG4gICAgICAgIHZhciBzaHVmZmxlZCA9IGFyci5zbGljZSgwKSwgaSA9IGFyci5sZW5ndGgsIG1pbiA9IGkgLSBjb3VudCwgdGVtcCwgaW5kZXg7XG4gICAgICAgIHdoaWxlIChpLS0gPiBtaW4pIHtcbiAgICAgICAgICAgIGluZGV4ID0gTWF0aC5mbG9vcigoaSArIDEpICogTWF0aC5yYW5kb20oKSk7XG4gICAgICAgICAgICB0ZW1wID0gc2h1ZmZsZWRbaW5kZXhdO1xuICAgICAgICAgICAgc2h1ZmZsZWRbaW5kZXhdID0gc2h1ZmZsZWRbaV07XG4gICAgICAgICAgICBzaHVmZmxlZFtpXSA9IHRlbXA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNodWZmbGVkLnNsaWNlKG1pbik7XG4gICAgfVxuICAgIGV4cG9ydCBmdW5jdGlvbiBnZXRBcnJheURpZkVsZW1lbnRzKGFyciwgY291bnQpOiBhbnkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICAgICAgbGV0IGk6IG51bWJlciA9IDA7XG4gICAgICAgIGZvciAoaTsgaSA8IGNvdW50OyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHRlbXAgPSBnZXREaWZmRWxlKGFyci5zbGljZSgpLCByZXN1bHQsIGkpO1xuICAgICAgICAgICAgcmVzdWx0LnB1c2godGVtcCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGdldERpZmZFbGUoYXJyLCByZXN1bHQsIHBsYWNlKSB7XG4gICAgICAgIGxldCBpbmRleEFyciA9IFtdO1xuICAgICAgICBsZXQgaTogbnVtYmVyID0gMDtcbiAgICAgICAgZm9yIChpOyBpIDwgYXJyLmxlbmd0aCAtIHBsYWNlOyBpKyspIHtcbiAgICAgICAgICAgIGluZGV4QXJyLnB1c2goaSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmFuSW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBpbmRleEFyci5sZW5ndGgpO1xuICAgICAgICBpZiAocmVzdWx0LmluZGV4T2YoYXJyW3JhbkluZGV4XSkgPT09IC0xKSB7XG4gICAgICAgICAgICBjb25zdCBiYWNrTnVtID0gYXJyW3JhbkluZGV4XTtcbiAgICAgICAgICAgIGFycltyYW5JbmRleF0gPSBhcnJbaW5kZXhBcnIubGVuZ3RoIC0gMV07XG4gICAgICAgICAgICByZXR1cm4gYmFja051bTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGFyci5zcGxpY2UocmFuSW5kZXgsIDEpO1xuICAgICAgICAgICAgcmV0dXJuIGdldERpZmZFbGUoYXJyLCByZXN1bHQsIHBsYWNlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBleHBvcnQgbGV0IHJvbGVEcmFnQ2FuOiBib29sZWFuID0gZmFsc2U7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNvcHlkYXRhKG9iaik6IGFueSB7XG4gICAgICAgIGNvbnN0IHJldCA9IHt9O1xuICAgICAgICBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhvYmopLmZvckVhY2gobmFtZSA9PiB7XG4gICAgICAgICAgICByZXRbbmFtZV0gPSBvYmpbbmFtZV07XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmV0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOaVsOe7hOWkjeWItiBcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gZmlsbEFycmF5KHZhbHVlLCBsZW4pIHtcbiAgICAgICAgdmFyIGFyciA9IFtdO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICBhcnIucHVzaCh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFycjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBcbiAgICAgKiBAcGFyYW0gYW5nbGUg6KeS5bqmXG4gICAgICogQHBhcmFtIFhZIOW/hemhu+WMheWQq3nkuIrnmoTpgJ/luqZcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gc3BlZWRCeUFuZ2xlKGFuZ2xlOiBudW1iZXIsIFhZOiBhbnkpIHtcbiAgICAgICAgaWYgKGFuZ2xlICUgOTAgPT09IDAgfHwgIWFuZ2xlKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwi6K6h566X55qE6KeS5bqm5byC5bi4LOmcgOimgeafpeeci++8mlwiLCBhbmdsZSk7XG4gICAgICAgICAgICAvLyBkZWJ1Z2dlclxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCBzcGVlZFhZID0geyB4OiAwLCB5OiAwIH07XG4gICAgICAgIHNwZWVkWFkueSA9IFhZLnk7XG4gICAgICAgIHNwZWVkWFkueCA9IHNwZWVkWFkueSAvIE1hdGgudGFuKGFuZ2xlICogTWF0aC5QSSAvIDE4MCk7XG4gICAgICAgIHJldHVybiBzcGVlZFhZO1xuICAgIH1cbiAgICBleHBvcnQgZnVuY3Rpb24gc3BlZWRYWUJ5QW5nbGUoYW5nbGU6IG51bWJlciwgc3BlZWQ6IG51bWJlcikge1xuICAgICAgICBpZiAoYW5nbGUgJSA5MCA9PT0gMCB8fCAhYW5nbGUpIHtcbiAgICAgICAgICAgIC8vZGVidWdnZXJcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzcGVlZFhZID0geyB4OiAwLCB5OiAwIH07XG4gICAgICAgIHNwZWVkWFkueCA9IHNwZWVkICogTWF0aC5jb3MoYW5nbGUgKiBNYXRoLlBJIC8gMTgwKTtcbiAgICAgICAgc3BlZWRYWS55ID0gc3BlZWQgKiBNYXRoLnNpbihhbmdsZSAqIE1hdGguUEkgLyAxODApO1xuICAgICAgICByZXR1cm4gc3BlZWRYWTtcbiAgICB9XG5cbiAgICBleHBvcnQgZnVuY3Rpb24gc3BlZWRMYWJlbEJ5QW5nbGUoYW5nbGU6IG51bWJlciwgc3BlZWQ6IG51bWJlciwgc3BlZWRCYXRlPzogbnVtYmVyKSB7XG4gICAgICAgIC8vIGlmIChhbmdsZSAlIDkwID09PSAwIHx8ICFhbmdsZSkge1xuICAgICAgICAvLyAgICAgZGVidWdnZXJcbiAgICAgICAgLy8gfVxuICAgICAgICBjb25zdCBzcGVlZFhZID0geyB4OiAwLCB5OiAwIH07XG4gICAgICAgIGNvbnN0IHNlbGZBbmdsZSA9IGFuZ2xlO1xuICAgICAgICBjb25zdCBkZWZhdWx0U3BlZWQgPSBzcGVlZDtcbiAgICAgICAgY29uc3QgYmF0ZSA9IHNwZWVkQmF0ZSB8fCAxO1xuICAgICAgICBpZiAoc2VsZkFuZ2xlICUgOTAgPT09IDApIHtcbiAgICAgICAgICAgIGlmIChzZWxmQW5nbGUgPT09IDAgfHwgc2VsZkFuZ2xlID09PSAzNjApIHtcbiAgICAgICAgICAgICAgICBzcGVlZFhZLnggPSBNYXRoLmFicyhkZWZhdWx0U3BlZWQpICogYmF0ZTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoc2VsZkFuZ2xlID09PSA5MCkge1xuICAgICAgICAgICAgICAgIHNwZWVkWFkueSA9IE1hdGguYWJzKGRlZmF1bHRTcGVlZCkgKiBiYXRlO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChzZWxmQW5nbGUgPT09IDE4MCkge1xuICAgICAgICAgICAgICAgIHNwZWVkWFkueCA9IC1NYXRoLmFicyhkZWZhdWx0U3BlZWQpICogYmF0ZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc3BlZWRYWS55ID0gLU1hdGguYWJzKGRlZmF1bHRTcGVlZCkgKiBiYXRlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgdGVtcFhZID0gdG9vbHMuc3BlZWRYWUJ5QW5nbGUoc2VsZkFuZ2xlLCBkZWZhdWx0U3BlZWQpO1xuICAgICAgICAgICAgc3BlZWRYWS54ID0gdGVtcFhZLng7XG4gICAgICAgICAgICBzcGVlZFhZLnkgPSB0ZW1wWFkueTtcbiAgICAgICAgICAgIGlmIChzZWxmQW5nbGUgPiAwICYmIHNlbGZBbmdsZSA8IDE4MCkge1xuICAgICAgICAgICAgICAgIHNwZWVkWFkueSA9IE1hdGguYWJzKHNwZWVkWFkueSkgKiBiYXRlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzcGVlZFhZLnkgPSAtTWF0aC5hYnMoc3BlZWRYWS55KSAqIGJhdGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc2VsZkFuZ2xlID4gOTAgJiYgc2VsZkFuZ2xlIDwgMjcwKSB7XG4gICAgICAgICAgICAgICAgc3BlZWRYWS54ID0gLU1hdGguYWJzKHNwZWVkWFkueCkgKiBiYXRlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzcGVlZFhZLnggPSBNYXRoLmFicyhzcGVlZFhZLngpICogYmF0ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3BlZWRYWTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogXG4gICAgICogQHBhcmFtIGRlZ3JlZSDop5LluqZcbiAgICAgKiDmoLnmja7op5LluqborqHnrpflvKfluqZcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gZ2V0UmFkKGRlZ3JlZSkge1xuICAgICAgICByZXR1cm4gZGVncmVlIC8gMTgwICogTWF0aC5QSTtcbiAgICB9XG4gICAgLyoqXG4gICAgICog5rGC5ZyG5LiK55qE54K555qE5Z2Q5qCHflxuICAgICAqL1xuICAgIGV4cG9ydCBmdW5jdGlvbiBnZXRSb3VuZFBvcyhhbmdsZTogbnVtYmVyLCByYWRpdXM6IG51bWJlciwgY2VudFBvczogYW55KSB7XG4gICAgICAgIHZhciBjZW50ZXIgPSBjZW50UG9zOyAvL+WchuW/g+WdkOagh1xuICAgICAgICB2YXIgcmFkaXVzID0gcmFkaXVzOyAvL+WNiuW+hFxuICAgICAgICB2YXIgaHVkdSA9ICgyICogTWF0aC5QSSAvIDM2MCkgKiBhbmdsZTsgLy85MOW6puinkueahOW8p+W6plxuXG4gICAgICAgIHZhciBYID0gY2VudGVyLnggKyBNYXRoLnNpbihodWR1KSAqIHJhZGl1czsgLy/msYLlh7o5MOW6puinkueahHjlnZDmoIdcbiAgICAgICAgdmFyIFkgPSBjZW50ZXIueSAtIE1hdGguY29zKGh1ZHUpICogcmFkaXVzOyAvL+axguWHujkw5bqm6KeS55qEeeWdkOagh1xuICAgICAgICByZXR1cm4geyB4OiBYLCB5OiBZIH07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIOi9rOWMluWkp+eahOaVsOWtl1xuICAgICAqL1xuICAgIGV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0ZU51bShudW06IG51bWJlcik6IHN0cmluZyB7XG4gICAgICAgIGlmICh0eXBlb2YgKG51bSkgIT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihcIuimgei9rOWMlueahOaVsOWtl+W5tuS4jeS4um51bWJlclwiKTtcbiAgICAgICAgICAgIHJldHVybiBudW07XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGJhY2tOdW06IHN0cmluZztcblxuICAgICAgICBpZiAobnVtIDwgMTAwMCkge1xuICAgICAgICAgICAgYmFja051bSA9IFwiXCIgKyBudW07XG4gICAgICAgIH0gZWxzZSBpZiAobnVtIDwgMTAwMDAwMCkge1xuICAgICAgICAgICAgYmFja051bSA9IFwiXCIgKyAobnVtIC8gMTAwMCkudG9GaXhlZCgxKSArIFwia1wiO1xuICAgICAgICB9IGVsc2UgaWYgKG51bSA8IDEwZTgpIHtcbiAgICAgICAgICAgIGJhY2tOdW0gPSBcIlwiICsgKG51bSAvIDEwMDAwMDApLnRvRml4ZWQoMSkgKyBcIm1cIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGJhY2tOdW0gPSBcIlwiICsgbnVtO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBiYWNrTnVtO1xuICAgIH1cblxufVxuZXhwb3J0IGRlZmF1bHQgdG9vbHM7Il19
