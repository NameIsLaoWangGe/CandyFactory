var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var MainSceneControl_1 = require("./script/MainSceneControl");
var Role_1 = require("./script/Role");
var OperationControl_1 = require("./script/OperationControl");
var Suspend_1 = require("./script/Suspend");
var Candy_1 = require("./script/Candy");
var Enemy_1 = require("./script/Enemy");
var EnemyBullet_1 = require("./script/EnemyBullet");
var HintWord_1 = require("./script/HintWord");
var RoleBullet_1 = require("./script/RoleBullet");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/MainSceneControl.ts", MainSceneControl_1.default);
        reg("script/Role.ts", Role_1.default);
        reg("script/OperationControl.ts", OperationControl_1.default);
        reg("script/Suspend.ts", Suspend_1.default);
        reg("script/Candy.ts", Candy_1.default);
        reg("script/Enemy.ts", Enemy_1.default);
        reg("script/EnemyBullet.ts", EnemyBullet_1.default);
        reg("script/HintWord.ts", HintWord_1.default);
        reg("script/RoleBullet.ts", RoleBullet_1.default);
    };
    GameConfig.width = 750;
    GameConfig.height = 1334;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "vertical";
    GameConfig.alignV = "top";
    GameConfig.alignH = "center";
    GameConfig.startScene = "scene/MainScene.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = true;
    GameConfig.physicsDebug = true;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./script/Candy":3,"./script/Enemy":4,"./script/EnemyBullet":5,"./script/HintWord":6,"./script/MainSceneControl":7,"./script/OperationControl":8,"./script/Role":9,"./script/RoleBullet":10,"./script/Suspend":11}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Candy = /** @class */ (function (_super) {
    __extends(Candy, _super);
    function Candy() {
        return _super.call(this) || this;
    }
    Candy.prototype.onEnable = function () {
        this.initProperty();
        this.locationInit();
    };
    /**初始化*/
    Candy.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.candyTagRole = null;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default);
        this.roleParent = this.mainSceneControl.roleParent;
        this.scoreLabel = this.mainSceneControl.scoreLabel;
        this.selfSpeed = 10;
        this.tab = this.mainSceneControl.candyCount;
        this.timerControl = 0;
        this.spaceY = 5;
        this.hintWord = this.mainSceneControl.hintWord;
        this.becomeEnemy = false;
        this.moveAStep;
        this.selected = false;
        this.group = null;
        this.self['Candy'] = this;
    };
    /**初始位置初始化*/
    Candy.prototype.locationInit = function () {
        this.posYArr = [];
        this.moveAStep = false;
        this.self.y = -this.tab * (this.self.height + this.spaceY);
        for (var i = 0; i < 10; i++) {
            var y = -(this.self.height + this.spaceY) * i;
            this.posYArr.push(y);
        }
    };
    /**当第一个糖果被吃掉后的移动函数
     * 移动速度要非常快
    */
    Candy.prototype.moveRules = function () {
        Laya.Tween.to(this.self, { y: this.self.y + this.self.height + this.spaceY }, 10, null, Laya.Handler.create(this, function () {
        }, []), 0);
    };
    /**飞到主角身上增加主角属性
     * 并且播放属性增加动画
    */
    Candy.prototype.flyToRole = function () {
        if (this.candyTagRole !== null) {
            // x,y分别相减是两点连线向量
            // 向量计算并且归一化，向量长度为1。
            var point = new Laya.Point(this.candyTagRole.x - this.self.x, this.candyTagRole.y - this.self.y);
            point.normalize();
            //向量相加移动
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
            // 到达对象位置后开启攻击开关进行攻击，攻击速度依照时间间隔而定
            // 此时移动速度为零
            var differenceX = Math.abs(this.self.x - this.candyTagRole.x);
            var differenceY = Math.abs(this.self.y - this.candyTagRole.y);
            if (differenceX < 50 && differenceY < 50) {
                this.self.removeSelf();
                this.hintWordMove();
                this.roleAddProperty();
                this.candyTagRole = null;
            }
        }
    };
    /**属性增加提示动画*/
    Candy.prototype.hintWordMove = function () {
        var hintWord = Laya.Pool.getItemByCreateFun('candy', this.hintWord.create, this.hintWord);
        var role_01 = this.mainSceneControl.role_01;
        var role_02 = this.mainSceneControl.role_02;
        if (this.candyTagRole.parent === null) {
            this.self.removeSelf();
            return;
        }
        this.candyTagRole.addChild(hintWord);
        hintWord.pos(0, -150);
        var proPertyType;
        var numberValue;
        this.self.name = this.self.name.substring(0, 11);
        switch (this.self.name) {
            case 'yellowCandy':
                proPertyType = '攻击里';
                numberValue = 10;
                break;
            case 'redCandy___':
                proPertyType = '生命';
                numberValue = 5;
                break;
            case 'blueCandy__':
                proPertyType = '公鸡速度';
                numberValue = 10;
                break;
            case 'greenCandy_':
                proPertyType = '防御力';
                numberValue = 5;
                break;
            default:
        }
        hintWord['HintWord'].initProperty(proPertyType, numberValue);
    };
    /**根据糖果的种类增加主角属性规则
     * 并且播放增加属性文字提示动画
    */
    Candy.prototype.roleAddProperty = function () {
        this.self.name = this.self.name.substring(0, 11);
        var role_01 = this.mainSceneControl.role_01;
        var role_02 = this.mainSceneControl.role_02;
        switch (this.self.name) {
            case 'yellowCandy':
                if (this.candyTagRole === role_01) {
                    role_01['Role'].role_property.attackValue += 10;
                }
                else {
                    role_02['Role'].role_property.attackValue += 10;
                }
                break;
            case 'redCandy___':
                if (this.candyTagRole === role_01) {
                    role_01['Role'].role_property.blood += 5;
                }
                else {
                    role_02['Role'].role_property.blood += 5;
                }
                break;
            case 'blueCandy__':
                if (this.candyTagRole === role_01) {
                    role_01['Role'].role_property.attackSpeed += 10;
                }
                else {
                    role_02['Role'].role_property.attackSpeed += 10;
                }
                break;
            case 'greenCandy_':
                if (this.candyTagRole === role_01) {
                    role_01['Role'].role_property.defense += 5;
                }
                else {
                    role_02['Role'].role_property.defense += 5;
                }
                break;
            default:
                break;
        }
    };
    Candy.prototype.onUpdate = function () {
        // 第一波10个糖果出厂控制，此刻不可点击
        this.timerControl += 0.1;
        if (this.timerControl < 18 && this.self.parent === this.mainSceneControl.candyParent) {
            // this.self.y += 3;
        }
        // 飞到主角身上
        this.flyToRole();
        // 下移一格
        if (this.moveAStep) {
            this.moveRules();
            this.moveAStep = false;
        }
    };
    Candy.prototype.onDisable = function () {
        // 清理动画
        Laya.Tween.clearAll(this);
        if (this.self.name === 'yellowCandy') {
            Laya.Pool.recover('yellowCandy', this.self);
        }
        else if (this.self.name === 'redCandy___') {
            Laya.Pool.recover('redCandy___', this.self);
        }
        else if (this.self.name === 'blueCandy__') {
            Laya.Pool.recover('blueCandy__', this.self);
        }
        else if (this.self.name === 'greenCandy_') {
            Laya.Pool.recover('greenCandy_', this.self);
        }
    };
    return Candy;
}(Laya.Script));
exports.default = Candy;
},{"./MainSceneControl":7}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Enemy = /** @class */ (function (_super) {
    __extends(Enemy, _super);
    function Enemy() {
        return _super.call(this) || this;
    }
    Enemy.prototype.onEnable = function () {
        this.initProperty();
        this.enemyPropertySet();
    };
    /**初始化*/
    Enemy.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfScene = this.owner.scene;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default); //场景脚本组件
        this.roleParent = this.mainSceneControl.roleParent;
        this.selfHealth = this.self.getChildByName('health');
        this.selfSpeed = 4;
        this.propertyShow = this.self.getChildByName('propertyShow');
        this.attackTnterval = 100;
        this.recordTime = Date.now();
        this.speakBox = this.mainSceneControl.speakBox;
        this.scoreLabel = this.mainSceneControl.scoreLabel;
        this.repelTimer = 0;
        this.hintWord = this.mainSceneControl.hintWord;
        this.enemyBullet = this.mainSceneControl.enemyBullet;
        this.self['Enemy'] = this;
    };
    /**近战攻击的敌人攻击主角的时候，会随机在主角范围内停止然后攻击
     * 这样做的好处是敌人不会重叠,并且这个坐标在主角的上方
     * 并且这个坐标在开始的时候执行一次
     * 更换主角的时候执行一次
     * */
    Enemy.prototype.randomAttackPoint = function () {
        var difference;
        var number = Math.floor(Math.random() * 2);
        if (number === 1) {
            difference = -Math.floor(Math.random() * 50);
        }
        else {
            difference = Math.floor(Math.random() * 50);
        }
        this.attackX = this.slefTagRole.x + difference;
        this.attackY = this.slefTagRole.y - Math.floor(Math.random() * 50);
    };
    /**怪物等级包括的一些属性*/
    Enemy.prototype.enemyPropertySet = function () {
        // 属性赋值
        this.enemyProperty = {
            level: '',
            blood: '',
            moveSpeed: '',
            defense: '',
        };
        this.enemyProperty.blood = this.mainSceneControl.enemyProperty.blood;
        this.enemyProperty.attackValue = this.mainSceneControl.enemyProperty.attackValue;
        this.enemyProperty.attackSpeed = this.mainSceneControl.enemyProperty.attackSpeed;
        this.enemyProperty.defense = this.mainSceneControl.enemyProperty.defense;
        this.enemyProperty.moveSpeed = this.mainSceneControl.enemyProperty.moveSpeed;
    };
    /**属性刷新显示规则,血量显示一定是整数10*/
    Enemy.prototype.enemyPropertyUpdate = function () {
        // 血条上的血量显示
        this.bloodLabel = this.selfHealth.getChildByName('bloodLabel');
        var str = Math.round(this.enemyProperty.blood * this.selfHealth.value).toString();
        var subStr_01 = str.substring(0, str.length - 1);
        var subStr_02 = subStr_01 + 0;
        this.bloodLabel.text = subStr_02;
        // 属性显示框上面显示的属性
        // 血量
        var blood = this.propertyShow.getChildByName('blood');
        blood.text = "血量: " + this.enemyProperty.blood;
        // 攻击力
        var attackValue = this.propertyShow.getChildByName('attackValue');
        attackValue.text = "攻击力: " + this.enemyProperty.attackValue;
        // 攻击速度
        var attackSpeed = this.propertyShow.getChildByName('attackSpeed');
        attackSpeed.text = "攻击速度: " + this.enemyProperty.attackSpeed;
        // 防御力
        var defense = this.propertyShow.getChildByName('defense');
        defense.text = "防御力: " + this.enemyProperty.defense;
    };
    /** 近战攻击的敌人第二阶段移动到主角位置，并且进入主角射程范围的移动规则
     * 加入被子弹击退效果
    */
    Enemy.prototype.enemyMove = function () {
        // x,y分别相减是两点连线向量
        // 向量计算并且归一化，向量长度为1。
        var point = new Laya.Point(this.attackX - this.self.x, this.attackY - this.self.y);
        point.normalize();
        // 判断是否激活被击退效果
        if (this.slefTagRole.x > Laya.stage.width / 2) { //右边
            // 右边发生预警
            this.mainSceneControl.role_01['Role'].role_Warning = true;
        }
        else if (this.slefTagRole.x < Laya.stage.width / 2) { //左边
            // 左边发生预警
            this.mainSceneControl.role_02['Role'].role_Warning = true;
        }
        // 被击退反向移动
        if (this.repelTimer > 0) {
            this.repelTimer--;
            //反向移动
            this.self.x -= point.x * 2;
            this.self.y -= point.y * 2;
        }
        else {
            //向量相加移动
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
        }
    };
    /**怪物对主角造成伤害的公式
     * 攻击力-主角防御如果大于零则造成伤害，否则不造成伤害
     * 掉血显示值，伤害小于零则显示0
     * 并且在主角头上出现掉血动画提示
    */
    Enemy.prototype.enemyAttackRules = function () {
        // 通过攻击力计算掉血状况
        var damage = this.enemyProperty.attackValue - this.slefTagRole['Role'].role_property.defense;
        if (damage > 0) {
            this.slefTagRole['Role'].role_property.blood -= damage;
        }
        else {
            damage = 0;
        }
        this.hintWordMove(damage);
    };
    Enemy.prototype.hintWordMove = function (damage) {
        // 创建提示动画对象
        var hintWord = Laya.Pool.getItemByCreateFun('candy', this.hintWord.create, this.hintWord);
        hintWord.pos(0, -150);
        this.slefTagRole.addChild(hintWord);
        var proPertyType = '敌人掉血';
        var numberValue;
        hintWord['HintWord'].initProperty(proPertyType, damage);
    };
    /**远程攻击创建子弹*/
    Enemy.prototype.creatBullet = function () {
        var bullet = Laya.Pool.getItemByCreateFun('enemyBullet', this.enemyBullet.create, this.enemyBullet);
        var bulletParent = this.mainSceneControl.bulletParent;
        bulletParent.addChild(bullet);
        bullet.pos(this.self.x, this.self.y);
        bullet['EnemyBullet'].belongEnemy = this.self;
        bullet['EnemyBullet'].bulletTarget = this.slefTagRole;
    };
    /**更换攻击目标
     * 如果当前攻击的主角死了，敌人会攻击另一个目标
    */
    Enemy.prototype.replaceTarget = function () {
        if (this.slefTagRole['Role'].role_property.blood <= 0) {
            // 更换目标
            if (this.slefTagRole.name === 'role_01') {
                this.slefTagRole = this.mainSceneControl.role_02;
                this.tagHealth = this.mainSceneControl.role_02.getChildByName('health');
            }
            else if (this.slefTagRole.name === 'role_02') {
                this.slefTagRole = this.mainSceneControl.role_01;
                this.tagHealth = this.mainSceneControl.role_01.getChildByName('health');
            }
        }
    };
    Enemy.prototype.onUpdate = function () {
        // 主角全部死亡则停止移动
        if (this.roleParent._children.length === 0) {
            return;
        }
        // 如果没有目标则什么都不执行
        if (this.slefTagRole === null) {
            return;
        }
        // 血量低于0则死亡,并且关闭主角发射子弹预警
        if (this.enemyProperty.blood < 0) {
            this.mainSceneControl.role_01['Role'].role_Warning = false;
            this.mainSceneControl.role_02['Role'].role_Warning = false;
            this.self.removeSelf();
        }
        // 属性实时刷新
        this.enemyPropertyUpdate();
        // 血量低于0死亡,并且增加分数,并且关闭主角攻击预警
        if (this.selfHealth.value <= 0) {
            this.scoreLabel.text = (Number(this.scoreLabel.text) + 200).toString();
            this.self.removeSelf();
            this.mainSceneControl.role_01['Role'].role_Warning = false;
            this.mainSceneControl.role_02['Role'].role_Warning = false;
        }
        //判断这个敌人是不是远程攻击，远程攻击的敌人暂时不会移动,会主动发射子弹进行攻击
        if (this.enemyType === 'range') {
            var nowTime = Date.now();
            if (nowTime - this.recordTime > this.enemyProperty.attackSpeed) {
                this.recordTime = nowTime;
                // 血量判断，目标死亡后，会更换目标
                if (this.slefTagRole['Role'].role_property.blood > 0) {
                    this.creatBullet();
                }
                else {
                    this.replaceTarget();
                }
            }
        }
        else if (this.enemyType === 'infighting') {
            // 近战移动
            this.enemyMove();
            // 到达对象位置后开启攻击开关进行攻击，攻击速度依照时间间隔而定
            // 此时移动速度为零
            var differenceX = Math.abs(this.self.x - this.attackX);
            var differenceY = Math.abs(this.self.y - this.attackY);
            if (differenceX < 100 && differenceY < 100) {
                this.selfSpeed = 0;
                var nowTime = Date.now();
                if (nowTime - this.recordTime > this.enemyProperty.attackSpeed) {
                    this.recordTime = nowTime;
                    // 血量判断，目标死亡后，会更换目标
                    if (this.slefTagRole['Role'].role_property.blood > 0) {
                        this.enemyAttackRules();
                    }
                    else {
                        this.replaceTarget();
                    }
                }
            }
            else {
                this.selfSpeed = 4;
            }
        }
    };
    Enemy.prototype.onDisable = function () {
        Laya.Pool.recover('enemy', this.self);
    };
    return Enemy;
}(Laya.Script));
exports.default = Enemy;
},{"./MainSceneControl":7}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var EnemyBullet = /** @class */ (function (_super) {
    __extends(EnemyBullet, _super);
    function EnemyBullet() {
        return _super.call(this) || this;
    }
    EnemyBullet.prototype.onEnable = function () {
        this.init();
    };
    /**初始化一些属性*/
    EnemyBullet.prototype.init = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default);
        this.enemyParent = this.mainSceneControl.enemyParent;
        this.selfSpeed = 15;
        this.attackValue = this.mainSceneControl.enemyProperty.attackValue;
        this.roleParent = this.selfScene['MainSceneControl'].roleParent;
        this.self['EnemyBullet'] = this;
    };
    /**始终攻击一个主角，如果这个主角死了，
     * 若果这个目标被移除了，那么发出去的子弹会沿着和怪物的方向继续移动到500
     * */
    EnemyBullet.prototype.bulletMove = function () {
        if (this.bulletTarget && this.bulletTarget.parent) {
            // x,y分别相减是两点连线向量
            var point = new Laya.Point(this.bulletTarget.x - this.self.x, this.bulletTarget.y - this.self.y);
            // 归一化，向量长度为1。
            point.normalize();
            //向量相加
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
        }
        else {
            // 沿着自己和发射自己的敌人方向移动
            var point = new Laya.Point(this.self.x - this.belongEnemy.x, this.self.y - this.belongEnemy.y);
            // 归一化，向量长度为1。
            point.normalize();
            //向量相加
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
        }
    };
    /**子弹对主角造成伤害的公式
       * 攻击力-主角防御如果大于零则造成伤害，否则不造成伤害
       * 并且有动画提示文字
      */
    EnemyBullet.prototype.bulletAttackRules = function (role) {
        // 掉血显示值，伤害小于零则显示0
        var numberValue;
        // 伤害
        var damage = this.attackValue - role['Role'].role_property.defense;
        if (damage > 0) {
            role['Role'].role_property.blood -= damage;
            numberValue = damage;
        }
        else {
            numberValue = 0;
        }
    };
    EnemyBullet.prototype.onUpdate = function () {
        // 移动
        this.bulletMove();
        // 超出横向范围消失，一般不会触发
        if (this.self.x > 750 + this.self.width + 50 || this.self.x < -this.self.width) {
            this.self.removeSelf();
        }
        // 碰到任何一个主角，子弹消失怪物掉血
        for (var i = 0; i < this.roleParent._children.length; i++) {
            var role = this.roleParent._children[i];
            var differenceX = Math.abs(role.x - this.self.x);
            var differenceY = Math.abs(role.y - this.self.y);
            if (differenceX < 10 && differenceY < 10) {
                this.bulletAttackRules(role);
                this.self.removeSelf();
            }
        }
    };
    EnemyBullet.prototype.onDisable = function () {
    };
    return EnemyBullet;
}(Laya.Script));
exports.default = EnemyBullet;
},{"./MainSceneControl":7}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HintWord = /** @class */ (function (_super) {
    __extends(HintWord, _super);
    function HintWord() {
        return _super.call(this) || this;
    }
    HintWord.prototype.onEnable = function () {
        this.self = this.owner;
        this.self['HintWord'] = this;
        this.self.alpha = 0;
        this.addProperty = this.self.getChildByName('addProperty');
        this.addNumber = this.self.getChildByName('addNumber');
        this.subNumber = this.self.getChildByName('subNumber');
        this.addProperty.value = null;
        this.addNumber.value = null;
        this.subNumber.value = null;
    };
    /**通过传入的参数来，设置属性图片字的格式
     * @param propertyType 属性类型
     * @param numberValue 属性值
     * */
    HintWord.prototype.initProperty = function (propertyType, numberValue) {
        this.addProperty.value = propertyType;
        // 位置偏移，因为字符长度不一样
        switch (propertyType) {
            case '公鸡速度':
                this.addProperty.x -= 40;
                this.addNumber.value = "+" + numberValue;
                break;
            case '攻击里':
                this.addProperty.x -= 20;
                this.addNumber.x -= 20;
                this.addNumber.value = "+" + numberValue;
                break;
            case '生命':
                this.addNumber.x -= 40;
                this.addNumber.value = "+" + numberValue;
                break;
            case '防御力':
                this.addProperty.x -= 20;
                this.addNumber.x -= 20;
                this.addNumber.value = "+" + numberValue;
                break;
            case '主角掉血':
                this.subNumber.x -= 80;
                this.subNumber.value = "-" + numberValue;
            case '敌人掉血':
                this.subNumber.x -= 80;
                this.subNumber.value = "-" + numberValue;
            default:
                break;
        }
        this.hintWordMove();
    };
    /**飘字动画时间线*/
    HintWord.prototype.hintWordMove = function () {
        var timeLine = new Laya.TimeLine;
        timeLine.addLabel('appear', 0).to(this.self, { y: this.self.y - 60, alpha: 1 }, 100, null, 0)
            .addLabel('pause', 0).to(this.self, { y: this.self.y - 120 }, 800, null, 0)
            .addLabel('vanish', 0).to(this.self, { y: this.self.y - 150, alpha: 0 }, 100, null, 0);
        timeLine.play('appear', false);
        timeLine.on(Laya.Event.COMPLETE, this, function () {
            this.self.removeSelf();
        });
    };
    HintWord.prototype.onDisable = function () {
    };
    return HintWord;
}(Laya.Script));
exports.default = HintWord;
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl = /** @class */ (function (_super) {
    __extends(MainSceneControl, _super);
    function MainSceneControl() {
        return _super.call(this) || this;
    }
    MainSceneControl.prototype.onEnable = function () {
        this.initSecne();
        this.roletInit();
        this.roleSpeakBoxs();
        this.candyPosInit();
        this.createWaveCandys();
    };
    /**场景初始化*/
    MainSceneControl.prototype.initSecne = function () {
        this.enemyAppear = false;
        this.enemyTagRole = null;
        this.enemyCount = 0;
        // 初始化怪物属性，依次为血量，
        this.enemyProperty = {
            blood: 200,
            attackValue: 15,
            attackSpeed: 100,
            defense: 10,
            moveSpeed: 10,
            creatInterval: 5000
        };
        this.enemyInterval_01 = 500;
        this.enemyTime_01 = Date.now();
        this.enemySwitch_01 = true;
        this.enemyInterval_02 = 500;
        this.enemyTime_02 = Date.now();
        this.enemySwitch_02 = true;
        this.candy_interval = 1000;
        this.creatTime = Date.now();
        this.creatOnOff = true;
        this.nameArr = [];
        this.candyCount = 0;
        this.scoreLabel.text = '0';
        this.rescueNum = 0;
        // 关闭多点触控
        Laya.MouseManager.multiTouchEnabled = false;
        this.timerControl = 0;
        this.owner['MainSceneControl'] = this; //脚本赋值
        this.suspend = false;
    };
    /**生成10个初始糖果
     * 在固定的10个位置*/
    MainSceneControl.prototype.candyPosInit = function () {
        this.posArr_left = [];
        this.posArr_right = [];
        var candyHeiht = 100;
        var spacing = 10;
        var startX_01 = Laya.stage.width / 2 - 70;
        var startX_02 = Laya.stage.width / 2 + 70;
        var startY = Laya.stage.width / 3;
        // 注意排布顺序，把第一个排到最前，所以返回来循环
        for (var i = 1; i >= 0; i--) {
            for (var j = 4; j >= 0; j--) {
                if (i === 0) {
                    var arr = [startX_01, startY + j * (candyHeiht + spacing)];
                    this.posArr_left.push(arr);
                }
                else if (i === 1) {
                    var arr = [startX_02, startY + j * (candyHeiht + spacing)];
                    this.posArr_right.push(arr);
                }
            }
        }
    };
    /**10个糖果排布动画*/
    MainSceneControl.prototype.createWaveCandys = function () {
        // 生成10个初始糖果
        for (var i = 0; i < 2; i++) {
            for (var j = 0; j < 5; j++) {
                var x = void 0;
                var y = void 0;
                var candy = this.createCandy();
                if (i === 0) {
                    x = this.posArr_left[j][0];
                    y = this.posArr_left[j][1];
                }
                else if (i === 1) {
                    x = this.posArr_right[j][0];
                    y = this.posArr_right[j][1];
                }
                candy.x = x;
                candy.y = y;
                candy['Candy'].group = j;
            }
        }
    };
    /**主角初始化，成对出现在两个固定位置，每次初始化后的位置可能会调换*/
    MainSceneControl.prototype.roletInit = function () {
        this.role_01 = this.owner.scene.role_01;
        this.role_02 = this.owner.scene.role_02;
        var pic_01 = this.role_01.getChildByName('pic');
        var pic_02 = this.role_02.getChildByName('pic');
        // 随机更换皮肤
        var imageUrl_01 = 'candy/红色桶.png';
        var imageUrl_02 = 'candy/黄色桶.png';
        var randomNum = Math.floor(Math.random() * 2);
        if (randomNum === 0) {
            pic_01.loadImage(imageUrl_01);
            pic_01.name = 'redRole';
            pic_02.loadImage(imageUrl_02);
            pic_02.name = 'yellowRole';
        }
        else {
            pic_02.loadImage(imageUrl_01);
            pic_02.name = 'redRole';
            pic_01.loadImage(imageUrl_02);
            pic_01.name = 'yellowRole';
        }
    };
    /**两个主角对话框的初始化*/
    MainSceneControl.prototype.roleSpeakBoxs = function () {
        for (var i = 0; i < 2; i++) {
            var speakBox = Laya.Pool.getItemByCreateFun('speakBox', this.speakBox.create, this.speakBox);
            this.speakBoxParent.addChild(speakBox);
            if (i === 0) {
                speakBox.pos(this.role_01.x, this.role_01.y);
                this.role_01speak = speakBox;
                this.role_01speak.alpha = 0;
                // 反向和偏移
                var pic = this.role_01speak.getChildByName('pic');
                var label = this.role_01speak.getChildByName('label');
                pic.scaleX = -1;
                label.x += 30;
            }
            else {
                speakBox.pos(this.role_02.x, this.role_02.y);
                this.role_02speak = speakBox;
                this.role_02speak.alpha = 0;
            }
        }
    };
    /**产生糖果*/
    MainSceneControl.prototype.createCandy = function () {
        // 通过对象池创建
        var candy = Laya.Pool.getItemByCreateFun('candy', this.candy.create, this.candy);
        // 随机创建一种颜色糖果
        // 糖果的名称结构是11位字符串加上索引值，方便查找，并且这样使他们的名称唯一
        var randomNum = Math.floor(Math.random() * 4);
        var url_01 = 'candy/黄色糖果.png';
        var url_02 = 'candy/红色糖果.png';
        var url_03 = 'candy/蓝色糖果.png';
        var url_04 = 'candy/绿色糖果.png';
        var pic = candy.getChildByName('pic');
        switch (randomNum) {
            case 0:
                candy.name = 'yellowCandy' + this.candyCount;
                pic.loadImage(url_01);
                break;
            case 1:
                candy.name = 'redCandy___' + this.candyCount;
                pic.loadImage(url_02);
                break;
            case 2:
                candy.name = 'blueCandy__' + this.candyCount;
                pic.loadImage(url_03);
                break;
            case 3:
                candy.name = 'greenCandy_' + this.candyCount;
                pic.loadImage(url_04);
                break;
            default:
                break;
        }
        // 随机点击次数
        var clicksLabel = candy.getChildByName('clicksLabel');
        clicksLabel.text = (Math.floor(Math.random() * 0) + 1).toString();
        candy.pos(Laya.stage.width / 2, -100);
        this.candyParent.addChild(candy);
        candy.rotation = 0;
        this.candyCount++;
        return candy;
    };
    /**角色死亡复活状况*/
    MainSceneControl.prototype.roleDeathState = function () {
        // 角色死亡情况
        var len = this.roleParent._children.length;
        if (len === 0) {
            // 死亡
            this.enemySwitch_01 = false;
            this.enemySwitch_02 = false;
            return;
        }
        else if (len === 1) {
            var speak_01 = this.role_01speak.getChildByName('label');
            var speak_02 = this.role_02speak.getChildByName('label');
            // 复活
            if (this.rescueNum >= 5) {
                this.rescueNum = 0;
                if (this.roleParent._children[0].name === "role_01") {
                    this.roleParent.addChild(this.role_02);
                    this.role_02speak.x -= 150;
                    speak_02.text = '谢谢你啊！';
                }
                else {
                    this.roleParent.addChild(this.role_01);
                    speak_01.text = '谢谢你啊！';
                    this.role_01speak.x += 150;
                }
            }
            else {
                // 待复活提示
                if (this.roleParent._children[0].name === "role_01") {
                    this.role_02speak.alpha = 1;
                    this.role_02speak.x = this.role_02.x;
                    speak_02.text = '连续吃5个糖果不犯错的话我就复活了';
                }
                else {
                    this.role_01speak.alpha = 1;
                    this.role_01speak.x = this.role_01.x;
                    speak_01.text = '连续吃5个糖果不犯错的话我就复活了';
                }
            }
        }
        else if (len === 2) {
            // 保持，复活状态为空
            this.rescueNum === 0;
        }
    };
    /**出现敌人
     * 创建方式决定了敌人出生的位置
     * @param mode 创建模式是左边还是右边
     * @param tagRole 目标是哪个主角
    */
    MainSceneControl.prototype.careatEnemy = function (mode, tagRole, type) {
        this.enemyCount++;
        if (tagRole !== null) {
            var enemy = Laya.Pool.getItemByCreateFun('enemy', this.enemy.create, this.enemy);
            this.enemyParent.addChild(enemy);
            enemy.name = 'enemy' + this.enemyCount; //名称唯一
            enemy.pivotX = enemy.width / 2;
            enemy.pivotY = enemy.height / 2;
            //出生位置判定,和攻击目标选择
            if (mode === 'left') {
                enemy.pos(-50, 300);
            }
            else if (mode === 'right') {
                enemy.pos(800, 300);
            }
            else if (mode === 'target') {
                if (tagRole.x < Laya.stage.width / 2 && tagRole.x > 0) {
                    enemy.pos(-50, 300);
                }
                else if (tagRole.x >= Laya.stage.width / 2 && tagRole.x < Laya.stage.width) {
                    enemy.pos(800, 300);
                }
            }
            enemy['Enemy'].slefTagRole = tagRole;
            enemy['Enemy'].enemyType = type;
            enemy['Enemy'].randomAttackPoint();
            // 默认属性不可见
            var propertyShow = enemy.getChildByName('propertyShow');
            if (!this.suspend) {
                propertyShow.alpha = 0;
            }
            else {
                propertyShow.alpha = 1;
            }
            return enemy;
        }
    };
    /** 敌人的层级进行排序
   * 规则是判断y轴，y坐标越低的越靠前
  */
    MainSceneControl.prototype.enemyOrder = function () {
        for (var i = 0; i < this.enemyParent._children.length; i++) {
            this.enemyParent._children[i].zOrder = Math.round(this.enemyParent._children[i].y);
        }
    };
    /**属性刷新显示规则,血量显示一定是整数，并且是10的倍数
    * 根据时间线的增长，怪物的属性不断增强
    */
    MainSceneControl.prototype.enemyPropertyUpdate = function () {
        if (this.timerControl % 500 === 0) {
            // 血量增长
            this.enemyProperty.blood += 50;
            // 攻击力增长
            this.enemyProperty.attackValue += 1;
            // 防御力增长
            this.enemyProperty.defense += 1;
            // 出怪时间增长,这里会有个最短间隔
            if (this.enemyProperty.creatInterval > 500) {
                this.enemyProperty.creatInterval -= 1;
            }
        }
    };
    /**属性刷新显示规则*/
    MainSceneControl.prototype.onUpdate = function () {
        // 时刻对敌人的层级进行排序
        this.enemyOrder();
        // 记录时间
        this.timerControl += 1;
        // 根据时间线，刷新怪物属性
        this.enemyPropertyUpdate();
        // 角色死亡复活状况
        this.roleDeathState();
        // 通过时间间隔产生敌人，左右产生的敌人不一样
        // 左
        if (this.enemySwitch_01) {
            var nowTime = Date.now();
            if (nowTime - this.enemyTime_01 > this.enemyProperty.creatInterval) {
                this.enemyTime_01 = nowTime;
                this.enemyTagRole = this.role_01;
                this.careatEnemy('left', this.role_01, 'infighting');
                this.enemyTagRole = null;
            }
        }
        // 右
        if (this.enemySwitch_02) {
            var nowTime = Date.now();
            if (nowTime - this.enemyTime_02 > this.enemyProperty.creatInterval) {
                this.enemyTime_02 = nowTime;
                this.enemyTagRole = this.role_02;
                this.careatEnemy('right', this.role_02, 'infighting');
                this.enemyTagRole = null;
            }
        }
    };
    MainSceneControl.prototype.onDisable = function () {
    };
    return MainSceneControl;
}(Laya.Script));
exports.default = MainSceneControl;
},{}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Tool_1 = require("./Tool");
var OperationButton = /** @class */ (function (_super) {
    __extends(OperationButton, _super);
    function OperationButton() {
        return _super.call(this) || this;
    }
    OperationButton.prototype.onEnable = function () {
        this.initProperty();
        this.buttonClink();
    };
    OperationButton.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default);
        this.candyParent = this.mainSceneControl.candyParent;
        this.candyParent_Move = this.mainSceneControl.candyParent_Move;
        this.operationSwitch = true;
        this.rightCount = 0;
        this.clicksCount = 0;
        this.clicksNameArr = [];
    };
    /**操作按钮的点击事件*/
    OperationButton.prototype.buttonClink = function () {
        for (var i = 0; i < this.self._children.length; i++) {
            this.self._children[i].on(Laya.Event.MOUSE_DOWN, this, this.down);
            this.self._children[i].on(Laya.Event.MOUSE_MOVE, this, this.move);
            this.self._children[i].on(Laya.Event.MOUSE_UP, this, this.up);
            this.self._children[i].on(Laya.Event.MOUSE_OUT, this, this.out);
        }
    };
    /**判断我按下的按钮和准备位置的糖果是否匹配;
     * 如果匹配，那么看下糖果上面写的几次点击次数，需要连续点击到这个次数才可以吃糖果
     * 如果次数没有达到，却点了另一种按钮，那么前面的次数会重置，并且出现一个怪物
     * 如果不匹配，说明点错了，糖果会跳到外面变成一个怪物,则出现一个怪物
     */
    OperationButton.prototype.down = function (event) {
        this.clicksCount++;
        switch (event.currentTarget.name) {
            case 'redButton':
                this.clicksNameArr.push('redCandy___');
                break;
            case 'yellowButton':
                this.clicksNameArr.push('yellowCandy');
                break;
            case 'greenButton':
                this.clicksNameArr.push('greenCandy_');
                break;
            case 'blueButton':
                this.clicksNameArr.push('blueCandy__');
                break;
            default: break;
        }
        // 两两对比判断之后清空这个数组，当点击次数是2的倍数时进行对比
        if (this.clicksCount % 2 === 0 && this.clicksCount >= 2) {
            this.compareName();
            this.clicksNameArr = []; //对比后清空
        }
        else {
            console.log(this.clicksCount);
        }
        event.currentTarget.scale(0.9, 0.9);
    };
    /**对比名称
     * 点击次数和组数都是固定的，分别是10次和5组
     *所以点击了2次对应的就是第0组，4次就是第1组......
    */
    OperationButton.prototype.compareName = function () {
        var nameArr = [];
        var first_i;
        var i_02;
        for (var i = 0; i < this.candyParent._children.length; i++) {
            var candy = this.candyParent._children[i];
            if (candy["Candy"].group === (this.clicksCount - 2) / 2) { //每点两次对应的糖果组
                nameArr.push(candy.name);
                if (nameArr.length >= 2) {
                    nameArr[0] = nameArr[0].substring(0, 11);
                    nameArr[1] = nameArr[1].substring(0, 11);
                    // 对比两个数组看看是否相等，排序，转成字符串方可对比；
                    if (nameArr.sort().toString() === this.clicksNameArr.sort().toString()) {
                        console.log("点对了");
                        this.candyMove_Role(candy);
                        this.candyMove_Role(this.candyParent._children[first_i]);
                    }
                    else {
                        console.log('点错了！');
                        this.candybecomeEnemy(candy);
                        this.candybecomeEnemy(this.candyParent._children[first_i]);
                    }
                }
                else if (nameArr.length === 1) { //循环到第一个的时候记录这个糖果的标签
                    first_i = i;
                }
            }
        }
    };
    /**糖果移动到主角规则*/
    OperationButton.prototype.candyMove_Role = function (candy) {
        // 第一个糖果移动
        if (candy.x < Laya.stage.width / 2) {
            candy["Candy"].candyTagRole = this.mainSceneControl.role_01;
        }
        else {
            candy["Candy"].candyTagRole = this.mainSceneControl.role_02;
        }
    };
    /**玩法1点击事件*/
    OperationButton.prototype.game1 = function (event) {
        if (!this.operationSwitch) {
            return;
        }
        if (this.candyParent._children.length > 0) {
            var candy = this.candyParent._children[0];
            var clicksLabel = candy.getChildByName('clicksLabel');
            // 名称切割
            candy.name = candy.name.substring(0, 11);
            var group = candy.name + event.currentTarget.name;
            var matching_01 = 'redCandy___' + 'redButton';
            var matching_02 = 'yellowCandy' + 'yellowButton';
            var matching_03 = 'greenCandy_' + 'greenButton';
            var matching_04 = 'blueCandy__' + 'blueButton';
            if (group === matching_01 || group === matching_02 || group === matching_03 || group === matching_04) {
                clicksLabel.text = (Number(clicksLabel.text) - 1).toString();
                // 消除重置点击次数
                if (Number(clicksLabel.text) === 0) {
                    this.rightCount += 1;
                    this.candyMove(candy);
                    candy.removeSelf();
                    this.createNewCandy();
                    for (var i = 0; i < this.candyParent._children.length; i++) {
                        // 下移一格
                        this.candyParent._children[i]['Candy'].moveAStep = true;
                    }
                }
            }
            else {
                this.rightCount = 0;
                this.candybecomeEnemy(candy);
                candy.removeSelf();
                this.createNewCandy();
                for (var i = 0; i < this.candyParent._children.length; i++) {
                    // 下移
                    this.candyParent._children[i]['Candy'].moveRules();
                }
            }
        }
    };
    /**在最后面重新生成一个糖果加入队列*/
    OperationButton.prototype.createNewCandy = function () {
        var candy = this.mainSceneControl.createCandy();
        // 这里this.candyParent._children.length - 2，因为已经删除一个了
        var y = this.candyParent._children[this.candyParent._children.length - 2].y;
        candy.y = y - (candy['Candy'].spaceY + candy.height);
        candy['Candy'].newCandy = true;
        candy['Candy'].timerControl = 20;
    };
    /**复制一个糖果到移动节点并移动
     *  @param candy 复制这个糖果
    */
    OperationButton.prototype.candyMove = function (candy) {
        for (var i = 0; i < 2; i++) {
            var copyCandy = this.copyTheCandy(candy);
            if (i === 0) {
                copyCandy['Candy'].candyTagRole = this.mainSceneControl.role_01;
            }
            else {
                copyCandy['Candy'].candyTagRole = this.mainSceneControl.role_02;
            }
        }
    };
    /**复制糖果
     *  @param candy 复制这个糖果
    */
    OperationButton.prototype.copyTheCandy = function (candy) {
        var prefabCandy = this.mainSceneControl.candy;
        var copyCandy = Laya.Pool.getItemByCreateFun('candy', prefabCandy.create, prefabCandy);
        this.candyParent_Move.addChild(copyCandy);
        copyCandy.x = candy.x;
        copyCandy.y = candy.y;
        var candyName = candy.name.substring(0, 11);
        copyCandy.name = candyName;
        var url_01 = 'candy/黄色糖果.png';
        var url_02 = 'candy/红色糖果.png';
        var url_03 = 'candy/蓝色糖果.png';
        var url_04 = 'candy/绿色糖果.png';
        var pic = copyCandy.getChildByName('pic');
        switch (candyName) {
            case 'yellowCandy':
                pic.loadImage(url_01);
                break;
            case 'redCandy___':
                pic.loadImage(url_02);
                break;
            case 'blueCandy__':
                pic.loadImage(url_03);
                break;
            case 'greenCandy_':
                pic.loadImage(url_04);
                break;
            default:
                break;
        }
        var clicksLabel = candy.getChildByName('clicksLabel');
        clicksLabel.text = '';
        return copyCandy;
    };
    /**点错后，糖果跳到地上变成1个敌人
     * 这个敌人是随机在一个范围内出生
     * @param candy 这个糖果的信息
    */
    OperationButton.prototype.candybecomeEnemy = function (candy) {
        // 左右两个方向
        var point; //固定圆心点
        var direction; //左右，用来判断位置和enemyTarget
        var enemyTarget; //攻击对象
        // 最终位置
        var moveX;
        var moveY;
        if (candy.x < Laya.stage.width / 2) {
            direction = 'left';
            enemyTarget = this.mainSceneControl.role_01;
            point = new Laya.Point(candy.x - 150, candy.y);
        }
        else {
            direction = 'right';
            enemyTarget = this.mainSceneControl.role_02;
            point = new Laya.Point(candy.x + 150, candy.y);
        }
        // 随机取点函数
        moveX = Tool_1.default.getRoundPos(Math.random() * 360, Math.floor(Math.random() * 50), point).x;
        moveY = Tool_1.default.getRoundPos(Math.random() * 360, Math.floor(Math.random() * 50), point).y;
        Laya.Tween.to(candy, { x: moveX, y: moveY }, 500, null, Laya.Handler.create(this, function () {
            // 触发主角预警并生成1个敌人
            this.selfScene['MainSceneControl'].role_01['Role'].role_Warning = true;
            this.selfScene['MainSceneControl'].role_02['Role'].role_Warning = true;
            var enemy = this.mainSceneControl.careatEnemy(direction, enemyTarget, 'range');
            enemy.pos(candy.x, candy.y);
            candy.removeSelf();
        }, []), 0);
    };
    //      /**点错后，糖果跳到地上变成2个敌人
    //      * 这两个敌人是随机出生地点
    //      * @param candy 复制这个糖果的信息
    //     */
    //    candybecomeEnemy_01(candy: Laya.Sprite, ): void {
    //     for (let i = 0; i < 2; i++) {
    //         let copyCandy = this.copyTheCandy(candy);
    //         // 左右两个方向
    //         let point;//固定圆心点
    //         let direction;//左右，用来判断位置和enemyTarget
    //         let enemyTarget;//攻击对象
    //         // 最终位置
    //         let moveX;
    //         let moveY;
    //         if (i === 0) {
    //             direction = 'left';
    //             enemyTarget = this.mainSceneControl.role_01;
    //             point = new Laya.Point(copyCandy.x - 250, copyCandy.y);
    //         } else {
    //             direction = 'right';
    //             enemyTarget = this.mainSceneControl.role_02;
    //             point = new Laya.Point(copyCandy.x + 250, copyCandy.y);
    //         }
    //         // 随机取点函数
    //         moveX = tools.getRoundPos(Math.random() * 360, Math.floor(Math.random() * 50), point).x;
    //         moveY = tools.getRoundPos(Math.random() * 360, Math.floor(Math.random() * 50), point).y;
    //         Laya.Tween.to(copyCandy, { x: moveX, y: moveY }, 500, null, Laya.Handler.create(this, function () {
    //             // 触发预警并生成2个敌人
    //             this.selfScene['MainSceneControl'].role_01['Role'].role_Warning = true;
    //             this.selfScene['MainSceneControl'].role_02['Role'].role_Warning = true;
    //             let enemy = this.mainSceneControl.careatEnemy(direction, enemyTarget, 'range');
    //             enemy.pos(copyCandy.x, copyCandy.y);
    //             copyCandy.removeSelf();
    //         }, []), 0);
    //     }
    // }
    /**移动*/
    OperationButton.prototype.move = function (event) {
        if (!this.operationSwitch) {
            return;
        }
    };
    /**抬起*/
    OperationButton.prototype.up = function (event) {
        if (!this.operationSwitch) {
            return;
        }
        event.currentTarget.scale(1, 1);
    };
    /**出屏幕*/
    OperationButton.prototype.out = function (event) {
        if (!this.operationSwitch) {
            return;
        }
        event.currentTarget.scale(1, 1);
    };
    OperationButton.prototype.onUpdate = function () {
        // 主角全部死亡游戏结束
        if (this.mainSceneControl.roleParent._children.length === 0) {
            this.operationSwitch = false;
            return;
        }
        // 如果糖果被点完了，那么重新生成10个糖果
        if (this.candyParent._children.length === 0) {
            this.clicksCount = 0;
            this.mainSceneControl.createWaveCandys();
        }
        // 时间到了才可以进行操作
        if (this.mainSceneControl.timerControl > 200) {
            this.operationSwitch = true;
        }
    };
    OperationButton.prototype.onDisable = function () {
    };
    return OperationButton;
}(Laya.Script));
exports.default = OperationButton;
},{"./MainSceneControl":7,"./Tool":12}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Role = /** @class */ (function (_super) {
    __extends(Role, _super);
    function Role() {
        return _super.call(this) || this;
    }
    Role.prototype.onEnable = function () {
        this.initProperty();
        this.bucketClink();
        this.rolePropertySet();
    };
    /**初始化*/
    Role.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfHealth = this.self.getChildByName('health');
        this.propertyShow = this.self.getChildByName('propertyShow');
        // 默认属性不可见
        this.propertyShow.alpha = 0;
        this.bloodLabel = this.selfHealth.getChildByName('bloodLabel');
        this.self['Role'] = this;
        this.selfScene = this.self.scene;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default); //场景脚本组件
        this.candyParent = this.mainSceneControl.candyParent;
        this.scoreLabel = this.mainSceneControl.scoreLabel;
        this.nowTime = Date.now();
    };
    /**主角的属性
     *两个主角属性分别计算
     *四个属性依次是，生命值，子弹攻击力，子弹发射频率和弹道速度，防御能力
    */
    Role.prototype.rolePropertySet = function () {
        if (this.self.name === 'role_01') {
            this.role_property = {
                blood: 2000,
                attackValue: 1,
                attackSpeed: 5000,
                defense: 50,
            };
        }
        else if (this.self.name === 'role_02') {
            this.role_property = {
                blood: 2000,
                attackValue: 1,
                attackSpeed: 1000,
                defense: 50,
            };
        }
    };
    /**属性实时刷新刷新*/
    Role.prototype.updateProperty = function () {
        // 血条上的血量显示、
        this.bloodLabel.text = this.role_property.blood;
        // 属性显示框内的属性显示
        // 血量
        var blood = this.propertyShow.getChildByName('blood');
        blood.text = "血量: " + this.role_property.blood;
        // 攻击力
        var attackValue = this.propertyShow.getChildByName('attackValue');
        attackValue.text = "攻击力: " + this.role_property.attackValue;
        // 攻击速度
        var attackSpeed = this.propertyShow.getChildByName('attackSpeed');
        attackSpeed.text = "攻击速度: " + this.role_property.attackSpeed;
        // 防御力
        var defense = this.propertyShow.getChildByName('defense');
        defense.text = "防御力: " + this.role_property.defense;
    };
    /**主角的点击事件
     * 和长按出现属性展示页面
     * 滑动可以拖动主角到规定的位置
    */
    Role.prototype.bucketClink = function () {
        this.self.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.self.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.self.on(Laya.Event.MOUSE_UP, this, this.up);
        this.self.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**按下,给予目标位置，糖果走向目标位置;
     * 并且分数增加*/
    Role.prototype.down = function (event) {
    };
    /**移动*/
    Role.prototype.move = function (event) {
    };
    /**抬起*/
    Role.prototype.up = function () {
        this.self.scale(1, 1);
    };
    /**出屏幕*/
    Role.prototype.out = function () {
        this.self.scale(1, 1);
    };
    /**创建主角子弹
     * 主角1位置的子弹
    */
    Role.prototype.careatBullet = function () {
        var bullet = Laya.Pool.getItemByCreateFun('roleBullet', this.roleBullet.create, this.roleBullet);
        this.bulletParent.addChild(bullet);
        bullet.pos(this.self.x, this.self.y);
        this.lockedBulletTarget(bullet);
        bullet['Bullet'].belongRole = this.self;
    };
    /**锁定最近的那个敌人
    * 如果没有敌人，且屏幕上敌人存在，那么会锁定一个敌人
    * 左右判断原则是，如果是左边角色发射子弹，那么先观察左边有没有敌人，如果有那么优先攻击左边
   */
    Role.prototype.lockedBulletTarget = function (bullet) {
        // 两点之间的距离数组
        var distanceArr = [];
        var enemyParent = this.mainSceneControl.enemyParent;
        for (var i = 0; i < enemyParent._children.length; i++) {
            var enemy = enemyParent._children[i];
            //两点之间的距离
            var dx = enemy.x - this.self.x;
            var dy = enemy.y - this.self.y;
            var distance = Math.sqrt(dx * dx + dy * dy);
            var object = {
                distance: distance,
                name: enemy.name
            };
            distanceArr.push(object);
        }
        // 距离排序
        var compare = function (obj1, obj2) {
            var val1 = obj1.distance;
            var val2 = obj2.distance;
            if (val1 < val2) {
                return -1;
            }
            else if (val1 > val2) {
                return 1;
            }
            else {
                return 0;
            }
        };
        // 找出距离最近的
        distanceArr.sort(compare);
        if (distanceArr.length > 0) {
            bullet['Bullet'].bulletTarget = enemyParent.getChildByName(distanceArr[0].name);
        }
    };
    Role.prototype.onUpdate = function () {
        // 血量低于0则死亡
        if (this.role_property.blood <= 0) {
            this.self.removeSelf();
        }
        // 刷新属性
        this.updateProperty();
        //创建子弹
        if (this.role_Warning) {
            var nowTime = Date.now();
            if (nowTime - this.nowTime > this.role_property.attackSpeed) {
                this.careatBullet();
                this.nowTime = nowTime;
            }
        }
    };
    Role.prototype.onDisable = function () {
    };
    return Role;
}(Laya.Script));
exports.default = Role;
},{"./MainSceneControl":7}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Bullet = /** @class */ (function (_super) {
    __extends(Bullet, _super);
    function Bullet() {
        return _super.call(this) || this;
    }
    Bullet.prototype.onEnable = function () {
        this.init();
    };
    /**初始化一些属性*/
    Bullet.prototype.init = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default);
        this.enemyParent = this.mainSceneControl.enemyParent;
        this.hintWord = this.mainSceneControl.hintWord;
        this.selfSpeed = 15;
        // 属性赋值
        this.role_01 = this.selfScene['MainSceneControl'].role_01;
        this.attackValue = this.role_01['Role'].role_property.attackValue;
        this.self['Bullet'] = this;
    };
    /**子弹移动
     * 子弹只有当目标对象和目标对象在父节点内的时候才会移动
     * 目标对象永远存在，只不过他被移除了，所以bulletTarget永不为空，只能判断父节点是否存在
     * 若果这个目标被移除了，那么发出去的子弹会沿着和主角的方向继续移动到500；
    */
    Bullet.prototype.bulletMove = function () {
        if (this.bulletTarget && this.bulletTarget.parent) {
            // x,y分别相减是两点连线向量
            var point = new Laya.Point(this.bulletTarget.x - this.self.x, this.bulletTarget.y - this.self.y);
            // 归一化，向量长度为1。
            point.normalize();
            //向量相加
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
        }
        else {
            // 沿着自己和发射自己的主角方向移动
            var point = new Laya.Point(this.self.x - this.belongRole.x, this.self.y - this.belongRole.y);
            // 归一化，向量长度为1。
            point.normalize();
            //向量相加
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
        }
    };
    Bullet.prototype.onUpdate = function () {
        // 移动
        this.bulletMove();
        // 超出横向范围消失，一般不会触发
        if (this.self.x > 750 + this.self.width + 50 || this.self.x < -this.self.width) {
            this.self.removeSelf();
        }
        // 射程为500，超过射程消失
        if (this.self.y <= Laya.stage.width * 1 / 3) {
            this.self.removeSelf();
            return;
        }
        // 碰到任何一个怪物，子弹消失怪物掉血
        // 子弹击中怪物怪物会后退
        for (var i = 0; i < this.enemyParent._children.length; i++) {
            var enemy = this.enemyParent._children[i];
            var differenceX = Math.abs(enemy.x - this.self.x);
            var differenceY = Math.abs(enemy.y - this.self.y);
            if (differenceX < 10 && differenceY < 10) {
                this.bulletAttackRules(enemy);
                this.self.removeSelf();
            }
        }
    };
    /**子弹对敌人造成伤害的公式
     * 子弹击中敌人，敌人会被击退
      * 攻击力-敌人防御如果大于零则造成伤害，否则不造成伤害
      * 掉血显示值，伤害小于零则显示0
      * 并且有动画提示文字
     */
    Bullet.prototype.bulletAttackRules = function (enemy) {
        // 通过攻击力计算掉血状况
        var damage = this.attackValue - enemy['Enemy'].enemyProperty.defense;
        if (damage > 0) {
            enemy['Enemy'].enemyProperty.blood -= damage;
        }
        else {
            damage = 0;
        }
        // 飘字
        this.hintWordMove(enemy, damage);
        // 触发击退
        enemy['Enemy'].repelTimer = 2;
    };
    Bullet.prototype.hintWordMove = function (enemy, damage) {
        // 敌人被消灭了，则不执行这个
        if (enemy.parent === null) {
            return;
        }
        // 创建提示动画对象
        var hintWord = Laya.Pool.getItemByCreateFun('candy', this.hintWord.create, this.hintWord);
        hintWord.pos(100, -150);
        enemy.addChild(hintWord);
        var proPertyType = '主角掉血';
        var numberValue;
        hintWord['HintWord'].initProperty(proPertyType, damage);
    };
    Bullet.prototype.onDisable = function () {
        Laya.Pool.recover('bullet', this.self);
    };
    return Bullet;
}(Laya.Script));
exports.default = Bullet;
},{"./MainSceneControl":7}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Suspend = /** @class */ (function (_super) {
    __extends(Suspend, _super);
    function Suspend() {
        return _super.call(this) || this;
    }
    Suspend.prototype.onEnable = function () {
        this.init();
        this.bucketClink();
    };
    /**初始化必要属性*/
    Suspend.prototype.init = function () {
        this.suspend = false;
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.roleParent = this.selfScene['MainSceneControl'].roleParent;
        this.enemyParent = this.selfScene['MainSceneControl'].enemyParent;
    };
    /**主角的点击事件
    * 和长按出现属性展示页面
    * 滑动可以拖动主角到规定的位置
   */
    Suspend.prototype.bucketClink = function () {
        this.self.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.self.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.self.on(Laya.Event.MOUSE_UP, this, this.up);
        this.self.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**按下,给予目标位置，糖果走向目标位置;
     * 并且分数增加*/
    Suspend.prototype.down = function (event) {
        var suspend = this.selfScene['MainSceneControl'].suspend;
        // 打开和关闭敌人的属性
        for (var i = 0; i < this.enemyParent._children.length; i++) {
            var enemy = this.enemyParent._children[i];
            var propertyShow = enemy.getChildByName('propertyShow');
            if (!suspend) {
                this.selfScene['MainSceneControl'].suspend = true;
                propertyShow.alpha = 1;
                // Laya.stage.renderingEnabled = true;
            }
            else {
                this.selfScene['MainSceneControl'].suspend = false;
                propertyShow.alpha = 0;
                // Laya.stage.renderingEnabled = false;
            }
        }
        // 主角的属性
        for (var i = 0; i < this.roleParent._children.length; i++) {
            var role = this.roleParent._children[i];
            var propertyShow = role.getChildByName('propertyShow');
            if (!suspend) {
                this.selfScene['MainSceneControl'].suspend = true;
                propertyShow.alpha = 1;
            }
            else {
                this.selfScene['MainSceneControl'].suspend = false;
                propertyShow.alpha = 0;
            }
        }
    };
    /**移动*/
    Suspend.prototype.move = function (event) {
    };
    /**抬起*/
    Suspend.prototype.up = function () {
        this.self.scale(1, 1);
    };
    /**出屏幕*/
    Suspend.prototype.out = function () {
        this.self.scale(1, 1);
    };
    /**暂停状态显示所有属性框，非暂停状态不显示属性框*/
    Suspend.prototype.suspendedState = function () {
        if (this.suspend) {
        }
    };
    Suspend.prototype.onDisable = function () {
    };
    return Suspend;
}(Laya.Script));
exports.default = Suspend;
},{}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tools;
(function (tools) {
    /**
     *
     * @param n
     * @param m 第二个随机数不存在的话默认为10
     */
    function random(n, m) {
        m = m || 10;
        var c = m - n + 1;
        return Math.floor(Math.random() * c + n);
    }
    tools.random = random;
    /**
     *
     * @param arr
     * @param count
     * 从数组中随机取出count个数
     */
    function getRandomArrayElements(arr, count) {
        var shuffled = arr.slice(0), i = arr.length, min = i - count, temp, index;
        while (i-- > min) {
            index = Math.floor((i + 1) * Math.random());
            temp = shuffled[index];
            shuffled[index] = shuffled[i];
            shuffled[i] = temp;
        }
        return shuffled.slice(min);
    }
    tools.getRandomArrayElements = getRandomArrayElements;
    function getArrayDifElements(arr, count) {
        var result = [];
        var i = 0;
        for (i; i < count; i++) {
            var temp = getDiffEle(arr.slice(), result, i);
            result.push(temp);
        }
        return result;
    }
    tools.getArrayDifElements = getArrayDifElements;
    function getDiffEle(arr, result, place) {
        var indexArr = [];
        var i = 0;
        for (i; i < arr.length - place; i++) {
            indexArr.push(i);
        }
        var ranIndex = Math.floor(Math.random() * indexArr.length);
        if (result.indexOf(arr[ranIndex]) === -1) {
            var backNum = arr[ranIndex];
            arr[ranIndex] = arr[indexArr.length - 1];
            return backNum;
        }
        else {
            arr.splice(ranIndex, 1);
            return getDiffEle(arr, result, place);
        }
    }
    tools.getDiffEle = getDiffEle;
    tools.roleDragCan = false;
    function copydata(obj) {
        var ret = {};
        Object.getOwnPropertyNames(obj).forEach(function (name) {
            ret[name] = obj[name];
        });
        return ret;
    }
    tools.copydata = copydata;
    /**
     * 数组复制
     */
    function fillArray(value, len) {
        var arr = [];
        for (var i = 0; i < len; i++) {
            arr.push(value);
        }
        return arr;
    }
    tools.fillArray = fillArray;
    /**
     *
     * @param angle 角度
     * @param XY 必须包含y上的速度
     */
    function speedByAngle(angle, XY) {
        if (angle % 90 === 0 || !angle) {
            console.error("计算的角度异常,需要查看：", angle);
            // debugger
            return;
        }
        var speedXY = { x: 0, y: 0 };
        speedXY.y = XY.y;
        speedXY.x = speedXY.y / Math.tan(angle * Math.PI / 180);
        return speedXY;
    }
    tools.speedByAngle = speedByAngle;
    function speedXYByAngle(angle, speed) {
        if (angle % 90 === 0 || !angle) {
            //debugger
        }
        var speedXY = { x: 0, y: 0 };
        speedXY.x = speed * Math.cos(angle * Math.PI / 180);
        speedXY.y = speed * Math.sin(angle * Math.PI / 180);
        return speedXY;
    }
    tools.speedXYByAngle = speedXYByAngle;
    function speedLabelByAngle(angle, speed, speedBate) {
        // if (angle % 90 === 0 || !angle) {
        //     debugger
        // }
        var speedXY = { x: 0, y: 0 };
        var selfAngle = angle;
        var defaultSpeed = speed;
        var bate = speedBate || 1;
        if (selfAngle % 90 === 0) {
            if (selfAngle === 0 || selfAngle === 360) {
                speedXY.x = Math.abs(defaultSpeed) * bate;
            }
            else if (selfAngle === 90) {
                speedXY.y = Math.abs(defaultSpeed) * bate;
            }
            else if (selfAngle === 180) {
                speedXY.x = -Math.abs(defaultSpeed) * bate;
            }
            else {
                speedXY.y = -Math.abs(defaultSpeed) * bate;
            }
        }
        else {
            var tempXY = tools.speedXYByAngle(selfAngle, defaultSpeed);
            speedXY.x = tempXY.x;
            speedXY.y = tempXY.y;
            if (selfAngle > 0 && selfAngle < 180) {
                speedXY.y = Math.abs(speedXY.y) * bate;
            }
            else {
                speedXY.y = -Math.abs(speedXY.y) * bate;
            }
            if (selfAngle > 90 && selfAngle < 270) {
                speedXY.x = -Math.abs(speedXY.x) * bate;
            }
            else {
                speedXY.x = Math.abs(speedXY.x) * bate;
            }
        }
        return speedXY;
    }
    tools.speedLabelByAngle = speedLabelByAngle;
    /**
     *
     * @param degree 角度
     * 根据角度计算弧度
     */
    function getRad(degree) {
        return degree / 180 * Math.PI;
    }
    tools.getRad = getRad;
    /**
     * 求圆上的点的坐标~
     */
    function getRoundPos(angle, radius, centPos) {
        var center = centPos; //圆心坐标
        var radius = radius; //半径
        var hudu = (2 * Math.PI / 360) * angle; //90度角的弧度
        var X = center.x + Math.sin(hudu) * radius; //求出90度角的x坐标
        var Y = center.y - Math.cos(hudu) * radius; //求出90度角的y坐标
        return { x: X, y: Y };
    }
    tools.getRoundPos = getRoundPos;
    /**
     * 转化大的数字
     */
    function converteNum(num) {
        if (typeof (num) !== "number") {
            console.warn("要转化的数字并不为number");
            return num;
        }
        var backNum;
        if (num < 1000) {
            backNum = "" + num;
        }
        else if (num < 1000000) {
            backNum = "" + (num / 1000).toFixed(1) + "k";
        }
        else if (num < 10e8) {
            backNum = "" + (num / 1000000).toFixed(1) + "m";
        }
        else {
            backNum = "" + num;
        }
        return backNum;
    }
    tools.converteNum = converteNum;
})(tools = exports.tools || (exports.tools = {}));
exports.default = tools;
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
